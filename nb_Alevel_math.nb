(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    875613,      16380]
NotebookOptionsPosition[    863025,      16165]
NotebookOutlinePosition[    863604,      16185]
CellTagsIndexPosition[    863561,      16182]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"2", "-", "x"}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{"4", "-", "x"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"5", "+", "x"}], ")"}]}], "-", "20", "-", "6", "+", 
   RowBox[{"4", 
    RowBox[{"(", 
     RowBox[{"4", "-", "x"}], ")"}]}], "+", 
   RowBox[{"10", 
    RowBox[{"(", 
     RowBox[{"2", "-", "x"}], ")"}]}], "+", 
   RowBox[{"3", 
    RowBox[{"(", 
     RowBox[{"5", "+", "x"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9457212250484505`*^9, 3.945721251975559*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"99bbf292-5305-014d-8363-5168c94fc499"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "15"}], "+", 
  RowBox[{"11", " ", "x"}], "+", 
  SuperscriptBox["x", "2"], "-", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{3.9457212524393177`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"5c5e0241-97b4-5f4a-a7ad-40b5ef8a7ab5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mt", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "-", "x"}], ",", " ", "3", ",", " ", 
       RowBox[{"-", "2"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"4", "-", "x"}], ",", " ", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "10", ",", " ", 
       RowBox[{
        RowBox[{"-", "5"}], "-", "x"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", "mt", "]"}]}], "Input",
 CellChangeTimes->{{3.945721362401886*^9, 3.9457214091604652`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"38aadc8d-8029-0a49-812e-da7c75e5c141"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "15"}], "+", 
  RowBox[{"11", " ", "x"}], "+", 
  SuperscriptBox["x", "2"], "-", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{3.945721409869074*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b7fe3355-3eef-1546-b7e0-96480c5b3f8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mt", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"6", ",", " ", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mt", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"mt", "//", "Eigenvalues"}]}], "Input",
 CellChangeTimes->{{3.9457162271466923`*^9, 3.945716293696682*^9}, {
  3.94571632630987*^9, 
  3.945716332744215*^9}},ExpressionUUID->"31f549c5-2168-604c-a0ba-\
c4fc3da9c14a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "5"}], "3"},
     {"6", 
      RowBox[{"-", "2"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.945716263420162*^9, {3.945716294113344*^9, 3.9457162969842033`*^9}},
 CellLabel->
  "Out[13]//MatrixForm=",ExpressionUUID->"8010726f-f8c7-9c4d-9a3f-\
df2e2e845ec3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "8"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.945716263420162*^9, {3.945716294113344*^9, 3.945716297002865*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"8969e799-1a60-9446-b10a-6fce0f38925a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "9.8"}], ";"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{"2.5", "g"}], "400"]}], "Input",
 CellChangeTimes->{{3.9451937297109165`*^9, 3.945193773356592*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"55430c88-6bec-d142-9fd3-c9913d799ea6"],

Cell[BoxData["0.06125`"], "Output",
 CellChangeTimes->{3.9451937774669533`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"dce97ba1-94de-4a4b-ac40-9844094ca047"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Tan", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.942798158314598*^9, 3.942798200628311*^9}, {
  3.9427982757184544`*^9, 3.942798341611492*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"f5dcb1d6-aa3f-3047-a473-d1ddea6a2732"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"x", "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "3"], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["x", "5"]}], "15"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "6"],
    SeriesData[$CellContext`x, 0, {}, 1, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[1, 3], 0, 
    Rational[2, 15]}, 1, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.942798290483879*^9, 3.9427982950307217`*^9}, {
  3.942798328611286*^9, 3.9427983422831306`*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"53a36821-c8bb-0147-99f4-6107e6778df3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "revolution"}], "*)"}], "\n", 
  RowBox[{"RevolutionPlot3D", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"3", "x"}], "-", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"RevolutionAxis", "->", "\"\<x\>\""}], ",", 
    RowBox[{"AspectRatio", "->", "1"}], ",", " ", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.5", ",", " ", "White"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9426193783157253`*^9, 3.9426193942368526`*^9}, {
  3.9426194259782085`*^9, 3.9426194747736206`*^9}, {3.9426195261174316`*^9, 
  3.942619549262991*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"4f3ae16d-172c-2f4c-9832-a9a1b6f22595"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
klZt1yE8wW2yumxe26MnUQEW7TqE4nb+ZfKpXtfComIftusQipt/h/yQVbbh
UUkN7TqE4tb/84KaNx0iovy/t+sQituCyIHe3y9FRilYt+sQitsS+ZCfId1e
RDnvbtchFLeh0QW+Fruio0x6tusQipuKkpKbwWcu6rNOuw6huN3B8QbYePPB
8QZWMvFWguMNZDHxFojjDRgz8XYbxxuYx8TbBxxvgI03DRxvwI6JNwMcb4CN
Nwscb4CNNzMcb2ALE2+7cLyBFibehuF4A2y8LcXxBoKYeJuB+Q1YMfz2BfMb
iGX4bQ7mNxDA8BuH+Q1kMPwWiPkN+DD8tg3zG1jP8JsS5jeYwvCbN+Y3OJnh
NwnMbzCH4bdnmN+gAcNvcpjf4GyG3zpifoPjGH6bifkNejL8JtZTMI6ppztx
PQWzmHo6B9dTsJSpp99wPQU7mHr6GtdTGPzvegrd/l1PYei/6ynsx9RTD1xP
Ycu/6ylcydTTI7ieQiumni7G9RSeZOqpGa6nMJ2pp+pYv4HjjH6Tw/oNvGf0
2y2s30Awo9+WY/0G1jP67QDWbzAt8L/6rR/Wb3AOo9/GYf0GWxP/q9/mYP0G
S+b9V7/FYf0GZzD6LRnrN7iR0W/zsX6D9xj9poL1G6zp+1/9NgXrN6jF6Dc3
3C8AjukXbHG/APYw/YIl7heANtMv3ML9AtjB9Aujcb8Akph+IQX3CyCU6RdC
cb8AbZl+wQD3C/A50y98xf0CjGD6hXu4X4AaTL8QhfsFWL/0v/3CZ9wvwKdM
vyCZ194vwLlMv7AK96eglOlPAe5PQTzTn47E/SnYzPSndbg/BbFMf/oa96fg
HNOfHsD9KTBj+tMU3J+C8Ux/Og/3p2AN05/+wv0pcGf6Ux73p6DZ7L/96TXc
n4Iypj/NwP0peMf0pw9wfwruMv1ps/ahOOdXR43YeYip/EVhHmLEzkOOrX4h
zEOM2HlI6bZFb/x8Hhix85DFTjsa0kIeGrHzkL5d04R5iBE7D1G78UqYhxix
8xClVQ+FeYgROw9pkji0Qn9CmBE7D1mf0SMs69QzI3YeYrNtywq7T+FG7Dxk
2ySZ2RslI4zYeUiOmq1Ko2akEZmH8JrJ14y9fwPTRqMVO13ecOeyXylKhRYB
sp7t/tZo3Sff6B2F58fqLy8GCeblIyUkasDa6pEWpSlfOKnsV8v8b9bQ9e76
ib9ibYq5hN5Oo5Z5VIAnvWs8M8IagPSG0m3ZJanclk3x3331G+n6G7dJ1Q9i
KrgLSseluknXgqsZ9eVhDm1gdceI2qmqmZz9yoErSuJa6XqXOu/Y2OBqzkpy
5ie74How/VOrlrG3FPxeu6amc2Q2V2NTrx60WhKS9ScqucldJ/zhfp537aGe
3QQi9CS/hTnIwu0NgXsc9/3gNpYt0l+gLQ3JetGHLlsHHaznFC0L/Q5GtoIR
3tLHNIwVoM+KeUaPm3K5c7I++0oSZCBZ1/7l032mbyNXpDhkdkCghOgXZegY
lBQ+ZEUelxoZWNh5nhxdX7EpNHWbezO3ev2P1H4/JWHvdr+owIULgsb0v5vP
XbbX8joXLk/Xzew+Gw2wbOWWOB+/8FVWGs6ykn0f5tAZdjjwuaN9TgH3c1fL
r1sdFen697k9vc3kJHiLYG6gRm8ZKOUhd9shows02n5+dbbCL+7SMwen5YuU
6HrvPubGzUhP7583R9ZDTRZGRcnv0TDuBhN37zd9NLiIU0teHTj4+N/4yVMw
Wn4C1cWj63Q7C3xP9n/jLG71vizJF3e/Mr2+uxyNqzCtjNNOTjnc4fkddWr8
8micLGmNsy/oUs09SWoNal2RS+NBy33AN35sPWd8163KbGEh9Xut1+Kv47Y0
c+kDpZrzbEqo3/35nBGjO0nwG9YWu1mXl1H/+t76PnrUU0neaXKizuCOldSP
+sMzN/QfJ81/vNbnTKpbFSB+yfrtMi//sgxvfnXZKKf0akDw777N6eOvElk+
BjiM6NOvFhCcVyyXMZQdKs+fcKxef8b0DyB4HvgccrLvYgV+5zaPcB/HOlof
dStHPRN0mKe0n7ugywhuo8aujLPeqsgbjhhhsPBgPc07cL9mWglXyE3dnrj1
e3YKxa1w2fCc/Tq1XPkXiZifJWejCW7vhvS80junkftt0zj+pMnFaILbJIPN
nie82jinGsNKy7Ar0QQ392Etw3okSfLvpa1PvY67Hk1wCzE1O+5yR5qHUi5O
l/ffjCa4tQRN0v60SJbXN15p8Lrr7WiCW52u8YqiHDn+Q1VS1pFj/tEEt68v
ve5wCAefRcvL9xUERBPc1hg9/HMpVJF/df90crje3WiC28fyKaZBEsp8ytar
uww23IsmuEn9HjhG0P0Pc29+jUJ8T3ArWbuucaNRB379hijdGefvRxPc7ha1
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
Z4wPYPE5juMHxDLx8wrHD0hm4mcyjh/QyMRPMo4fwMaPKo4f8JmJn/s4fkBH
Jn5u4PgBAUz8+OH4AXJM/Hjh+AE/mPi5huMHvGfi5yaOH3CIiZ9NOL+AHZNf
rph/QDrDP6mYf8Avhn/yMf+A+Qz/dMT8A+IZ/lmM+QeoM/zTB/MPPMXwzzzM
P/AWwz8JmH/gDIZ/fmP+gV8Z/qnD/ANZ/hmN+Qf6MfzjgPkZdGX4+QWuX8CS
qV8Dcf0CTUz96o7rF2j7d/2Cmkz9apNrr18w7N/1C2oy9esXrl9wIFO/+uH6
Bf3/Xb8gx9Svh7h+QQumfn3B9QsqD/hv/RLrOxiwctWb/1vfE7D+Ad8Z/aOL
9Q+4yuifxVj/gJGM/nHH+gdKMvqnGesf2IPRP75Y/8BURv8sw/oHZjD6ZxTW
P9CO0T+NWP9AeUb/7MX6B+oz+icE6x/YtPa/+ucd1oegA6MPVbF+BhWMfs7D
+hlYMPr5N9bPYBejn79i/Qz0GP2chfUzWM/oZx7rZ/iN0c+TsH6Gqxj9fAbr
Z9iJ0c8JWD9DFUY/O2L9DGMZ/TwY62eoxejnx7i/AF2Y/mIq7suADdOXteC+
DAxm+rLruC8DU5i+7Cnuy8BIpi8LxX0ZmMP0ZZtwXwZOMH2Zikl7XwZimL7s
N+7LwCSmL1Ma396XAQWmL9PBfRkwY/qy47j/ArlM/xWD+1aQLfatpC823jbn
ZHZ2Ctdjw5tYYS5I7kvcubHWRKJ3OhdewU0Q7jeR+xJ2yoc0ptV/5zxMZkoJ
95vofYnssRO6hOZwWw6Z7xXuN5H7Evac/tgamMt1ilC9KtxvIvclNh99LXX0
4U/ud3DKCuF+E7kv4WzURWqEbD53LMnLWrjfRO5LpF7fJLtuZgGXZyX3UbgX
Ru5L+Eb5uO9wKeT2q/Hqwv0mcl/i+qxelVk+v7jJ32LthftN9D1FZPBPYV5s
7dgzQJgfk/MeVDasF+4LbtTc6y/cHyTn1TetqhfuC8JTmbrC/UFy3redH1tO
sK3j0my+PwIWLfQ+km3ARPs73g1c/rRPR4T7g+S898d0eiDcF0ze5NZduJdE
zuta25gs3Bfs+vbwYeH+IDmv2hRLr5wxbdxN2Se6wr0kcl4V5dENwn3BRsO1
jsL9QXLewx8ezdKaIMkXnF5iItwfpHPycJm5wnsFfeNxX7e7vKHnTbHIPizc
K917NLvuwOYiet4BEpM2CPdKo56nOuaOK6Xn7WW1Y5lwrzTg+sMFwj1Tct4K
629fhXulWcdfTxbumZLzXrmX1EuzVJpXfzlBSrhnSs4b8GKml3Cv9JdPYR7Y
V0PvX83euab3QA85fsWfW7UbntXS+1fuN0I2CvdKve8fvpmZ/YfeW7txOj1S
uFe67kfRSsnGOhrPa7XT1YXzGm6clO7q8obeb/TfgO8fVw7fG+fn4xdNzuvR
G98/NjQ/WJ8Wci2anHegeP/4TsX8fV53b0ST844S7x9bRo3IMDW9FU3OO1a8
f6wernLrd+LtaHLelkx8/3ifTcpy/QkB0eS8Fmvw/WONypVPs07diSbnjdiF
7x+Piw9ZbvfpbjQ5r3sPfP/4y+wJszZK/p1Lv95etk6I5+Fw+hThXgY577TO
qpqCf3e3XD9ycHMRvc/5PmJic1fk37pTwePyxpXS+5x6Q4b3E/zbLW/yfOF7
JnLer3HfvAT/biuRWSx8z0Tv+ft6fxLuDU/JNR0hfM9Ezvvyrvp0wb93Hi3U
FL5nIudduvpanHBvWNVrpLHwPRM574Dd3j0E/2oYD1MQvmci53UddWGN4N+b
Je+ShXvr5LzHE25pCu8tdC/k9xbuU5Dzjr51y0TI34/p/UYK3yGR834xihwt
5O/t92UJwvcN5LxRv97vEu77OqbLWgvfN5Dzfl/zxlW47zu3V88C4fsGcl7j
7vcD9FH+Lntgvkf4voGc997hMi4N5e8v5bXVwvcN5LwX3j7aINz3DTuqd1P4
voGc1w/KrBTyt2zv4GLh+wZy3ro6RX/hvq/MhE4fhO8byHm1A11+P+p2JWpt
Mb4HQc4btPRsWXOvdM7GKmuj8B0MOW+/j19nAcTPvTbu7i98B0POm+U9v1sn
xM9eP19dFr6Doed1kcusRPw8o4cLL3wHQ+85W1vtPIT4+VGX/IPCdzDkvOP7
X587DPHz3CWDTwjfwZDzHr10YYgN4ufvJ2vqhO9gyHkDw73dnBE/DwgqNhG+
gyHnrRz25nUG4ucK3Y6+wncw5LxHsX/BcMa/t/F5AXvebvi8gD1vGj4vYM+b
is8L2PN64PMC9ryj8XkBe979+LyAPa8/Pi9gz1uEzwvY877E+QtGMPmrh+MZ
JDLxnIjjGQQw8fwcxzPYzMRzOo5nMI+J55k4noEVE88BOJ5BMRPPZ3E8g3Am
ni/ieIYVTDzX4niGskw8W2N+BnMZfp6K+QrsY/jqHeYr0PRvvoI9/s1X0IXh
K2/MV3A6w1exmK/gfYavlmC+gmoMX6ljvoJa/+YrGMDwFYfrL+jK1F+xHoHp
C1fG/6Mewc+V9xv/UY/g7sxD+/9Rj2DCgv2Z/6hHMCp0x+1/1COY17R05T/q
EfR80BD2j3oELe3XrPxHPYIjYttm/996lIP1FVjK6KsMrDfAekZvaGG9AfwZ
vdEX6w14kdEbNVhvwERGb9zEegN2ZvTGA6w34DdGb8zFegOaMHrDA+sNeIDR
GwFYb8DFjN6wwfoZdGT082msJ4E1oyenYD0JDBg9+Q3rSfCB0ZMuWE+CbEZP
RmE9CT4yevIE1pNAmdGTelhPAj9GT/bGehJWMXrSE+tJ+F3Uk+RcX3BfAMKY
vsAX9wXgJNMXjMN9AXBi+gJ33BcAFaYv8MJ9AShm+gJf3BeAo0xf0Iz7AvCD
6Qs43BeAvUxfEI/7AjBR7Aturms7q2EsDf+o1ztm6f7iRpxYlP9whiTs9VZy
ureGHNwJtn7tcLyYc5qlv25prRT00JGpaWtTgOmqR1Kfhf7muo2y/HHTTQZK
tvdlynD3HVNPq2dlXFz8xDbFKlnoUqqwOCOsI7x/q3XUJdMKLjJwq2GEiTx0
uSN7UONtZ1h8Rn4GHF3JbZhat3+rtwLU+ya3LGNsV9jD7PozX+UqrmqBp7zM
W0Vqp91QI43mnAbua1NNW2NOAyB2Bo4/8uXFumZuzuJQr6h1zYDYOc/QrWjf
81au98S9p/c+bwXETi/fRQujNkvwyXtu+0ZulqB2mq3wanyyTZLXNXc2QH+p
nZ0CjL64rpfi7fUspNBfamdER62BA82kecuvjTMHmElTOyvWXdAOmSHJf6gP
sM7Q/UXtLO074DHCkR9yu3q34vFiauegEdajb7nJ8H/0e41/Evqb2ikT+cdc
qUqWLx6T+dDyWRkgdk76dOgcwpF3nfh6sK9pBSB29rza7QfCkQ+vblA1Gl0J
iJ2lnV0dEI58gfmwLReUqwCx82Bjp/n9Rkrx0VXOGio2iRyxs3pZ8JkztdL8
YLkT1x+2fOaInYPt4p6+viDL50RsGsM7J3HEzqX91wdc6yPPdwzvE7Is6StH
7HzafW6451EFXtVTVmpd3xSO2Pnl/NR97lmKfHlM8fBtZqkcsXOwUdSkfZrK
/JSdE32H7fjGETvNi+bFdGtp5dxKZEc/3FFN7fzstmbrK0lJfktY37p5q2qp
nZzVWN1ptlK8wTPDmyr966idoGrk4uiH0vznIkulFS/qqZ0GJ04NScuX4c/r
6+p0mdZI7Tzy8nROuZIcv22Gdse1oU3Uzg6THV2PD5TnDY9/jNzfpYXaOWy3
1YtgZJ/r5CtK3ZG9xM4kXxVXwb7hjy5fEuwldp77/rSXYN/7fRGWgr3Ezl2B
ai7LkX1fM2MOCvYSO53aPnt0RvY9UGixFOwldg6aoLfeGtmncz60ewWyl9ip
zN1SEey72ndIsGAvsXPqurcSysjfBrfiLAT/EzvfDLObFYT8zb3VvCj4n9j5
dIr+/RfI3/zHsmjB/8TOireg3hL5+2cHgxDB/8TOvPVL1W2QvxfbhMYK/id2
xqXFDdqM/F3+YeJxwf/EzuWV1+yGIn+PHwpnC/4ndmrLx9plovyZvz25q5BP
xM5HI7ZdVEL58/nAkItCPhE7NQ4WODxF+XPhyMpeQj4RO18ut2xcgvLnC68y
XsgnYueGJ8OThPx57JTkLOQTsXPNvtYvQv5MSHnCC/lE7JxuvlDfB+VPqNZ+
EyGfiJ1vw6zXNCE+mr85MRb9pX6/W3erWeCjbRfPrRP4idiZNVFbCvESqJiQ
7CzwE7Gz5ejxFIGPJp1x7C7wE7EzY4m2q8BH3lbfwwV+InY2Bd2aJfCRu06l
h8BPxE4DoyeeAh9J3HH4hv5SO8P3d28W+N24+/cN3xHfEzv983QPCPz+41lV
mDLie2JnXsayZoHfMz8+vRmG+J7YafdaQw3hCJUPfZm+DPE9sTO942BLgd/d
dS8cvIj4ntjZ2sHiusDv2grSHgDxPbFTfrK7tsDvzxbtrEW40jz6NWfvShSX
MDxd7buCTSLlz63jrtxAcQmnLphadr/lM+XPYWN7xaO4hMZvGtQjnZMofw5p
lIxAcQn3pNtA86SvlD99H/f5gOISdR1Bk9b0TaH8eVXG4ByKS9iv4mYvB7NU
yp+JnV8tQnEJ89fJGGju+Eb5s8yzZBHKcxCk+Gg2yntq59Xs1FiU57ByZ9sf
01W11M7060aHUJ7D81L6pzr0r6N2Lo1b9AjlOQxy+PHD6kU9tVPi6KbjKM9h
5FvX8k7TGqmd12y/zUZ5DocPHxe7JrSJ2llZ/z0P5TkcUr1j1b4uLdTO5GUh
AYg3wZazEjsQj1I7a75ou85H9u0zGzJHsJfY6e8ZqdsR2Xdn3GMJwV5iZ47m
2auIN4GH3FVNwV5i52q7o28Qb4IzSv1rvyF7iZ0W8wc9QbwJrlXYByIepXUz
z6zB/gCyT2dFGBTsJXa+xnZyuxk7f2I7ucOMnd7YTi5ItHNm+9xYCRYM9u32
63kpZ2NyeUftJFm6rniv9v6EyjpOoSbWylRFmp7rPT4Xd1Y8F9kveXfvn6Ff
2rgRUb08tb60gcj2ObMK3HjjqmJeYDnX8Yb0ApcbcpCsr3Ju/aN+qIGTNRv2
vq+pDMVnDsaH8xHxIft9Lq+YrFUjwZ8xzN07pEYC9u4k29O4a2fY0E1z4baY
Cq6vlPvLaZXydH3Gp+79H7Y0ch1+3bFcskuW4gwwztwdEWeyP/3n4MZn5ZJ8
kKHnSPQXJgG5srb9XaDNqohTE69XcjMmX1a8NFKRru+r+5RwyqaZ26kuW1Pk
89df77G/uNGiv8j+jQUHNPWzpHjHSLsFo7Ok4OnN8nFhpV2hxvZrrc5yaZzH
jQBNi5fKdF05avHWI9uruEff0mMqVyrR9S0HPbSPRLRwNeumD1K4K0/X62z+
BG6NkeZf+SZ/2BLzV18V4LzjIpm8u4TzjpfY9d+8S8Z5x/uLeUf8u6CwLhfF
AT9j1sVmw8q/+bgY5yMfLeYj2Z/re/I9iid+vnPfxXnPS2k8XEqbvFzNVIZv
Vdig2/9QA83fpiPt+ct/FPOX7L+cue0eihv+SMs45ZzAckD89WZS9wrkV17u
c4lhUMvffL+I852fIuY72a+6fMig6ZXy/BjrBQZbYioA8UtCp+Xnin3k+FNm
29+ftGmm/FCC+YGfKPID2Q8eajqgOODnff24ePz1SkDwf75vSALyBx+tPKLb
oYgWur56QDedqpVKfKWyf/9D2//qyULM23wBw9tbMG/zzgxv62De5g+IvE1w
luIl6pus5PgfWWe27NP6Sv2iifmcDxP5nOx3uK6QL+w3GbfxySGtrxzB+ZWS
xpd5SfL8msd7Yz7sTKZ+8cH8zx8S+Z/shwdKXwj7kxfdXZ60M5kjOH+91v1I
yhhFfrzZHPUd4X/rxRVcL/hVYr0g+29qPXYS9h9zvq2yLzyFIzgP+TBDoumQ
Er8wfcpez4K/9eUTri+8znpcX8j+dxJvihrR/ux814jzBakcwb94ctNslFd8
hx89R2+SS6N+yXZzGCWsDy3fErEV5R/xy3Nc93nI1P0AXPf5VKbuF+C6z38W
6z7BOTLywjkh/q1KXiYVIH4lflmH9QAvIeoBsv+Q39djQn7FHXfrK/AuwVk7
LMlBiP8fMZ+f5CIepToH6wfeTdQPZP+D/aOaEZ/y9xYOWinwK8H5pUuXn4gf
+aYRWVe2xvzVGxIq7XqDHyzqDbJ/SIjLCSG/ZPYs3xOMeJTgvKhTgo4Q/0vc
eyZOuP5XnyhifcKHiPqE7P+62VVbyK+Nmx4NEPiS4L9mlm8e4jU+NPXVg8OI
58h6+uYJy4Q80pN3cD0c8bdfSMC6kZvH6Mb7WDdyWxndmI11I1cm6kaCc96a
PDmhTn2RfbRP+Ev80or1JD9R1JNk/2h7FY/xyB8VUwqeCv4hOB+WDXuB6hB/
5PPxFuEv8Usm1p+8l6g/yX6PETNfI77jRgeN0xX4j+Bs16/nNqHu9Je8Eib8
ZfQqT/Qq2T9b63Y64jtOxXXGC8E/BOedzk4+qK7wriN2ZAl/iV/GYn3LE31L
9r/N9nbxQP4o44tWCv4h+Jd9N+gt1JGWgReshb9kfd4J09eI17jNO/S8Bf8Q
vwzHfQfH9h1huO/gEpm+Qwf3HRzpOwjOgx6Vn81HeVKg4xUi5A3xy1vcj3Cf
xX6E7L+u3NrVDfFXSsjhMoHPCM6nc2RW/0B5Ip1w66SQN8QvDrh/4R6J/QvZ
HyzdzTMR8dewOIV4gc8IzsrGPkWoTnC9i/2khLpB/GKD+x1uvNjvkP1Na117
7kb85WizdpfAZwTnucFbuwp50pxdZyLkDfHLbNwfcY/F/ojsj8zJ9PNG/PVk
nVytwGcEf7OqMfmofnCXn5jLC/WErL9aP93FCfHX/dVjJgt8RvxiiPtWMJbp
W6Nw3wp4pm+9h/tWQPpWgvM5jDNIFXEmfsnD/SzIE/tZsr8f9iMgfiQ438A4
A10RZ+KXVNz/AnOx/yX7j2E/AhnRjwTnMowzcBJxJn4Jx/0yqBD7ZbJfAfsR
qIp+JDgHYZzBUxFn4pd5uL8GE8T+muw3xn4ELaIfCf5PMf7ggYg/zRfsL3BF
9Bfxy1A89wA7mblHIp57gBHM3MMLzz0AmXsQnPUwLwHCS8QvrngeApLFeQjV
Y5j3QJLIewTn45iXAOEl4pdNeH4CAsX5Cdl/CPMeJLxH9TbmJdBR5CXiF3U8
bwHDxHkL2W+LeQ+qi7xHcI7DvAQILxG/KOD5DLgmzmcY3oM7RN4j+M/BfAW2
iHxF1ksxv8FWkd+IXxbjuRk4+O+5Gdz677kZHCvOzQjOB3Edh2/EOs7M0+AX
cZ5G9kdgnQDtRJ3A1HF4X6zjzPwN+ojzN7JfC+sEWCrqBIKzJq7jUE6s48Qv
h/G8DjqL8zqyPxbrBCg1EusEgnMSruNwk1jH6dwMz/fgeHG+R/abYZ0AV4o6
geCfhus7HC3Wd6qTsR6AEaIeYOauMP3fc1c49d9zVygZieeujO6FjqLuZeax
cJQ4jyX7pbGuhndFXc3oXtgo6l5mfguBOL9ldDXUEHU1o3thsKh7mXkv7BWL
571kfzLW1bBhAdbVjO6FCgVY9zLzYbhBnA+T/VpYV8OOoq5m9DBcJOphsl6C
9TN8nYP1M/FLFZ7bw2fM3L4cz+1hR2Zur4nn9jBTnNsTnPNxnwjHiH0i8Ys8
nufDj+I8n+w3x30oHCP2oQTna7hPhPZin0j8AvD8H9qL83+y/zruQ+FvsQ8l
OPfDfSLUFPtE4hdV/L4A3hXfF5D9H3AfCqsTcR9KcJ6K+0RoJPaJxC8V+P0C
TBHfL5D9ibgPhTvFPpTgvxb3jzBH7B/JOof7TXhP7DeJX7bi9z4gnnnv8xy/
9wFGzHufFfi9D1AS3/sQnDvjeQ4YIM5ziF8u4vdB8KP4PojWfTwvApLivIji
jOc28Lg4tyF+WYbfH0FN8f0R2b8dz4VA6wI8FyI4/8TzGegvzmeIX3rj901w
jfi+iey3wvMfICvOfwjO2/EcBtqKcxjil1f4/RScJ76fIvvP4zkP2CLOeQj+
Erbt8xYYKc5byPoJPJ8Bv8X5DPFLxwHt7w3BMOa94Vn83hA4MO8N6/B7Q9BF
fG9IcJbRaJ/XgTXivI745RJ+nwheiu8TCZ4n8PwNKIvzN4J/BH7PCMLF94wE
N6Xu7fM00Fucp9F+BL9/BHbi+0eCjwuej4Gp4nyM4KmF30uCcvG9JMGnH55r
gWBmrrUXz8HASXEOVqKgMNr7djeoGeYb7O+VxllOWtfCrehA1w/gdWAurpPf
+xpda7a0zPoTN2vjiX3C7/MZuKfOf+ZQDowbrTsvP/OVi3yztWmRdSn9fTCl
/k59LJrzuZk6U3yE348k+20//fi2SLqASxs7NWehdAHd3zbjQrbwu5yfGs74
O1/MovvP3TjrtNi6lAu9d3PH0jNf6f5B4u+f6mn3Xq/reyaa7L96I37VlvIy
Tu3qsQbX3Ej6e4z1mdabhOeH9ZA47HoxiyP73cdn75BeXsxVle4a0elMDt0/
zTFtjvB7l2lT3k8Sfoeb7J8iY/SuI9r3Xm/CM+H/I/s3nSw0LUb4PM/tfln4
HWWyf//LT+bbkR2OLYWbBLvIfmu8H7D7A1/nmi9D55wmmzVbODfZPwXbAzIY
e873GKSP8ASq1ZJHBVzJ/jp8XhDJnNd03dBB6LngYs4gfSvkNwZP0Nd9vP3/
xdPdUn4Xshv0Kuz5eHNu5N/f2Z7Z7i/wjPHX7SHnaxEu4Lyq5HqEE93fG8cD
mMjEw9uUZ14Id/ASHp4g/H/kvvcbk7xTr+NCjDro4N8zIPe979+T3Xx5/2Oj
jnPx7xmQ+95OwxoNXnd9YmQYiH/PgNz33jdsd/aRY0+NugzDv2dA7nt30+lY
sa8gzOhTDP49A3Lf+9GROSnheuFGYBL+PQNy33ts4trdBhueG3mV4t8zIHZa
DDkg2BnN2nlnko8TsjOatTPe8qBgZzRr54vrjVnIzmhiJ+GllDXfzI8iXfXm
tEeGoJsIL0n6165bgXTVsRF+lwWdRc413OVIOTpXNDkX4au3NyfrpCBdJTP+
S6igmwhfdX7yKM9e0FUv84IEnUVwONo/IhnhEE1wIDz28chnGTekq7YWSdgK
uonwWMLdjuNdkK6atdx4m6CzCG6hqu93IdyiCW6E3x4UdU3zRbpqg697lqCz
CL/FtaW8HYF0lcdCw1GCziJxEonjhHsvxglZv4LjjbsuxhsTt5ydGLdkfT6O
f85LjH+yfgHnEddbzCOyHoLzkZsq5iNZd8R5DZzEvCbrAPMD+CDyA1k/inkG
VIs8w/AVmCvyFVn3wbwHboi8R9adMH+CRJE/qU6wbo8TECfGCfF7j1vtfgfS
ot+JH9WPtvsRbBb9SPwiUdzuF7Be9Av9fVHM/2AGw/8rMP+DZyL/k+/6h5u6
rNBISQN3DF+2RN37W18ScmoUJbMiop8pPOkderID/Z2Bz3Pb93P3mP3hU88r
of1GZD+p+yf2DprdySYRvF+wdJbQx5C6/yI7qOFRy2egVDL2mNDHkLo/Xj8g
OtY5CSxuvhLY3seIeWSC8wi4i3lE8mIVzgvwXMwLEuf97rXHOZgpxjmJ234S
qULcgpNi3BI752M7uQ+MnXuxnZwyY2f16HY7OXPRTu9+McldzfOBBPPf/9b/
t/6/9f+t/2/9f+v/W///b33mWPvLMW2lIO3aod628mlcZNG34Seai8DeO8dG
GZpXg42qP2rA6FvRJkaKPabZ1oDU0MxznvfrwNegusTYg3ei7c8ejoxrrAej
eL36grYm8Pua9ZECzQfRZhqRm3t+a6brphst+wfJF3HzL6jWfm1uADPtYodf
05GAwUV314NlwdFfzj9/nKouAcn6CkXVRbLNJdzRUxHa/Tq2gG2bNmXPMZeC
qdIyfNW1kOiR2zS2J9+ThNe39vT6s18GftQZHlZT8yjadg03RbO7NPywg596
874cHH1s7dvKx5Vc0OdcmbmrpWDjvg01pskK8FDo/tR3r6u42y4n+tzfKw21
jnQPaGhTgi4vo+Y7uDyNnm7Y3ebhBzm4+GS0pb+OClwYmWHmdzAsetXIPruv
FstDN6/1imbmneCnSbufTwuq5VYk3cg66yYHU02Or2jlOsPON3v3z/T8w+0z
Geifukkels1bOXZxchd416X36z62z6NPPqiogU1KUGahfqf7xV3hDpsrn2Yb
R0SvylyzNKRUGRK/fJ9aZ5DpUcC5jRmqGNr0g+LZ2+27ar9Tf7jrIx/HFzRV
UjwjulmsPT22gTNUn21l3rcGEBxejygI3ZnXxnWp+H2uyrEBEBy2dvVIySqS
4GHzZ49fDY2AnGv7lqrJYe7SvI2yT970IW2AnCuzflr990UyvPb0wqWVBhLU
TrtVm/Vv9f/NTejdpKId+JbaOX/7oP41/Zu5wsXlpVsD06iddQWd3zze3Mat
z9fXNnqSSe2Un2Rn7porzXdae7+Ds1YutXO5nteiqb1k+emKys6rp/ykdp5e
sPPS8WUKfE3R+4t/JhZQO1ML/G36LVXkTb+vCrTWKATEzrllatKCnSs2FyzX
DXzLETuH7PhYWo3sVB+dN8klMI0jdn73VPAS7DwSOjBzypNMjtg5IGO8vmCn
urTnWletXI7YWaq+cKRg513J6RXWU35yxE4u5upmwc6F6iauDRMLOGKnQnKP
8YKdH9w/37HVKOSIneOhZ3AG8nuzW/Vj5HdqZ2L9Nm815PdQ2/1bC5sqqZ2r
wyvenUJ+zzEboGrRt4baecvKtmYH8nvUoM5Hqh0bqJ3qYc2bBb/3MD96sqih
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
Loje+4vzv5Q26/7rWvocL+xHbqDoR7LfYHm6/9IDVdzPUzv7usf/jZ9RGGfO
QcSZrP/EfucGi34n84Qel4Ny7aenc+cOzyuQtZKEZP1BS0VZgnEu1618UOHz
Tn/Xj72alzmwsYYbNG5yiv+mZvqc2a88I4yU6zidr46hj+IaAZlLhBmfXHym
8g13Zt9TZVVZaTqv8PFzN8q6UsLdsHGOUn/7d46x9cHuVk/9au7nafuzD/dI
0PVp20OlS7KbuDsOE7Qfd2ykeulguNrCwTmpnLf2RcOhDrK0jqe57p91qr6O
q7+VruoiJUXnG6V550+eNcnl1vFcpAqKZ7KesL56yg/jAu740AkLw9X+rtdV
TA5/eL2Ju/189NK7Gn+fE7DisebFCS3c04zZxQZuklQPKITn3vX1S+POne0c
a/VBka4Hnr1ae3BoM7fB+MGkoAxZOg9ZqlbBTZlQyGV7x7xYu1SJrr/6IWGx
98Mv7ru9zc41U/+um71tk+18X4I/tGlj0VrDv89x2zbmZGGjBP9kbMnrkjoZ
mi8G9V2MJB7lcN63DrZEHymk8cxlpuX2/lnJ9U7/qrP04k+6/niN3bs1iVWc
U4fsU2/3Z9N4i4g+5x69q4ZrfKzW3NHvb76/wDzGZYg8RvYrWeUu219dx9kk
WA1QWZ35V/9gfuMui/xG4kfj8iuXExPbuJrVjtNlD/5d39t/+OkLehK8V4Km
jSf8TePK+CO4aenXxpVa9T12Y3UtXW91kSp9bSDFfx8bH5v5soDGSeK1vAlJ
l6V4blxg81gVxGeiH3XjGpeuNpPh59gtHnHvSQ1dT1DvPbv/Sxm+YndVd+PM
Kqq3ncbW144aJsdbhajnrhvWBAj+arud914xVOCjt83R+BFXR9dVh066uctW
gZ9mARJPd6ijfHWTL1Y6Z1TEdXfdbppakEHxX3UoLrH3yhru2buC5116PaLr
Lb6R8cL6Oc878/v2esQRnJOf2epNuFvP3ck7oBcpkUj9MgzXL26yWL/I/h5y
M7sK+9NaB/WKlkikdXMOrmv8M7GuEfyl94/6cT9Akr8TPyNdZchTup7vOS5T
WOcuT3btP+QpR/D3NrOdMD1Hii80OqmVMzKF+qXY/pCmsH517VnfvJEptH/c
PjV09+1Tsjy4tOzN+MgPFP/ZvWJuj30vxy8btfWmuXUIXffWKrgurFcW7Om1
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
LHFeRPxitrf18YT4FqAzTS7/uHUbxf8pntuAYHFuQ9Y7VLbPecAVcc5D/BI9
clsc0slw5Pjqq0o+UnTe4oHnLfCBOG8h61Z4PgP3iPMZ4perunn+SCeDuO1V
45BOpvifwXNIcIOZQ97Ec0vgIM4tCc6NeH4I9MX5IfHLGPy+CawU3zeR/f22
t88nAZlPEr9cwe+hwGrxPRTB/wOe+4EuzNxvLJ4TgrPinJDg/wzP8cAVZo7X
fU773A+QuR/xi1vm0jczHYuB3Umfmq0XZSj++Xj+Bo4x87fu+e3zOmArzuuI
XzYN7aS5+FoF6NqyWQ/pZIp/DZ6bgXRmbrYTz9nAd3HORvwi9cbWyqT8E5DV
Gq+NdDIg95GuzZuQONs4wojcRyJ+CXbkF357/IN70C3t3KjVf+N/eECX8hFB
+dyalvOz97n9oXh+ihrk9fFOGWd+6Fxkp69tNG5nXvNdMu90BTf/4WELF72/
cag7dcyPmLfVXIFJt0XeJ2Xo/augXnO9pWNquISQupfGHn/nfj+6Deqbb1/H
bZ60VtdwvgK9T3VxTrfoGZPquWM3S5f4aytS++tGR3w2ySvneqoGtnxwLKL2
W2hfO3jLvZprdZwnozWknNo/Xc7C8PrVJi7T5FbGDbk/1P4XRZ0+D01u4dxa
Om50SKij+VWavtys51dJ/u1Tj/s7nJoBsb/k07LjGY+l+OcnPuq++dJCeezj
6Cfz5/eW5Uteu0dd/CJB7Xc43G1zerIs7+xbfTnGXpLa7zA//vmy3GpOQXZd
2TKtL9T+1OUfjLYuq+e4z0dm/piYQu1/b5pi7mKI7JE+EXd5Sza1v5u6972Q
i1J8P4krOiZNOdT+K7esPBdOlONjE5y/yM7No/brrTr5Wc1MnndJlje4ZZxP
7X9T0aTdbZ4S//PdohY5mV80fkJGzzzgOEGZn6yvczIx4xfN60fql30E+3fM
mj1jhdYXqjd0/1R1F+z3myWpkTcxheqHfpJGhoL9406lJV3fkk11wsbXl44L
9mdtTFpm2pRD637RrSH2gv3Bk5U3K8zN44j92XU77gn298w2qfY3zqf1XfNn
XHNXZP/uaT49lGR+ccR+k6pdZoL9w5dN4pIyftH6vmTbhK5C/Myo+lD60bGI
2n+02zIVIX6+V63XGTqk/K9etd7rfQ3Fz09w6cFNuT/U/ldOpf2E+DEPe2ji
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
Mvf98ZZC7hC3XdYzojpwOevcuam7kDvE7b3n5wmVuZw99jpVT8gd4jahx/ED
I7mclb9yY5qQO8Tt6tP21dy4nI3odMhCyB3itvXYe8b9DSlzyP/zYi53iFv7
Q11dxnI5+9FrYxkhd4jbnXqHHnJ/Q9rFHy9YxeUOcatX6NjvDJezVfuqdRFy
h7j1HFJjwS4uZzVnV7nH/Q+t2uLRhAj3z+S1fkby/ZVBbJKBvuuMoeEkd/h3
swj3VJJzu/bv1DkvWOC4A4eDLiaTjzXSZvtaZhO/vQ3tD2Z/YN/CrQNLnMoi
wwfk77S8o0M331plHD76K6td2rBqm6AC8vhMoYPvQX1aUb+tt8nI7yx7Zr2a
hjV16cV5BiHuw4tRUjJ6XOdbqexzXIlVMdRA3i9sSlvsCHyzMCWNpT3IWD7+
sCHd+MDQ5VV2GXqi/LoFn00zWddSW+entzShPQqMWvu6laPpi1o0bWecxT4o
P7vWcC1G9ZqalHR4YkZXXM1dOTk7i4UN7TnsxYridJVXqnGEexb50WlZO1Iu
lTkN/L3StlwqaWSU/yncXYfmOOU1iTPLYaefODV4bpZD8F7mGnbBowY2NVDG
LzixaEBTA1ovOWX3q/BMnlekjyrbM5PdWb3K9svD9yTmo/HgV/PM6LzkTrqx
HYorTWI2nPa9lEVqSJxXKq4B91YGkcwJEcEcZ/ZT4tx/++jGKXNekOvDFhod
uJjMEOcjgwJ1DmR/IBVD7sZznBniXNepZfuzo7+SdS83LeQ4s2iJc94yn7VG
I7+Tt4u8nTjOyiWJc8SV6Fb0Viopt8fmGsdZQZyrL9/pvyAljYTeXXCD46wg
zn2qlC4Zb5pJAlzKXOc4K4jzppLpoW2Ms8gwT0s/jrOiL3F2s7ucOTE7i7Tc
9fM4x1lBnCcHLVEEvgGpBb/5kyHOpUNslgt8rZaZx/EnQ5ynTjp2S+DrPOSo
mcDbSuJ8amlILY4zWZdfakbiw/fsqcR5dLOpp552KE4rxu7quPVSFtvsF12p
rkMi0bNQdGxv3GFR4YcstlR9R/K+pEdYOuQSS8PtQ+3Kp7O4+W4bu5dPJ17l
co5ZOuSTJT2q68z7wP3+q8wTvgG/SHxITiUdnQKS+Tm44aT1WezIL5e2E9dn
EZcdOlNfhRvQHclmwz42/MXY7OZWHxr+IkEn9Ma/sjGmtrO2DXpxLoX5zXka
5W2hT6N/6lVz8DWm1lnjhszYns8W2bcrPn17PsH7yv33uHSyytRRtrT9uKRe
po56X/mLTxZ5ESm6ysm2m5ryp6q/DUB/WT2pvz4zjG+G/yhHs92yj8+K0ldu
7Ih9MDNKn/a6/iTlVfhX4hfw6dIBnTesVuyAOUE6b8iQZRkWOjo/ybX167+c
7JDLbs9W9jqaxZMuXXNXvgovIKXn0/hHR36zQVvauepFfiHe8Tp1HMoZ0s4t
UjfuytRVPtiWWPCZ/SA6dvpPwn8Y090XPlecs0pf6Vz92pXmDVPJtyI+lqQR
qevdHvQzUr5sSs8LWpxOmrU2TCskZWipow9IC39j5ff08qeNN2SofjAC7Lni
L+35oe3Gge5Vzejb4NdxJTOLKd2v5rertiyLmGTF3PK1TCJt01p09Yz+zGy3
Vdrf0OwJueOc0lRHJ5MkDGv8fmmDLJZS/7jyKckv8p6kJ0p6mqSfMc/c9Cr8
J7lbr+Je8/d5bF28T7sNjjsjz0n6fUnfIOl7X+WmhLsXko6tZ2xav6WQdTt5
MXVw+N7IfZLeSdK7S3q3RwVWDr56dE3D/IYVYnQVj4gqG2/c3P9P+sVmunHh
PM8O7d1/3bxgfWWcm9X0PUuD/klv4qu/1tLBhOaf6Gj9aKChkvPTpPWNcgf/
SQd/UYLmNHJw+freSLGaPv/t6rWH/kk3L+JLSfr02pZg5mSi7NT5leyZcPif
dPvhhvfD3cvQMbansnedKaYMeW0Ve77ZkX/S9Yruoy9LH6Z07n1Cp4RSe0aL
ha0nH/0nHeXEHuIl5YuMly4X6ZEZTRo7IW+KralyfoZjo+7bQiL/RY+sG7vP
wfc7OfB1m03LEd9YV6+WthMerY28KuknJL2XpNeX9uc02B9xzl6R/Rkk9ehm
jezdQo8mfj1ZvLdZPCt3OvNXuHseuT6x0izPST/ZwKSwNU4lPzMq9Sv355v1
Qr9GmjwuaxD5hRVc+N3YoZwO9SRjapw/ms8GjZ+0Jc43kc2pWvgm/IceDbE1
Nm8fqqPoD7BJm3s4icsj6GOmcaqz0MdAr9htX9gP9nWxro/lHUP6MqzUzKjh
espmqzSnx5OTWWF30NOcRUYvZ3M9bXrsxKcWDXme+1bf1vegCY0yrXlnxSd9
5fsNx4D0BakshhglFy4tQedWMFnVqq+hUuf1wZxOwWnsq9Trr8vTagi9nqjo
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
Xjeud87VhOt1+yz9qqK+D/nSH+pI2V5ZR4r6cu3+7XG7OD86BjtXFnqDel3m
kH2TDVyv2aJTGVyv1bpTX6g7ZUNl3Snaw+XgF9gJ6RdQ33s+nJhfjev7gPNj
Q0XdEOI8GnAmvTQ4NwCcyTaJM+IWArgRxA1xiAEcyDANDg0AB9JB4oDfq8D3
Eu33msL3EvxenL8dzJ8MlPNHPfoJekQXSj1CvXACvaB7pV6g/AeB/NOLUv5R
rydA3EIXyLgF9VqB+IQek/EJ6nU+xCd0uYxPcD5LwE7SPtJOonzaQXxCjWV8
gvLmAXEI7SLjEJx/ZbCrNHU/2FWUn14Qn1A3GZ/gdy0Fe0sDpL1FOSmE+IRu
lPEJ6jWF+nOSLuvPMa7bDPE52S7jc3uJQ5/yMfal+Pc7XWpvJfBAvf4IcTup
KuN21OvBUMdO3sk6dpS3E+B/iafG/yaC/yXVpf9F3HpB3TtJknXvqNdnIS8g
PWVegPLZGfwyOSD9MuI8t6feZ243iVG/03ME3hgfZkIeQRbJPALleSz4a6Kj
8dfu4K/JPumvkS93oQ6fdJJ1+CjnQeCvyRGNv9b/UeSvSZT018ivMouL6vbJ
S1m3j3p9EPIackzmNagX78CPk0/Sj2N/x1Lo72CLZH/HokHPPHR0kknXKvq1
d5s9Y0rU9W0VDn9T+0G2QB8N2y/7aFqted43wj2FuD76EDdQP4G9sOnyfoB+
ArGRdDdJfynpOM416GNi32Uf03z5u1s8ZpSrePgbqzzL9NYOs2cE6/yvPxln
I+r7E/IKuyfPeaGO8x361Eii7FPDcUJ1zm7ayf9/lS8fEvn81b62/tAPSA7I
fkCkW0J/JfGU/ZU4Tj3ngUx8fzWf4UN2cTywv8Pkg88z0dcxullUedHn4STH
qSX7Wz/J/tYc+b4xvM/6yffxu5yhf4Fdk/0L+LtnYf6sspw//u5NwIHcljjg
ODXuFPWbkL2y3wTHGQV8JOckH7GfgvpvuSv6KKL3VMm+uzJIpU9s82aV6GPp
8CnETvS1PJX7QY9kP6+77OetLN/f2rrofXbiA7yP43hBvwbLkP0aSO8Ov0uu
aH43z6Coj4bsMYQ+Gt/qUbHlnD8THc2f/5/+/05/tLOlj030Z3JD0VlrZX+N
fdu79bF4DizQnTBgUALZ8XNYgyclI1nbiVW+Blo8YQ/l+8kL6leub3+NTPw4
lfD3Cb6//NSJXk9LRpL5PmtC+fvksXy/8sKi91mw5v2tMWMNg/i4HfY0rxzN
/x/O5zrMh+B8Bsj3X/56fF+M6+S8qkMMnxfWre2CujXWWdatYdxYC/wLGyL9
C8a9Q8FuM1Npt6fJOr2jUKfHKsg6vTKyDjMR6jCZp6zDzJf1lgFQb8k8ZL0l
zucA1AkTXVknjPOxgziWHJZxLPqRMRAfEn8ZH2Ld4BioiyZ+si4a60KvQt07
cZF171j/uRjq24mrrG8P8/6R5P4qjXwKXlnXYsZrZnDwxJB06zRSpm7yYAff
dBJOp76u5Z3EPis9D9X0TiJ7+qY7OvjmkGIz956Zb/qJNXdM7DO5IJtc+JZv
qLNMl/Z33tmG1P/G6ma1W2zmV0i+2BRccn+lS/u1buwQsiqXGZp3aXV0VS5p
0ksn3H24Ab1+Wqe1WdkfbMc3u6jyG3T/mf/+K6+cdiX5mqVDBnFYsODjMXGu
4tKINn513pGKKwtmvrLRoyUuukQtstVRrrDhzwq+fiMYZ5Yua6i3Q8SXXQeW
FPEm+sdjxUdUieXx34ylG2av535yqhzf7uibYDG+ndVp92113rEKcvxRhWd8
xPi7Nu5iOt++sTly/JSJBxQRv86J1XcQ+f03Of6sJL0HIr5cc0f/q4ivl0i7
2gz8AjOXfqG0xP+Uv05JgX/G1PA54ol9W2Wgb4vVk31biPOi+Zs3c3yZ7/O3
38UT+fux5JZatTl/y19t7cP5y5CPV68NGerB+Tiozb7tnI9shOxrawh9bWy9
7Gs7L/lrE15tRCfO38fZZ95y/jLk46ZN+y3Lcj76/crP4XxU8Hffwu8S7e8y
+F0yWP4ujt8CxifRmvHXw/gEx0d8TgI+JEvigzgsBByIn8QB+dgd+EicNXwc
CXykwZKPc/+bj3SJ5GPSf/OR+ko+4viOIIfkmZRDHL8UyCENkHKI45uBHNI4
jRyGghzS4VIO0f/6QzxD9GQ8gzhcBT0lT6WeNpZyYuBc1EdJgmUfJeLjAvpI
flYCfTwt+VX8SJEdIIUHwA4gvyxB30lDqe8oJ+HQZ0qqyj5T5ONcsAOkqrQD
jSUfv4O+E1+p71gf/vCeaauMBansUNOqISs+6VOs3/asdNrc9X4G02+lf6xc
gjEdId8/BvXkynxZT47vL4V6b8WkFdR74/j12HqTdP7e9cQ6iaLPBt/v9uxe
6Gj+nlOQd5bog8H3FejHoZmyHwffj4F+GTpH9st4F61fmVIjz58ndtikM/Nm
reNsfxtSj57GSYWsHLXzf39Nt1sW8w/96bXkWDGK79e/UZqQ34bKb5thV7bb
pJN58v2epmUL+XvKFW+jZYVds8i/zhv5v12P+tf60kY5n+MlPfP4vBXdctNN
xHfg/Mki3VNiPp2/+euJ70B8rAFPdk3iid+leyje1Z//f8NvN6uJ70PcegDO
bKDEGb/XvGPfzjp83IXdij0Xv4PjFBwsGocYyXHw/fLwPlkk38f5h8D8aXE5
f3y/E8yfOsr54/uNAX/6VYN/X8CfBkv8Ud7iQT5JgJRPnGct4DspJ/mO37sL
5JbktwS5xfHdQB7IZikPeF5Q6gd9/5Ft37G+bg1+P37+5x75vV06Xx1W4xPz
bLlmuU75HPXcrQdz7iVcLMb9gfVK48D+Ouq5W21brB7q3OoHy6lgsmLE/j/3
yC//bLPz5+w0FtL3Xe3+Zf/cF9/CJHnz9sOZLHVCxbrzf5io84ksRif9ev6d
5c5eaJH3/Lv6uz/mb+r8PC+XXQlyt3qWl6uesxQ3173T25o6ypozfde8qfnn
HEvj+MQvDcrrK7OauZfhT3X8iQH9naKfp7NPnpe6Dm/7Th1/pfOrgfx7FNPO
3obniyWp4zd4Om0Vn7diM2rAlZzZaeq5pvZ3z+7k81aaDIpz2Xo4Uz1/yb6X
56gRfNwomxQb8TuIZ8flEeOH1vhEKs1efofjqd5bOrPA8Zf4vZ97JrYXv494
zqxz0G5gqx8kcrXuBY6nem52148Zw3P5PJ4N3DpWzAvn07/T+srb+Dy8nWNn
iXnhfDyDy24WOE55ceQ3f6q/uzpp/mqB47cWqz7xp3pu8JqeBtcFjkHvz+sI
XFU8zTsPEThuKii/X+CK45s+9K7Mv5Pom3de5MLlSB3/U1YtIR8TL5ZIu8Dl
Bcd3enKhi5ADN7dtefw71HN93d9lOQo5GG7RMZZ/h3ruVu/JHaueO/SNkW2/
e/T8j3PzxprNelh1XDz7srR91Wr8ifczlvu0fsHhB9lslIfbI/HEc6L2s3Yl
yu0oYC2TJniKJ55DVTJy7dKlrnrKw6vsunji+BvfDV7mwH9v/bi73cTv4/gF
NGHF/pOJzDHOv32Xe/nqfAaOGjKNv0e86p+J6PEf508OTtKbyOdHTh86upzP
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
     "], {{
       {GrayLevel[1], Opacity[0.5], EdgeForm[None], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXf8lvP3x+/7Gve1bkRkZGTvEckKJZIRKUJIZStlhEoaZGRvsndkb5ll
l+wtskeyySj0ez0/r/f38fvj+rzP/b7O9b6v+xrv9zmv8zrns/LAob2GRLVa
7eCiVovVbpDWakfmtdpzko+QfGejVvtR8tZS+lntVtpurNdqf6rdVNsg6dwl
nZ8kbymdH9Ruru0g9Z+oceZKni/5MskH6rjTJI+RnEqepuNezmq1XXVcf/Xf
ps/fSP+kslbbV+ezgeQ7q1rtgGatNkl6B0jnZul8qf5TJE+VXNc4O+jEd+ZH
SB6l/inq/0cfn1T7nI7bSfs+4Bwl95e8o7Z/tb+7tg46trM+/yb5Dn3X/vqu
66U3ROPcq2N+Uf99au9X37bSG6P+J/T5P/WPlPyo5AWSb5b8vuS2Ood31H7L
+Up/N22Z+npJZ7r631V/b/WdLf3n9DnXvgskvyS5ktxH57On9i8ieR+1S6o9
UMe+oHZFbftLPl3n+Yeu4R6SL9Oxp0peQvv2kH6pdi/1n6v+5zVmoc9XS35d
8lKSr5X8huQ2kidJPkPHriR5BV3zq3TNj9CxN6j/bekso/66+s7W9w1S/2E6
t376juXUf6b0r9S+oeq/R/ofS39V9e+n/UurHaj+u9T/kfpX4b5Lf6L0B6v/
fvV/qv7V1X+x5JmSF5W8vY6dr/07aHtIfVN0rbZT36bSOV2fX1L/homug/pm
8rxx/uqfIXl7yWdLfp1nWN8zQ7+rleSzOI7fqGM+1fnPUt+H2jpK52X1ryA5
15gra/+bPLsa5yIdM51nXfLFPKM8Wjp2Lem8InlP9V+r/k+4/mpP1nmurX07
qP9yfX5D/Q3pr6u+tyQvIXkDnkHJPaUzRN/7seRvtX2kbTlty0hnY+l8JnkL
ndtM6awjuY/0r9OYn/Leqb1c37WJ9Aao/1jpfKf+YyQ/qH2/S15cv2U17X9f
8s7qP59njnuhe9hPz/btOv4eyf0l3yt5dX3v5pHfu6+ln6lvN92Lu9R/pvp3
l3wAz5a286Vzt9pE23aSh0n/JJ3DX5IfU9/i2naXPE/bHG1rantN+/sX/i0f
SD5ecgfJp+rYkbnHmiD52Ybfk1vVXqtz6Kjv3k/9N+nzF9LvJ3mS5K8ln6d2
so5dRTqPSX488zs9R31na/ztua6Sh0vejN8leYLkLpIv0Tijc5/rUzr2mcxz
xyuSP5bcR/I+0rm+4XsxXM/t3jp2XeYcXZMPdNwxkvtyvTN/LjTei7rux6r/
FbVt9PlLnm3pf6V2NNeH35j4+X9b7VrS+Vn7juQ9k/yL5ErtQQ3rvySdRfR5
lvpfkJxIfl9ypPb5xO/dE8whko+S/LLkGZJHSN5Meh9rO57nWe3sut/rV6Tz
snRGSl5D47wleYLkJSXPlDxK8vk658+lf5Lk0ZLflTxE8v46r3/1ez/S57Nj
t8PUP1VjDmhYfwv1faJtuOQ31H+E+s+UvILGHyT5bO4L84++63TJMyUfpv7T
eH913Bxtp0jupnZu3f07qP1O2wlhvu0s/W6Sr5D8UOJ5lefmyTDHfqVznKL+
fSRfrfP8Vv3jJLfVObyq/jG8j5IPabh/gnS+qbt/NfUfpf7zan7+f69bXl/9
7+jYcyQP1v6Vc++7OfZ943ddKfm3unWul/xj3b/9YOkvlvs8XtMYK+X+vtk6
/zf1+QzpvKu2fe7jH1f/gQ1fw4FqG7mfodX1HL6o7UPJS+p5fFrbddJZVL93
C+mcyzqjvju1XcQ8oPZJbVdLrjTOldIZrGOXkH5nyRdIfx3JB0m+SfJ7Oucb
1R4nnTbSX1P7jq0zkWk+lzxQ8jPSuUw6B0leWWO/yPfxXcz90hnKsyqdidI5
lPVKfb00/pX6nEtnJX0+XP0p66TkQyRvq997ScPz6nLq20X6l0t/RY39vLbb
eVZZS9V/PfOpxr9O7dE6dnkd95T6R3Bt1X+1+o+QfJSuUw8du6KO3UnjX9Hw
PHy0+nuqf2XJPdR/QcPz5NaSz2x4TWHdOK7y2nGu+k7NvDZ8rPFvUXuCxm/G
nnuYV7vo2AnSe1Xycep/VfvX0LaavuuF0vPDoWp31/cuKZ0dpX9Ow2vNlWrP
0PjrcU2ls6t0Fld/e+kM0nm8wPOsvn7a1mL+VLuXtraSJ+rYCZnXmF7SP076
s9W/LuuatoclXyOdSzOvPZtIZyjzFPOA9u+sbVHJy0pnXekcr/O8UPKFmdeP
3aV/dcNr1i6Sr5L8nuTl9Rs3jWyDfaa++dI/TJ+35nqXtiV2V/9tOqZfzXPe
4qnnvd3Uf6vkAyRvg77WoCX0uaf671TbnzmBaxfsh1U13i2V572VJT9Xej6a
zudgF03Q/rYa5xpsHJ3HjLrtnCf1vYuGMcdLZ2npnKXP2+q7Tk+9RpyncyhK
zx+P122TYlPtIZ27mdckP6xxSsm9OTeNP61uO22G5Kfrtq+6SP8c6ewonQs0
ZrO0HTZdOk/VbeMxVxWp56hVtP95be+p/w1sL22Hq39DjXNw6rVykvTrabCl
Nebcwrb1TXXb1KxrG0n/cOmsJ/lxfdetddvqT0m+vW7bdZCO+62w3F76R0p/
fcm3afxI8haSn5b+ZOn/yjql8/pR+p9LPkvtuNJr9BvSebluu3HZkklF84Hk
y6SzdGmb7y3W0brtxivUf2ppm/XtyO/Fstrelfx63XbyKRqjje7LeJ3HcnyP
Pj+r/la829iSPG9cS/U/r8+LSt5Dz9/Dkl+J/P1NbYupf0/1P8K11PO4Z+45
KNPvXT7zXMScwnxzL/NM5DnjEcmLSOdp5n2eKenul3seWTTyfDlZOqV02mWe
W16JPZ8xj/3De4F9I/mSyHPkXdKPWNMzz5OJ5GUlH8z9kNxa+sOk+4KO/Vmf
N1X/pjr/yVyvsB4dq/0deI7xXaR/kT4/K/3vpb+x+j+XXMdu4ZlVu5F0TpPO
NZXnZebkr6ST4FtJ5wcd15TOMdL5W/1Lqn9/nl21m+W286LI/tk12GySn6vb
Jo+5vtp2Y57XefbV+U2p+360CvfoTH3vcrqPV2E76/tPKW1fXcqcV9qHebFu
H4U54TTpLyP9S1P7MstKvhy/Cpsn9Xv9hM5hUt1+Jb7mFpH9zbX0W/aWzkqS
52Jv6/x7S+8OndfpkW3Xb9WfZ7Zdz1LfXmqvl/7aOnZf7WvH+LHXwP20b3H8
DI1zPn6g9i+iz3tzvyQ3sQnrXl/3UXuTjv1D/a3Uvy9rPO99w/PGEbxnhf3k
1SPb5m2D7fe1dNbnOkg+K7dddqXk1xq+Pi+wBmb24bDrvtHnDdQ/h2sq/V6S
35G8QP1d6rZtRkt3O8k967afsJ32V3/fyHPgddJ/q+F38038lcz+Wf/Yvinv
6bvY1Jn9uhul/17D/t0RsX1l3tMLsRsb9knn807pfEZxPWLbyzwnt0jnlNzv
O77pxYWvyW+SLyz8/Owe2/dtmT81ztuZfd3PJf+FbSA5KWz/YfthIy3Uvu51
27e/St6ybht1uHQ71W2L8j7xHmHf/iadrSR3B88oPE7Xum1i7OFdpN8z8px8
nvRfbHiufl/yebntzR/py/0eYgMDkGyo/uek81PD7+Z3amPpDNW+L9QfY7uo
v8F6m/tZxD7kveQdxCY8RfJOddvA/+n4HSVH0l9T+qfif6r/T/VvU7evwfvK
+z5N/XPV355rix+PzRPZvzhJ7bbqPyb2OoxP/YD0v8CGk9xR2zphfXlW+x+o
GxsZq2tTL42DPK/+h+rGNE7luql/oeQXIs+1yKepP2He1+eX1P9o3djLmepv
lJ4n/mDuq9vPmhLmDu77UOn8WRhjOUrtvMJrzc3gGIV9uqc1xu+Sv2KNU//P
hf2+J9X/a2F744K6+1ZmPsDn0O/cUvKK+u0X1X3sltKdX9j/fEbH/lXYt11T
OpfW3b+5+vYv7J+urP6L6z6HZ/S77q8bzxmtc1hK89KI1GMeF/zW2/X5Q9YD
5hzJsxq2RXbQ/qiw3Y4tBG4CZjI89nPNvXiY+U73bl3JR6n/4MjYyEjJR0pe
i/VJOp80bAPNVvsLdjLYlsa7vPB8u4H6B0pvbckPqf2y4WPvqdsXx7Y5Qbon
lp47p+n4O+vGB4apf0Hhe3WM2r8L93+lMeq5z+OucC+5j3drTk5TYzIn65os
qWtynD5vJv3jU9shJ2mM/wpjN/dIv5HaRwPj6t6w7QQetZPkPSXvDE6T2ZY6
MdhknPOj6ttacmfs5NjnjHxG6vPYIdgkH+ZeC8AftpF+V8mTtf8JHX+bjtkS
ezKzDbRN7HZr6dynvq0alqdJvkPHbFMzBnhH3fKd6ns+8+dL1K4v/TVqnssv
q3s+5xniWeL5WU/7z5XeJXVjnh31uWPNuAp9HNtR8vWSN5HcSfsfyvzbblW7
acP9L+h33VTa5rhF5/CA9l0n+VrJN2R+Rrmnr+T2BQ4N94Drv5p0PmMuqLsd
pXa4tgEabxPWV+wVsC7wjpptn5F12z8zNebNpfvW1TgLY/uA/dS3NvaZjv1e
/Wvr+x7FnuSe1e1frKf+mrZh+nyg9NfHzpb+BtiWiX0l8GHeVd5T1kXuDxgy
tuwtddu3j3GvEvefkNr2pX/L2DYtx4JFb96wvQpWdl7d63jX1Os68mUa56rE
88Pw1DYu+teo/xpwMclXq70i81yyWHj36T8UX0fHjMfeqHsNwo9+X/orqP9i
ya/rN26trTO2jY79um75VfV1Kj0Ps+50LI2FgHMsmxrrwKefkXp+APOYlXpt
GhR5zQHf2EnHdi69ll8bGw9B7iP9R6R/ZM3zzDrSWa9uvGep1JjPubExH9Y5
cIXlUmMLAyLbGuA/O+rY2wrbCVcE3ANb4jbdt21Ky2/xO0rbFT/UvfZy/v10
Di9pzBMlf1b3Gsv39sf3TY0pXQc2qc8bSV419vPbnjlB/TcnljcGi+B+aN9N
6pss+WrJ68fu49i9UvtC+EHrgNNI50LWGvxdsIaa/VD6kA8Br0uM0WEDr6k5
alF8UOnfmDiOsDZ2e92+z8v6fVtyL/V5kvS3Kr3mgtnRgoNN5x6WtjEO0/g3
JPazwLpeT4139dH+NzTuIrrGfVP7V4zfQe1Nmd953r1B4X3pp/bIujGNvaUz
JfUacbXOYQ2dc1N9P+l71lH/Y+r/VOO/r/s1QccMLu37gxufUBoTYE4aWNqX
J17zemEMATx8Fr6y5NN17AtghtrW19hvFcYiwMnfl8472EjS+aQwNgJ2/VFh
/ATc+7vC+OenkufrPO/V9oh+W2u11+j4kfp954ALST5O8qm8U5KPBiNQO0bb
ZpLPU3tD4WexnX7rrcR1NM4n6h/G3IEdqHaUtg7gUWqP0baO5I8YuzRO8oXa
0aXxYXylS0vbaUtovLVKvwP0b1z6+X5Wv/tX/e7/Yl+H3/Grtd0l+TK1i7EG
6NjzKj/bv2Gn6fzO0f7O6jtV8gWSr8Ev1LZA+7dV/wWV54pOas+q/G4y5q74
BhrzNsmTtJWSb8GHY10McjfpZHw39700xruh2usK23in6zval55fFqmM/YH7
raf2msJ+AfbRvsFGWjXEYrAZ/pL+3Wy6ts9xz1PP0+1C/AVbZXyI9WCHfM8z
ljvO8h2YhOQukn+Q/AnnGjneMTExnraF5DUbjpsQm7gysS+2mvrO1neeUXfc
5Fz1L1FzPOXsxLjW6ayTkpeWPIo5ODEmRmxlnI5rzbqqvrMyP7fgWWfX/V08
92fVjVkRT+F7lpU8A1uuNFa5to79F7uZ68N8oO9+XDrX63qsrfu4ZMNxmfHa
34b5imcGDKrh9+fkeot5W1s9cazozLrjM7x/xGjAzkbXjQ2uJZ1/YuOQq+j4
MZnHvVD9oyWfKnlPyScmjt3hK/2a21/aC9xY8l6R/ZHvc/skPcCN8fUk/67f
9KXkXSL7TT/l9p1+Uv9nkrtL/lry25K3kfwt73LuGOVXkt+U3EnyL5I/zx0D
nc4zUxqn/UPtV7ljr0XTvsjHul6LS75B12Uj/YYlJN8oeRN8YP2OkxLHElZq
Gpfrm3mdTALm/J/67tc2Xf2xdK4ujGenjFMY719E8hPS2VHf3ZT8OGuP5H/V
3qdtqo69KLwLzMPv1P28gx+Oio2X4c8wTzwR5oq2sdtVap4z7gnzBu8GsTLs
gZPV91Rp7HKs2mdLx72Yn6aFOQpfgHkFe2C12H2r1zwnEt/jWd1I53VI6WeV
OZS4ok651l79h6l/KcmbSR5S+r0YqvaO0rHDK3T97smNDTC3rhH5vRip/VNK
x/821rGHl34+z5D+3dJvi/+p/oNLv1PM78tHLaZXi/22UmGcijmlHb6t5EUS
Y9S4bMfqz32lseI09rXhPP/D10iMjYDtN8AAasY9huuZvqFm7CSNrPOxdLtq
8IV14y20E9X/k/Q/0L5LarYX/q7bXtpWuh8l1vkR26HhmAW4zQmSr5U8DPuX
E9Z3PBW7varm9WajyHPO4rHXh2X4XbHXAeaQ6zT2vTp2w8hryENhHTle7SOl
ce/x4EXSWUZyR+KPDY//lK5Zqu0CyU/ruRulZ/Fg7e8LloaNzrOj/UeW/l7m
9FWjFtiz1gHfrvT885Zu/v3at4vkB9S+lxmH5H3HR+5RMz+BPnTeASfgnGqO
9YN3Eqv6U/1Tdfwhkh/SlwzW+czJbOe9VbedsL2OezHzuDPU7tDw+M9K7ip5
Z8nbqX0qsz8PrjG1bj7AbM4rsfwA65XG/zQzH6Objump/m/gJoBB14zjfZM7
znufjntV+x6sm18B3g3WzbzE9/C9M7X/3sScCjAFdJHBJcCEGbOXjvs88+en
pftrZrwfPxq8vn/NfjEY/oCaYwnghmCGcBiIE6ADtvx77lgz2BnxADDD2wOG
iPyh5CHEM2rGzv6oG18ljj2v7lj2xNSxCsb/IbWtz3O7K75AZgz0I7U99Lmv
+vdUOzczfj1Nugskv1Y3L4KWe8ea+mbdPA24GcQ8iHcwZzF3gcP8qOP2Uv9h
NfMxiDfwe39W/1OJYx9gdlwbZPABvhP9vSN/B+Pfp/75+CK8Lxrn6IbfwT31
bL6sfZV0/4vswx3Gwhb7PQDHvgq7Qs9AXcd8o+9cAx+beQCsrjSWPUXyTqUx
0ick71Lahv1bYzQjY8i91feSxi31+V/mlch4+3xsssgY+Aiwsobnll8jv+Ng
s/g7dxS+F7eyPvK+sHZz3kHmfsE/II55e4ixgvEeDp4ZfJwF0m8dGWN/Dtyx
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
jobrI5GnfojGmFe51hJ2H/kV2IpbBt7aN+qb3HC9pu9rrt0FhgMutB3rZ25e
GvW3wIXAlE7LXMOLmCT5pvCgztX+B0vnMd2v/m6BowUfq02wgeCoHci1qVwD
omtljhycNsaAU4U/Mq5pPtWE3OcMVwZ7dXjTHKQ+6j9MfX9Urgl1pNqfK+Nr
W2auNUnu3A0N18z5vOaaiNTeAW/pUfpZHVB3jshjheMR1L85snBMsGfTHGDG
27Vprm+HzHUpmK/g1FHXitqzXOc5agcWvobUMwMbBLsjnxEeCDncR+gcf6yM
/Z3UtI9woHQvzlzvjHgy8xp1JImzrVXZDqe+3dXqv6XhuDExGWIu8PRfDfMS
vsCIpnO691X/+ZlrorEe0ke+Nxy8k5u2gQ9hrq/M2aMu3WbBl/lK8rbSublw
HUQwCbAJ6jtu2fS8QT7WO5XzjuGnv6v2/MocdmIfxBEejZ0bSUzkEckD1b9T
ZV/+cmz2puM90/DjK9eN6xfmbfjGl2H3NR2D6R/m4cnqP1jtzpXrKj5Tud5d
R+k8q3ZY5Xp436m9tnJtP9ZD5mvq9n0k+eLK+CJ4M5gwtalmSb6oMhZI/IQ4
CjWuPpR8YWXs8IPKedPgi1+qvaJybWByQYmFTY0dQ2OdoF4g7yvvLT4edg1r
G7UMv5Z8Jc615OdYoyrX4Xutci42dW1fVTuqcl1h3tOxTXNAR+Tmc8IVPTk3
1xRO6GG5/cLZse81zwG8zFV17Cr8Lmw6/DttH0heNDfmBg8a/uqIyvVYFs8d
M6Iew4DcvuD7sTF88P/7w3MypmmfFv/32Mo2VYdwH7GdeCZ5V+GSvqK+kyrX
P36Da1u5tu7rlWvzTpb8ptpzq1CLV+24yjVWZ6odWbmm6cLMvhJ5tDPUN7xy
nb+Xw/lTR3A680fluokvhnOjduBLPG+V6zXyrIDFvcScr74zKteywlfAZ6Cu
Uvum32tqJ2zc9NxObY8fMtvRg6S3SdNrPbU6yP3nN66An9b0PEBdhw25D4Xr
K6wnebfCNT8i6da1HST9GzPHzcnZnZiZB9I2vO9wUagPdGzTthBxyC8z+wED
gy+CD0L+YifJ1xauabpV0+NTT5S4H/E+6oZu0bTNQ/1RcAXwAfJ4ujf9nJCH
hI2Kb3hs7BgUsSjyRDs2vd5Rz2anpp8lcqT+yOxXUj9yR9apwvlS52TmwJD/
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
              "]], Polygon3DBox[CompressedData["
1:eJwtnXn8F9MXxuczn9nnQyJbpCKRNfsaJWQrREKEKCRSsi9RWUqLJftaRPZk
F7JkXwsVsoWo7PLLEn7Pu2f+mNf3njl37iyfmXvPec5zzrd1n4HdTwmDIOiX
BEGkv2vHQfChGr/WgmChFB/nQfBqGQRbaf+r0m+cBcFJifV31YPgZOn/kP7B
NAg2l3yu2m9ru1FyC8md9Pch9d9FYz2rbXe152pfT+n203iHS4415kWST5X8
ns5zjPZ9pfE7aJuj8V/ReF21f67060p3oY6P1X9VyWvq2GO1b4H6XqN9z0pe
S/IZkkPdxwuFrlXH36192+n8W0t/stq/S/+Q+p8m/TxtTdRuo/EeUHu/RhD8
rWMfVP/XdN7e6v+5+u+grZP060p/ivYtlfyl/v5P13Oajm8r+aPYz3Kx2ntq
e0PyUZK/UHtHbb/mfj5Hav/XOt+GGm9lyefr+I2kv0DyV9rWk7yF9N/o2P80
/nmVfpLkmyWvI/kb6R9R3266nmW63od1vevq/vqqz0L1vZVnrPNcIXk96VZS
nw/V/lrH95FuTfU5SvrJ1bNpo33farylup4p1W82S+N9o33tpNtU51tD/d+J
/LznS7+65Lci/16fS95Ix92g8ddS/3XVf6iO/VpbW8lbSj5P7fmF343NJb+j
44/WMfN1/M7a7lF7ko7fQPqF9Ne1vKPtjtRjbKJjW+t+39Q5v1T/lXR9R+qY
T9Ueg17tianvZX0d30bjf6W+ha5tqbYP9Pxf1nhdtH+W9B10/Gk65l8d/4SO
2U3td3V8N7X3lv5Q6c/XvhV07Ezt21ntV6TfU+1dpd9c7cu1r5X0k7XN1vif
6Bob0s+Wvq3O863O31S6PjrH1ur7qI7ZpnoeraX/XPpI+oOlX1XH/qHtCN5v
yX+qvaPu93Mdc6T27an+o6vzpTpujq5vkfpsVY23p+TTpa9J/zy/v3RtdPwZ
2lfn++Pdknyq5L80/jfq/z/t66K+Hfke1d5Q+gulX5n3Sef7QueJ1e6h/utJ
/lJyKnmJttt0/KrqO0i6fzTG/jp+fR1/lvYl0j8t/Rpqnyb9f9LfoPbFupdc
7Q91vsv0vP7V7/G69u2tfS01/sca/2/1/0HHry95geSV1D5G+1pJnhf59/pZ
++Zq/O91zm117FYaby/pr9c5Ngo9Rxwq3Qa6nqGJx/hQ55urfZl0H6j/rTp+
FelO1XjLtK8n76r6X6B9TdR/gPT9tc2X7ittQ3T8X7reJ3S920teTf3/Kvzb
rKYxvpf+LekP5Tlp/MOkWyS5qcYbyDeisX7gN1X/HaU/UO1vpY+l78scob/P
auwOvGvSf6HxXpd+b433vuSDpV8m/dnS95O8pdrjqu/7Pm2fqv9r6r+r+r8t
/SzJMyR34ruVvIH+fqfnt4r6/s3z1flXkP70av5aR/qPpP9T7b207a/rPTfx
9/Oa+nwp+Scds3N1fW2ZO3X8WZI3UP+31fcTXdPhkleS/JXO/4b0+zMu37vk
FyRvIfkVyfM13i8aYxf17yD5r8zv+2cao4fkmRrvVtYE3k1dw5mln8dF0qc6
5nXpZ6l9oNoNnW9fjf+D9NvpmNeZrzT2f9qOln4N6e9Ue6H0a+u4syUvUP83
JXdX/894vtJ/JzmT/gTp32O+ZY7it9T5B0k/p/C5md9m6viX1L8D86DkdyW/
KHlbya9Jrqm9k+5nga7xWB3zte5viY7fvZo/JulZ7yrdU6G/3y11vvskb1LN
j3tLHqOxcl3LdK5Huiskl2q/oO1gjXeQtqnqe4PG+Ej6q6VfUboZ2u6XfIrk
X6S/R/Jaur49dT0H6pi7tO8Ijb+i2qNYCyXvIPkk9f9J7bvV/zEdP0jyEsn3
S15Dcqg+D0q+hvlB9zJL9/iQ+qwnfWvJMyU/IHldye/q/o7VMV+p74W8f9J/
IP1j0m8ofS+d+3Btj0l3s/rcIv0q0o/X9YzSvo0kfyj5SfXfRP3bSH5f8lTJ
60u+XfKqkm9R/zHq/w/fQua1b3fpr5ZunrbWmfvsKv2ZOvZP9Z3C/eh57KHn
sY/0d2jf9tKfKP2Pat8l/S+69p9ZLyX31fVtK/2x0i+WfIf0zaU7I/W3dJzk
59QeKv2/0j8muY/6r66xr9K5z9e+9rw/up6X1GdLvje+ZW3/6vjja553lvG+
1Tz/MG/9F3vuY/7qJPk8yctY+7XvVR07THJN7Se1/Sv9PMmXSH+h+u8ieYjk
PyQ/xJwqOdP1jGC+lLymjo+07yHpr1X//9T+TP0vlXyR5I6Sz5H8t+SpzAmS
L5ecca/auki+THKi9jPavtbvfbrG/EPH3s16xHwvfSzdNG0tdf/v6f7v1b5W
3L/kd7HPJLeUvFjH3qn2Wrzr2rrp+Gslr8y9ajtI7Q20bzRzKd+X+s/XvmvU
HqZzbqd721bbTawtkjP9vh31+/6gPlfTX3/v1fE7Sre95M3Ud1Nto9W+RPs2
ULuttpGSh0tur/bm2q6XfLHknry3On5szfN7qPP3T71W7aN9K+p8nXW+XXXM
DdLP1vM4UfpFod/PXPpO0v+kccZLvkq69TXeSB27GnOY5F+kmyDd5Tpmnvqv
ov43apwx6rOC9L9JP1H60dLvpvN00jZJ8jjJY6W/Tn0vU99mGq/U8bvp+O3V
51r1+UC6furzbejv6ya1N9b5r6rZptxD/f7U+EdIbqjP2+p/tPp8Efr9DWhX
1877cZV+u0+0rZH5m91Uv+dsyc+pz+YaY3f1f0Tjd8IeYb3R9eyl6zlC/acw
/0s/Ifbc/La29VPbE89Id5v6H1jN/6ytb7IeYV9KXkXt17QdUM3P2EpvYC9J
bp7ZF+jI+6Tr+VPX82h1DVNKr9+PSd4N+0X6Zvgrdb8DP2r/MaltW76PvTXW
Xtom81vxjWN78X7VPZ/hJ9ykbVzN/sKqur/ddX//6ppux/5MbV9Mw9aQ/jDt
b5e4/3z8GfXvov5NtO+BwHb8LZF/D+z5P3T8Um19pTtB8s7YaxrjMOlzyb/o
uKaZbd/ttG+m7uewhv04/Lc3pN9fx78den18WvKekl8KPYc8rHPtJXlGaHv3
ackHSn6Ha5XcUdfXUuMdrn0fad9nOv5QteeGnu9j1qrMvmBXyW/p/Ieq/1rY
bepzv8bbI/Vvz3o3Vcd3ljxd8q+ST9SxJ2h7kbVQ+55U/27Sv6n2Ido3XuN1
0Hil+lwgua6/obaBag9UnxV0fc35Pev+Rgvpcm2D1R4s/XXYFjp+ZXxM/C31
31tyH8mPSH5Gf6dpm672RPV/Tte3t87/CnOh9q2l43ONf2Ldc9KDpf3dh9Vv
V74/jddK4x2pY+ZJnq/9vdT+JLQ9tVj3c67k/yQ/qvGuk34PPZt63TbqdOkP
ln6W2sdKf4Xk81hjpR+m47/jW9V2nHRHqs80Xc8BOt9/6vcY/oyufYH2bVzZ
C8+rfaD0gc7xpPSDdb6d1OdR6a/T7vM11rX4OIHPMVvtHtr3QWh/MMc3yewb
H4iNofP01L4PQ9ubhe53Ne6/7jkXOwyfD1sIm6gh/RrSP1KdD1v7cF3PsNQ2
93D9HZPY9kaepXZ37ZsZ+hu/QO0rI/v2PCN8HXy1qG6fZ4DkLXV991fr/Ydq
f6dzbCq5veRXpN9PY7wR2mb6I7f/eDR+mPRnSv9jbF8Ln+ufzPbZNzrmUOk/
wf6q7L1jsad1LQOZk9W+Ufue0HgN9d8ls7+YSHdyal+E9x8/a7GOP6hmf2tb
XdtH2Kyx8YMdJH8s+d3Y/i5+EvP9ITX7SwskPy15gM41QPLKYAupfdfDa/bL
sL+Ordk/OzvxetCzZp9soa73LPVfpvbDGqO/9O2wbSp76qLE6z22Cj5AN+lS
yf3wPSU30f210PVNq/t+e0pfYBNhK0m/sc71s87xdGB/ZufC8/8H2r+r5F/V
9021z5b+DPX/Sdfyo7bjJR/NnKr+c9X/FfXZRv0H4rur3YXfSttN0u+q5ztT
+y7j+9T1rCC5S2Z/Ftzl49jYCvjLI7qWfTX+q6HxpLXBf7QNVfs87AHuTf2/
l3wnNhTzGetT3TbCb9K/Lf05vBuh/WLWt71r9o9X1VjNtJ0n/dnSX4nvo+t5
Xn3O1b5dC9uXcyTvpv5DdPzu6v9s9fzm6/oG6/p+17F3Sv6WtU19T1b7ZJ4H
76/k/Wt8kLIf1PfU1L41v+lG4C/S74d/rW1QYnsHWwMfeZHk3qmxl/aSP5Z8
D5iThuujfWeV9r/GsA7pms6RvqvGfLnu61lT1x+W9k34/u/U9T6kvu0l3yp5
J/V/WPIWku+tGRfCn9isbnxoauq5kLmcPqfo+R7d8DzPvqs03qTMWEXGeqn9
H+r4G7CHQ9vlfNN8y9jn+Cv4wPiWnONeyXdEntuY48DXrmYNVHuE9m2jvnep
z4aSJ9SMTbaQ/rq6McoNM9s8vPsTte8Z9b038vj4sM8kttd3VXsvXc8jqX0y
fDEwFbCVY3Q/A2PLE6WbzJzH+6PxT9D99pb+wcQ+E3PbZL6ZyHMcc/NR0g+I
ff25/r6oPt10ru7Sv6d+V6r/79X9tMzsM2Fb8Iy+Tuwrnav2iTqmUPsl1nS1
D1Kf17ELdcxv0p+Jz6LrObVhOwj7h+97WOK54NW6/cUWqX2NN+p+v1gjmKsn
Sc5Sv48Pqn1pZR9hTxyf+nsCb8W+Ojf0erx26vmDsa9njdP1XATGIfmAwNgZ
9tMLdWNo73Ctet/O5L0Hn8r8jfAuzpDcI7MPge/wluQH1D5f+xar3Zn1ODVW
MqM63/uR7fUJkn/SPX3PS6brfVl9DpB+38w+GvPdS+pzG/6J9n2rdjuel+Sz
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
wvk33Btz5v8BfS7r5w==
              "]], Polygon3DBox[CompressedData["
1:eJwt13nUz2Uax/Evnuf34GlKFMOczJByRifLDNmylKGaZu3MNHSUZSwhSyQh
u4jHOtlFMrYYSyHE8AzjtEznYAo1SquSbFOyZZnXde754zq/+3rfn+u67u/9
vZfvr1rnvg/0KZll2UqWzzaWybI2ZbPsUoksa1I6y86AQ7DLbAm2PC/LnsTu
Kcyye1kxzRFsldhRNCXErqDbVpBlw+hupbmFvax/dC7LOtA/we9Cd5PCz2LN
6J7EumJVsQnYXVgt7DZWETumRmexGc1wdYbqb0y3XK1+/HPsBe316vbVVyAu
x9oJ+RXdMfx+mkNsEl1NrDHdG/y2cpZT4ws1rsN/gx1mU+l+ym9FN0euNux8
qSybZRwX89OcDGYDtRvm0vy8RPOofNXkG6PmaLYS64XVwKbzp7Ef83vh14vd
pe67Ymtpn9I+ycrJ1wdrT/d3ukfUrIj1xzar+SOsJVZeroewRvyGrB/Wh31u
nNX5N7MK6h6Vsz2+lf8D8XPMSzN+c7ZWjTWsgVyz1ahF35S/PN4J1o2dVmMj
toE14s+nu51uGc2tWM0YK/4wax5rIOZBuwf7Vt/SGEvMgXa7GDObaEwN4h0Y
S32/E/hfGVsn1oVfR4059Ef5PcRf1r8oL7FjWE/sCv9FNjfmDyvGunmm7myp
8W3jl8Pnq9EGu6d0WgOP4hciLi+thz1YV+w7fhEbgV2lfRU7bqwnWEf5LmEb
sM/4n8fzYl+K7cA6G3NtY54d64u/na4jfSe2mO5E1IjadHXp5tENoHlLf6n/
z8Ed7FuaXqy39io1FtC9QneEriXdG9ib7Hma28zpx/o7yLeVvi12Mp4Xq4c9
hPWhaYhd9FzPYTVLpv1XBzuLjc+lvfhgmTTXMb8x938UOy/2HzZTfyU1M3y9
2FfYfu48fkN8Nf9vbA82C6uP1RVbh23AxmJdjX+hXLXpPlOjE1Ycax7rHu8z
P405xt5A3O3YdWLHG2NvsS9jn/pthu2Qv5itkKt77EuaGewZsWfjrMKa629R
kM6FNfz9YuuKXY2tYRfoHmf91N3AX0S3TL5utOfkmsZGY5fjPGQPiv2l8X1C
u47mPfl+jr3K38QKaabG+SLfXTFPYk/z/0rbVP+d8c6wgYXpncR7mEHXgr4y
NivWn3Y5uin6/iH213R52h8ZyxV9RTQl8EfUXcFfyfpjdxSmPd83xoS943c1
9lLMEatN/6Fch1kRv4a6P8Qu8C+yHca1SY3D+sbxm6tRXp5DdH9W/zm5bmTD
Yg9gB/UdiLMDWydmLasn3zpxrcRfkO99+U7RrcHuxs5j72EnsO/4I8WO0i6W
7/5YX9h67ON4Z3gl+sNqDMcG8zfTtaYrjvGyI+oti/uDvgp/I91X2otpq4gd
GWsSW44tK0jvqgS/JNupf4uxHMFfM777aK9irdQ7J34GVgHbFudenDnYeqyS
2MY014r7k74x/K/5vzWuXcYyge73dO+LnUAzN5f2yWKsIXZcTHfsbbo/YJ9g
M2OPYx9kKddYOSfq/2cu5a3Knx1rHLuBdjr2dLzv2NfaK+g6xpyKfQafqT1G
+6T18CLNa3EH82uwKbEX1f0G3ynXdrFXsf38A2wEVh27EZtMVxpbF/snzgl5
j8oxWr6x2iO0j6txyO8wbAA2VPsYdtbvuBg3Njc/rdem/CbsCX392Rd04+O5
tNt5jj1xJtL+Je4sNgQ7j72LFfKvYWfi7sD6yfcU/6Oy6R56PuYq9k7cqXFX
0LXHBtDtpnkscurf7TkOep4RcU7iW+P9013K0jiepZtPtzeXxnQBm4AtwPbF
eYrdFXcvmxbzGd9IMc/8d+TcK0+dOPvY4Fgrhek5B9A9IMd0/jx1B8lzRr49
WE9x/y2TzoaV4h7LT2ulL23lqJuX1k0jrB9WBft37COsGf/OODvV3YlNUOdt
un+xZnEWqtFFzg6xZ+K7S39lbKC+nLgZ2DH5ZpdO3zbT+C0K0zNNxd7MT3dM
n9j/2m/lpfvmabFX2FLtFdhT+qbEmcu+EVskdjNWgWYu9r32/Phu0jck9rOc
9czBImNpq28U1qowrZ0hdGOwhfHNIH4h3c2e4fpcWo+TsHH6W+TS2hyGraJd
FOdGQTrjF/MP0B3Q/lnsfVYm7jH8tNhr+EXyDuIfLJu+eebId5++iTGnoYv1
aSzLsV/wW7P1cf973t/Ju0/cXtbSGC6K7V6Q7sr5cUbH+VqQ7s04+1bjx+Xp
m0vn4NbYl+zTGCvWhHZSYTp747z9AFtNP0jcoLirsXWxb7BxWF48szy7xY3E
pvHb4BW1vxTbm36zfJPxntol4tuZnY49jg+n20Z3r76phSk+Yo5i2/U9jtWP
+9Yc9BJXD9sU51Lct3QX4/5kC/lb8Ko0N7EiZWoYxyLsBrluiXdCP5k/nraL
9of4WvmW0DXBTnmOHtg+7CexD2Kv83fIVz3mmmYXXgobzApKpnuxOP6XxBzl
0h3ZOr5L4myL8WPfy9uF/3WZ9H0Y34nd9VXjL1Dj2lz6zt5izK/H88eY9b9O
9x/6zmXS92h8D8V3Z9f8tB5foCsvrkZBWptDY57E19degj9M9z9bG9UK
              "]]},
            Annotation[#, "Charting`Private`Tag$14039#1"]& ],
           Annotation[#, "Charting`Private`Tag$14061#1"]& ]],
         Lighting->Automatic]}, {}, {}, {}, {}}, {
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl08dPVUEYhvHxci+KYIxboyYmKjEuTASxF8BeEC6iImDBhqigIqJYwRIw
RhJNdEPsMRj39m78I4h74sKG6M72G1w8532+b+acM2fm3vG1jemGISGEXrxH
9PPJEOqxByWoxkJUZYcwTe7FPqxBDdbqF8o8NKARpRH9TbII+diPA9igXyY3
oxjTcRBNqDSWlluwCAU4hLR+syzHVizGDKzTPyxb4jpQiyWYiSM4igpsw9L4
LebPkq04Fu/H9jhHf5mcjeM4gfUo098hl2MOTuJU/AbsxArMxWm0YaP5lXIX
VmIe2uO69c/EcdRhFebHd+iflefi/mI3VmMBHjmLVgfyiT/mn+UT+UV+xVP+
TT6T14eF8CsjhOf8Bv/N+429UP/h3/lLftPYX/UrfosH/QG8jmcvf+ANv20s
wd/ysZn2xDpy1e/UE+LeqadkhfBQ3cLH8fu8no/i3byGd8kH6lLeznt4MW+O
a+EFvI5Pjj88dZUYwwe8v4SP5H28kCd4L8/nTeb+lLmo5h/laJTzD3KSNY6Q
E2WH+67JnPg8eRXZcV2elcOH83s8i19JDi4jZMrLiFt01yXFh/I7PMm7YFtC
hryEFL+YHNzOcMGlE7Y5dMiEnJr6///6B/F4X4E=
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{1160, 1328, 2155, 1329, 3009, 1566, 1330, 2159, 1331, 3015,
          1574, 1361, 2163, 1362, 3019, 1582, 1378, 3059, 2167, 1379, 1590, 
         3092, 1395, 2171, 1396, 1598, 3094, 1412, 2175, 1413, 1606, 3096, 
         1429, 2179, 1430, 1614, 1446, 2183, 1447, 3023, 1622, 1463, 2187, 
         1464, 3029, 1630, 1480, 2191, 1481, 3033, 1638, 1497, 2195, 1498, 
         1646, 3106, 1514, 2199, 1515, 1654, 3108, 1531, 2203, 1532, 1662, 
         3110, 1548, 2239, 1549, 1261}], 
        Line3DBox[{1161, 1332, 1334, 3010, 1567, 1335, 3053, 1337, 1575, 1363,
          3055, 1365, 1583, 1380, 3060, 1382, 1591, 1397, 3067, 1399, 1599, 
         1414, 3071, 1416, 1607, 3097, 1431, 1433, 1615, 1448, 1450, 3024, 
         1623, 1465, 3075, 1467, 1631, 1482, 3077, 1484, 1639, 1499, 3081, 
         1501, 1647, 1516, 3082, 1518, 1655, 1533, 3086, 1535, 1663, 3111, 
         1550, 1552, 1262}], 
        Line3DBox[{1164, 1338, 1671, 1270, 3088, 1165, 1339, 1683, 1274, 3091,
          1178, 1366, 1695, 3056, 1278, 1185, 1383, 3121, 1707, 1282, 1192, 
         1400, 3123, 1719, 1286, 1199, 3039, 1417, 1731, 1290, 1206, 3043, 
         1434, 1743, 1294, 1213, 1451, 1755, 1298, 3102, 1220, 1468, 1767, 
         1302, 3105, 1227, 1485, 1779, 3078, 1306, 1234, 1502, 1791, 1310, 
         1241, 1519, 3137, 1803, 1314, 1248, 3046, 1536, 1815, 1318, 1255, 
         3050, 1553, 1827, 1323, 1264}], 
        Line3DBox[{1166, 1340, 1672, 1341, 3011, 1568, 1342, 1684, 1343, 3016,
          1576, 1367, 1696, 1368, 3020, 1584, 1384, 3061, 1708, 1385, 1592, 
         3093, 1401, 1720, 1402, 1600, 3095, 1418, 1732, 1419, 1608, 3098, 
         1435, 1744, 1436, 1616, 1452, 1756, 1453, 3025, 1624, 1469, 1768, 
         1470, 3030, 1632, 1486, 1780, 1487, 3034, 1640, 1503, 1792, 1504, 
         1648, 3107, 1520, 1804, 1521, 1656, 3109, 1537, 1816, 1538, 1664, 
         3112, 1554, 1828, 1555, 2206}], 
        Line3DBox[{1167, 1344, 1673, 1345, 3012, 1569, 1346, 1685, 3116, 1347,
          1577, 1369, 1697, 3119, 1370, 1585, 1386, 3062, 1709, 1387, 1593, 
         1403, 3068, 1721, 1404, 1601, 1420, 3072, 1733, 1421, 1609, 3099, 
         1437, 1745, 1438, 1617, 1454, 1757, 1455, 3026, 1625, 1471, 1769, 
         3132, 1472, 1633, 1488, 1781, 3135, 1489, 1641, 1505, 1793, 1506, 
         1649, 1522, 3083, 1805, 1523, 1657, 1539, 3087, 1817, 1540, 1665, 
         3113, 1556, 1829, 1557, 2207}], Line3DBox[CompressedData["
1:eJwNzz8oxHEcxvGPuj+KwXY3WJi40YjJ4F8x3HiROmUgpygD5TArMmE6xcSA
URhIMYi6K4MFsdn8Hb2Gb+/neT/1/f2+LcWZfKkuIorOZiJivz6iNxmxloro
w+uGiHI6olVfxn5uSx7AW9sKl9O3cYTbk0fxzrbDdegHOM39ckd6ST7kOuVz
HG+MWOLO9DJecD3yPU7Y1rkbfQMfuEH5BadsFa6m7+Irl5c/8Vh/lk+w6rtf
XEFPet8l9yFf4aMtxRX1DFa5P7mGT7YsN6m34xuXcM875vRZvgvn/Mc312T7
wW5uwTaE87aU3GxL4zC3imO4aMvIbbYsnnIV5x8THzcu
         "]], Line3DBox[CompressedData["
1:eJwVzzEoxHEYxvFX4a7uFiOhZOKIMuoUxhvImTBwBoM6ymCwOYrBZBKFQSzU
WRHFYqTYRbEYySnlc8O37/M8779f/dsKC2PFmogoYLs24jgZcYKt+ohSImIV
E+mIdn1NXseOvMnd9g3O6Lu8hyN5yn4g76NPP+Uz/KQiyvq5XEa/fM03+HO7
0u/kWwzLDzznrUe+15/5CTm52f4qv1U3/YPfkZe/+Bsv8i9XUPT9pJ7wb0l8
ymnO2lM8qzdyEyryor1VbsG8nuEu1Hmrl3uwZM/yANK+b3Abkgex4jbCy/bR
6jtu45xHya3TPi3PoMPtki9wiH9qfTS8
         "]], Line3DBox[CompressedData["
1:eJwVzz8ohHEcx/Gv8uf8icXE4sp4E0bj2Q6li0XR5crgb1EGBrKhRJlMdwaL
7W5UFqckkzhlVMRidHXK64an9+fz/vT8fs+TzK1OrTRFRM5z1hxxlYjItEQc
t0aMY6Uz4qAtYlA/xAnuXJ7Ee9sRl9ILOMddyvP4aCtyI3oJ17gaV9LX5TI3
Klcw3xWxy93oe3jHpeUqLtpOuAf9FF+5jPyFy7YiV9Uv8JvLynUs6e9yGZ/c
+8fN6t3+75b7adzdeNfWwy3oA/jM1eUXfLMluSV9CD+4hHM+cVjf4NO46Tt+
uV5bDce4bds0btnaG2fbOnCG28c87tj65JStH6+5gucfhZ449Q==
         "]], Line3DBox[CompressedData["
1:eJwV0ClLxFEUhvEzIC6o4IJxwrgkGZOjSZujBosguDBlwC3oYDAYjFZ3Mdlc
8AO4RZsLfgC3aHPBKjj6+4eH533PuVy4N1MsjS6mIqKI/YqI9aqIDWxVgjcx
VRfRoW/LOziQ97jLfJez+iEf4VQumJ/Ix8jp53yBn9qIM/1KvkSffMO3KNtd
6/fyHQbkJ5531zM/6K/8ghE5bf4uf+BR/+JPjMll/sObnKr2MJScL+gNciO+
5WbuN2/iab2V2/ArLyVvltuxoHdzDjXu7eUeLJvneRD1zrfYDctDWLUb5xXz
Cc4k/8iTWLPrNJ+RZ5FN3slzSNv9A3C/M4A=
         "]], Line3DBox[CompressedData["
1:eJwV0M0qxFEYgPFXITUuwcbShluRK8BSDCbE5Gt8E0IIkRU732OQkmxkZ8fG
LGQWU67Ayu8snp639+mc/+nf3N3fka2JiE781ka01EU8NUQ01UdUMxHP5or9
ER/iABmtoj2Yy9o+72EXf87/aPfmD22Ht7GFqnbH7/abPNsYscHr+NRK/Kat
8Yy2yit41W75RVvmgrbECyhpRX7U5nkuncWJ/bd33JiLWoGnMZneo5W1a/OZ
NsHjyKc3aV/alflUG+NRjKS7fTenX5qPteF0p90Q59ClXaR/oQ3ylDbAWbRr
57yo9aV3aL3cg1atDf9sgj3O
         "]], 
        Line3DBox[{1263, 1322, 1826, 3143, 1551, 1254, 1317, 1814, 3140, 1534,
          1247, 1313, 1802, 3136, 1517, 1240, 1309, 1790, 1500, 1233, 1305, 
         3076, 1778, 1483, 1226, 1301, 3074, 1766, 1466, 1219, 1297, 3073, 
         1754, 1449, 1212, 1293, 1742, 3129, 1432, 1205, 1289, 1730, 3126, 
         1415, 1198, 1285, 1718, 3122, 1398, 1191, 1281, 1706, 3120, 1381, 
         1184, 1277, 3054, 1694, 1364, 1177, 1273, 3052, 1682, 1336, 1163, 
         1269, 3051, 1670, 1333, 1162}], Line3DBox[CompressedData["
1:eJwVz78rhAEcBvCvO5wiBqQYJOUWma5wkxTp3KDLcAM3XCYDJhP/gMnEYGNx
i2zqlDL4MZyFzXCyyeQWBgOfd3h6vu/zeXvrHatul7baIqIqrfaIyY6I266I
iUzEul7qiVjTHyzLdu3DsmxbYAX9zsbZjr1XZm3zbEa/slG2aU9JNvm2vNhH
7GXvbdi/OyMG7QPSYENslVXYJ0vbU3LH+lmJlVmTtfSX3LC+xNzP9jed915T
X7FuVnTfsyc9zRr6kmXYorvOrnWO1XWNpdmc+4JV7DX3uZyyP1mx5ZNnfqyP
5MT+K0WWSza2r/fk0P4jBTbl+YA9+rcHOZN/bTwyRA==
         "]], Line3DBox[CompressedData["
1:eJwVz78rxHEYB/BH7pyiZLnFIBMbCwMWIgYMfgwopysGLnILKf4BpUwMynCm
W7ApSigyMGAzEINkcimr1w3vnufzfn36/mjKLo8uVUREVkqJiOvqiCtpTkWk
qyJm7Ou1EV9sTbcqDZJknzURQ/yd5XUrUid593+TEZ3sheV0i1IpH/oW/bN+
3nlOUu7/ed4jS7N7Nquf0GfMb3bJEuyGNeqn9JPyyo5ZyX7Bxs0xedIf6N/s
C+6fshH7sNyy7bL5/gfnEzZoDsgZy7q/wc+di6zX7JEjlmE5VnQusG6zS348
q8Cn2Z7zPusov8/9dnOX9bNN+w6r17fZW2WL9bE7/3co/982NcM=
         "]], Line3DBox[CompressedData["
1:eJwVz78rBGAcBvCvOudON0gGRRdlkDplECW5ulKXojtRsnAGEwaTf4DNZFJM
usJANouQUgaLH5OJGAwWg0sGnxuenvd9Pu/ydlfWyqsNEVGR70RErjHiJhXR
1xSxpIsZpj9ZL9uwZ6VsG2cl/cZ62Lq9VfK2AhvTL6yLrdiT0m/LyZO90z7n
3bL9N+lu75B71s5m2SL7Ys32tNyyNjbN5tkrq+kfuWQtbMb52f6hR7x71+cs
w6ac79ijHmYP+oylWNH5gl3rQXalj1mCFerv2IL91PlEDliwkm3Uvcr39V49
7E8m2ZD7LtvSm7Jjr8kEG3DfZkf+dihV+Qci4jJk
         "]], Line3DBox[CompressedData["
1:eJwVzz8ohHEYB/BH4a6wMJmO2YSFhQHL3eBPcQvKMVC6W1gwmC0ymJSiZHDb
u1mknJTBxE0GkcigpAy3+LzDt+f3+36efr1vb6kyU26KiJL8NkfcZiNq0peJ
6G6NWHHeaY/4Ytu6LclJln20RczyN7ap25CudNr/a4kYY8+soitLRt71/fon
/Zr7avqW/Yb3HlmOPbBlfVFfMr/ZDetgd6xHv6Cfl1eWsIbzNSuac1LXn+o/
ndftX7Jp5ym5ZwfsxffX3RNWMPNylf6z/V1ec6+yCXM83WNLrMIS9zM2ao7I
j7fO+SI7cT9mw+ak/SHziBXYnvMh69QPOg/IPsuzqv+7kH/t9TcQ
         "]]}, 
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzklOAkAURdHvzG4T7kC34NQBiSNG0qnY0WgUNsB2QDdih/0CBAWNMWCH
E04Nbn7Vfe+naqlYW6/OREQGT7MRJ3MR/zjGZCHiDI/823zEEfeHwzT5Ifcg
G5iFxYg6/4MaXrl72aleXlblvlDBL9fBnfxF74AbYT/t833uVtYzc3b3+E/s
4oZv62zwO+4fKOOb68qe7Wy7v2Mrvclf8yv6m+5DlHDFLXPF9FcUMNa95PPO
feTSv7gLbtVs6Te5pjca5jm/xmcxBRboOXw=
         "]], Line3DBox[CompressedData["
1:eJwVzzlSAlEUheGLouUUygLcgsMKTK2yyoy01RRSURkdYTe6HLSdADPFCRMc
+Do49d/7n/d6WEnKO6VcRGzL81xEez5idiHiEv8WI65lwH9zF9wM7i9FNPiR
ua/7wj3uXJ83n+En9nQb/If5lJvGE/x190qe9O9ci5vCXWfr/Jv5UTfEhGvq
c+YGPvDr3Ku9bg+s4Y9797oXe9X+LwXnavwdv2Y+zv5JjiTlVrnD7HukImNn
b/mD7HmyrK9yN9wmNiXN6B0dfZffshdlAh2nNBM=
         "]], 
        Line3DBox[{2291, 2449, 2577, 858, 3177, 2290, 856, 2576, 3176, 855, 
         2289, 853, 3041, 2575, 852, 2288, 3128, 850, 2574, 849, 3175, 2287, 
         847, 2573, 3174, 846, 2286, 845, 3040, 2572, 2448, 2285, 3127, 844, 
         2571, 2447, 3072, 2284, 843, 2570, 3095, 2948, 2283, 2947, 3039, 
         2569, 2446, 2282, 3126, 2445, 2568, 2444, 3071, 2281, 2443, 2567, 
         3094, 2946, 2280, 1046, 3038, 2690, 2450, 2279, 2909, 2898}], 
        Line3DBox[CompressedData["
1:eJwVzjlSQlEQheHGCXgaqajwIGAZaiohVZaBoYGh4yIoVGJQ3AfognQLIPPw
Gfx1uv/TdetWb5+vnjIRcYnIR3RRTiKS3YjKXsS3XOUicjKPVPfIZ807WOq2
5QP3JUv6LbmJhe6cz5g3UNSFLHN9OdcvuRVOcM8v5Bwz3UzecT23x+YPf5vy
Z9zEPsURUnvLzUQ3so9RQIl/48f8q/zFIf/unRF3qu+YD7ii+UX/x7e5/f8/
cU1uyF3IGn7Q0H26GfA39jqusQYejSq2
         "]], 
        Line3DBox[{104, 465, 1621, 103, 464, 1620, 102, 1217, 463, 101, 1216, 
         462, 1619, 100, 461, 1618, 99, 1215, 460, 98, 1214, 459, 1617, 97, 
         458, 1616, 96, 1213, 457, 95, 1212, 456, 1615, 94, 455, 1614, 93, 
         1211, 599, 92, 1080}], 
        Line3DBox[{349, 337, 1801, 648, 335, 1800, 647, 1799, 334, 646, 1798, 
         333, 1797, 645, 332, 1796, 644, 1795, 331, 643, 1794, 330, 1793, 642,
          329, 1792, 641, 1791, 328, 640, 1790, 327, 3081, 2308, 326, 2195, 
         1014, 2194, 338, 502, 1112}], Line3DBox[CompressedData["
1:eJwVzklOAmEUReHnQIWiEJ3YYRN1Iypig4kmDB26AE1Ad6Li2DHYIyDqalwI
3z+4OfeeVwW1dXndvJqKiHNZKEb8ymkW8YPlHEsR8/omjrHhdst37A2pcOt4
w33rJ+4jXOPmsMZX9aF+7DbAnBtzZX0Vv/DIrc0/2CuSc8vY4vr6ofsnlmSf
W3L70Ov8e/Jchov8Gx7wO9y9XbT39Nf0PfwLFmSXe06/x/Uws2exm57ntu07
78+k/8dH+Zcntz9uWs7sC5kA8ykhUw==
         "]], 
        Line3DBox[{2334, 2501, 2646, 977, 3193, 2333, 975, 2645, 3192, 974, 
         2332, 972, 3048, 2644, 971, 2331, 3142, 969, 2643, 968, 3191, 2330, 
         966, 2642, 3190, 965, 2329, 964, 3047, 2641, 2500, 2328, 3141, 963, 
         2640, 2499, 3087, 2327, 962, 2639, 3109, 2971, 2326, 2970, 3046, 
         2638, 2498, 2325, 3140, 2497, 2637, 2496, 3086, 2324, 2495, 2636, 
         3108, 2969, 2323, 1053, 3045, 2723, 2502, 2322, 2911, 2899}], 
        Line3DBox[CompressedData["
1:eJwVzLtVQlEQheExRO2Bh3AvoChqEWAkywQUVLAAzRU78RXQBmjmAxrBKvhO
8K898+9zpnz3cHG/FRE97BcilphsR5zu2HcjvmSTO5YnGOue+bb5CA3doZxy
n/JW35IHqOvO+Ga6hRtdI93jFjLX5+kdrnVPfGauIdNV5SM3lyP9H1dDl6tw
eximm/YPc1VXkmVc8XX+Pb3j3+Q/LvlfewUd/Y8ccLn5Nf21f6PPZdwLV0pv
ZRdrzHQrroix/Rx9bADrOiDw
         "]], Line3DBox[CompressedData["
1:eJwV0MtKglEYheHPmZmD8g6aW2bZTVQg5CxnWtoBikgaei8GHfQu7DQIKsuy
KIrm3UTPHrystV723vz8c43DjYNMRFRRm4pYwQd+cxH1fMRgOmJfr3B9+S7v
uB/9G3tY5grOnvIT/Yv7xC7W+DZ/qb+lt+Um1+d29CXuQr7K23Q/nUMbZW7W
2R4/1qto8atcizvXX7gb/QTb9qJ9Jp/lNdfBll2yZ9wbyXU0ub90B0/2lTzG
fTZiwX7E0D5CBfPp38iuNxrpG+wHFFHn/wHGpy7T
         "]], Line3DBox[CompressedData["
1:eJwVzzlSAlEUBdBHpmjGCszVENiDQGsXZiYQGSAISkHmfpxHXILTAigVRcBQ
9sAxOPX+vf/3q+q1eittZiIiYW85osgvVSbZiM3ViK75yICZ/nUlos9YPuaB
exJvp+5TRvIRFd2dectEv8O784a+Y95wzY/+xc4eQ7nNFZeUvR273+ZQLskX
5jnfugrrupZ8xilfume7ujTlgpzzZmSWOdD9udvnU95i7vy2FJF3/uBJ7pCn
SIETOxq+3f3/D2q6KgsIajEX
         "]], Line3DBox[CompressedData["
1:eJwV0MsuQ1EUBuBl5vYSnsD4tE9gdhgodRl0xqAGkoZe8C464wHcFUOthyga
kYYSEenItwdf1v7/fdY5yZmr7CxVJyIiZ3cqosCYjWQ24nQm4mg64oF7/vRP
uiYv8iF3fMttft2v8aw7YNE7OuYtP/oy67oTz7Z0N1ynfX1P16AvN7niSz5m
5H6Vhi63f2le8KFbYV5Xl885Y6jr2quzL4/Mbd71JfbSrrzFm7zMp3N3MiJz
HvCYdskoUkj/wndqdjfdv1LRLZDzD/W5NjE=
         "]], Line3DBox[CompressedData["
1:eJwVzjlOwmEQxuH5lwoi2iuLotwBV6QngZbKVoUzmLC6HEBtbPQKegC3ThEP
5PMVv7zLzCRTOR10+llEtPG4FNFCfTliPRcxyEe80lv5RP9Fd/GnW0MRN3LT
rGz3Wd6RV2kB13xXf8F/8jWs8H3dC72Sj91+0G0sdHnkMJOPzEp2n+Qt+V6e
0o7uXPfOV/GbfsSEP7TzRiuYp/8w5g/0m+7K/B0/opl8Zl7if9K/yMz2067u
O/2IvUTq6aWbodmDvEEbtKf/B4oxI7I=
         "]], 
        Line3DBox[{2472, 2375, 2612, 910, 3134, 2711, 740, 2611, 3032, 908, 
         2710, 739, 3159, 2610, 905, 2709, 3158, 738, 2609, 902, 3133, 2708, 
         737, 2608, 3031, 899, 2707, 736, 3157, 2607, 2463, 2706, 3156, 735, 
         2606, 2462, 3132, 2705, 734, 2605, 3030, 2959, 2704, 2374, 3105, 
         2604, 2461, 2703, 3074, 2926, 2603, 2460, 3075, 2306, 2373, 2602, 
         3029, 2958, 2878, 1011, 3202, 2702, 2465, 2601, 2915, 2901}], 
        Line3DBox[CompressedData["
1:eJwNyzdWglEQBtDxmEOnLMBFGDD90CGVUEHrsSaswQ0YGlHMAdEV6A4wKzag
i+EW98w337w3v10tVoYiYovHyYhNMlMRbbM+E/E8HXFp/6VLwr/ukBQX9h8m
vL23b8gtf+fkc7ms/za/WOfOraZ7cj+zf/LBGn+6A2Y5tb8z7m3Lvirf+ts0
S7o385UVbvSJ7kR+oUOavn/7HMtj7jV5Wb72vmGO6Kq6JflKN2ofNnMs6npu
eyRkybDrzZHbgzcL5o4uT4EB5Bor+Q==
         "]]}}},
     VertexNormals->CompressedData["
1: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
YtL3+ObaVFqfBl8ldTXI+gJCbuQRHsUnpEtpfQb/OzqXn6zvbUjNRcJLuCNp
Zg+sU3DyRyNE1vdSRGQom6z306OdtN+3yXNv/0HWZysmZ014CecUy1E87ecu
ldIj63O6IsIH600YGZoC65xuWXVGjaxPe+meGn1Y7yRneu7be3SmFpH1vUm/
PA3Wa1ehT/H04HnuQNaJvGokU2GdZ+2eU/6s3+moSNaJ3Npn2cE6u5h12mee
cCbrRJYf6ztgnXqR/KOdYo0o9VKpaUZcBUrrD2U/iuvBP64rfYfP5waod5pO
bUT6uo8UTbs6cWdr6W7Y1/xHvGfJvpDkurcmsC9W9ucReF70vhbP6l+t6LTx
cbFVv1pxuNZutdEHDchqg3jftM4KlPJFvCSSuxcHh3WowOf/Jlnf5rZvRJ5b
bzz5tKUL88TPpP1rP7lkD8EHKciKjYsQfFKOdajC87vOmitO29aGkn3O7Z26
rQ3/HF624YRpPfLa0R0WKFqJXuiqud3S7sVbwx6uh8+thAe1w943ovuBzbni
rl1YoEOU1sMu3983Cc7oneuRD4Cz1bX9m+B53WVnGpTOtaF7nUoD28614RuT
Jg72oc/oufPDLHn1SqSUEtH0J5D0zdNSQ/ic+8iFr63Tm5DK1J+W8zO68L3d
3VRHfPN2bCTnhSoWJ/9LJOfltWmc/jvbQmS9RmPb0F9WX8Sv2DbMrRHT37+9
Dh3PlE1cbpCN1KKmCrI39eN+HZMh+Hzlk1N9c2wq0Wik78In+b14zh3TQfjc
QvdBjOauJmQ1fb/owfYuzN+7hP47eZeTB84WtSGrEN8/Z4racKrbB8pjpZkt
BqCvB2o9raDv+Jm+G7+SK0b6Dqk/jZoPfZeWf5vyrbjntaugr8f1gk2g70rc
K3/C+bYKu3aROkDfT6x/cWhqI05cw6a+KyDBZDrpR1TYdEYR+jFmZiZ9fpGM
tszjuB6UHCf++1lcBR5y2rYLztF1IZ9ZzZYupIvvmHPZN+KpTP8O99o+AZ0W
949eCP1r5+S8A57/+ah9axR3Lwo+UHRBsLMC27wMUIDzUpa6aLvUtQvVyA0L
XXnfiA8sYVN9P/yZ3w103fLbX2Po9wWNr+n5HrK82EfqA03R8xELEK3Egg/M
D9BzFNBfJJTRhR5fdItumd6ER8oF6DnO1pHIAB+g8FVg4D3pvxXptgbwfHZ4
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
lL5fueoc38eBYmzPV7rxwc1e5JboR+unwNRRYZt5Nc4rOuxP6hNV6d2k7+9Y
l7/tLarFR3nFvpL6REhLivq/6o/yYVKf+NGYg6W1QCu6+C+Svl8x/DD+rd+G
o1TKdT9VtKPgwVs0Pk1IYCepT2x52NNga2UbSj21URveX28pE8mm2I3NHBcw
dRxvR0m/d1P/azOrb5P6xNn1xzcGT+ej/dJDNL9ZrfeekvrEQ+NJVqO1Fcgg
2YLm15Brfcvpt/34scj466TUQuS8hZG+/+akjTupT+w6mHRUTbsQ/V7mQd9/
j3eHM6lP/LqOafvC2CzskBtA398atcWU1Cfm6ezYfPr6G9y/QIHGP79q025S
nzhldGTAWj0bZ7TnnYT3r9S7wPNJchB78GrwX/qbi7MfzdD3D6/NTyD1iXMZ
V/sW9zXi24vVl8D7+1oOPCP1iS9cZnK7caMOf1/WR/03UNoaSuoTC9v/liT1
iRsmfWj9s22wUjMo68aMysjuXVgb5uPLou8Pu1wzIS9Rgz+lnlQh9YkDOm7R
+GfsmdLc+KsRm+h8XEHqE284dom+/6besQP8hnW4azJQk9QnrmRbRN9fnRW+
6lFRHbZk9M2zKOzD8SWtx755DaCUBqmx5y8S8Law8EXlLK3YjOsEzbtWtZHL
K9YXWGfRQl5St3jFkWn6uQHJhfG7+TEeq3x2iNQtfm/8lsZtkexagXrlQOxq
Vv2Q1C3eJWNB62r4sowV55372KRDO43ULf5p+ZN+bnb18fMhLxLQn7OqC+Bz
Xef6SPnNrJ/RlQ9l1ef6iG1nS+ll+140eFBv38RoGno2ufj2NZVObD6dRe2P
R8ZYdovmoJV5f38z13fgFtHOMrDzzZxWX7q2Fsn7a9ZwJLbi96L+1P59rXI6
z64GxNTwymT1RDMO0K+XZZLrRo6vKm8sFYpEawdP2vz72Y0trn+n8fdSEusL
I/j9/vr0MohD34wyff7FsbzB29vKkZWq8+DIiS58MbGR2od0g4+phFaj8cZ2
08oFnbgtKWMWp4UuKxQIzyTPZzsAeQxfWofgedbLNpv7ZlrROf4+VYPJZnzl
CiOtz12LxM1kCD8YPp6Wgzi3KajS+PvvV7pO8o5uL89hg7zLq269yLqkHT0T
jj0zkfoFKahsqsiY6sMXUoSofcFmxWzHw4Vo/z/F00fv9WHutW8ugN1Ro2ap
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
IHngsGniBXj/aazUSnVPt+idsi/hifBsydcQNz4f6Z15f1jPJ61FeHXm6bQ5
8MxCbyW1i4PewzPP4Ty9XAE34M1wlqEVtHcoL+wwIrziXq96Anj26OQi+l63
tM806NznSjyVEVYM7+m/HLWheGY7r6kWJflb8fPAH/C+sf3AEI0Lp/JfFJF4
gE9JnXwK8cErJp+2v/9RqBxF+MDxaFcjxJMVMjPvG488YeG1Inrk5NLbA3rm
KvOD6lU6I+VDFNGvnA2/voH+cdZup+ewXWIVFGWbl4VajFYPp5e24nBmSbrv
gLvtxYrlhz6gDZnz86B+v+zEY7r/ztzgUGOG9QfEJzUQBfvv7v8Io+2cXgbR
t7ryUfqE0/RG8xbM0s9K+38Sb71iqXkVGtSUPg7n78Zz69C69Jp3sQzYj9GQ
bCoB9fU8Kem0n0aOHww4n+SBLVst7Ls84dNN24vLXpfDeSUhY+c/K4xU468H
1Gj//JGTz+DcYbYj34RuGxTj5QUz+7YU047lwn6Vplkx6rB/ZYFxIO1nHevp
a3Aujd6a0dawrnzMfziTtv+oU2Gz9GpFY9JFTG+tP+DBv+cw3+efOX+5cMPN
681bvNXa/u7rSVs0s59HYanWTt5bl9TcP2bQfkKuVW6F84g03LaoFm+8hwzE
Zp7Li3nlQjg/4tixOTeVA14j00WGtH+15xkIxm9TMzEYaVCMONQlaP88x6fO
wviFmy/Ywv7FF4/7Z/rnGm36EteEtD8tmTM9WIr4o0do+86b307COQjLi5lz
z3RWoI8LVWj/IsphZnDe8YdtszjhXPZaIUuKz4vnczqHCP4P57pfg/1hFsa3
aD+eidIG8Pcmos/eQ3+cnPG0vWhnICfs59dbJb8SzsE6dkOB9l/P+oB/NvGf
Ol57aTinXMVvZt/QzXh0RYT4D59F+QDsn3tx8g7t59GfSFtF8vxxXsPLAI+D
357RduH9Lsc+EryCmoS0AL//6d9MN82T9I8DRiLFoP9Nf/uPdOIsIv3j2Kid
vdA/yp7pR4hVgS+d2K9tgXUrnKPCWjGzz7posVQf7K/uP8JuDvY/9nLlzDnw
1q4n4Fzg4RL8C84vL5L5TvtX2z57CvZ77Fx09xLgoxX8mfbT+XC+IuwLzvNb
4wz+eE5jdg20K7culif/x2zS057gvyqbpx/Qc5KXn9eB83zPbhrJBPvudeux
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
      "]], {}}, {}},
  AspectRatio->1,
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  ImageSize->{408.2022151574378, 420.475758294359},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0.6666349577798647, 
   4.9999996428571425`}, {-3.6055511268834852`, 
   3.6055511268834852`}, {-3.6055511268835763`, 3.605551126883213}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7043315292417922`, -2.5259145165751398`, -1.4713972588622422`},
  ViewVertical->{0.9661509689670545, 
   0.03739162695060553, -0.25525315159270506`}]], "Output",
 CellChangeTimes->{{3.942619380544151*^9, 3.942619394727148*^9}, {
   3.9426194293762407`*^9, 3.9426194755777073`*^9}, 3.9426195501256905`*^9},
 CellLabel->"Out[33]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0vXl8XNd1JvhSBXCRZclLbMdxnNBJd9qJPYm8aSFFCiQBkliJfQdYxFIo
VAGFYmEHSKAIgCAEQAAEwABCMCQjKZJay9Bu25PppLv5sijdUezOixP9PG0r
/SZxNGpJcdfYiTvTyXRzvu/c+zaqJDt/DH6/W8urqvfuu+f7zvnOufc9lJ8d
inX3nx3q7Tx74GT6bCrW2zl44MRAGpvCP2EYP/FVtN89YOTh9W3DeNvD1wzj
/6/X5+QxnMHDAcPwfX408Pl1PBTk+jwpH9vyyO2288W3fcnIv+XbyfXA946p
jQPymHfrju/k+Ao333qHr6S8Uwr25tiPd0o3pbPuXn/Ct1X9yjmwEZLHsLsX
/v2PwNcP6K97nQirz78U/Dzjfh5Sn/8r9bn7mfu5YSTUEHz8ox/96OLFixcT
jz/+OFvo/j/8wz9Upyj2OOD87H+qp7j62cf27dv3J/39/dmenp7fx3Pet6LR
aOjf4JWRP+/bHffG7xr3y+/2sBcR33k6Z3Xbv/f3DK6vr9uxWOxLaPHp6Wlu
5F64t6onn3ySe+ZRfmNkZMTI56GNPTz2U3jvHJ3f4/d/1XANYethyOjXAcv0
qu9xPN7ADicuX77MQz/Hne+TIZXzyOc+nbP7jzj7W6lUSvchj31gnwKD+UnP
RpGADbWNYupz7v1/xW9/b2BgQH8U5sELcB7y7i418p/b3d1d6O7u/vmvfvWr
vm45w8LGLogp/FZ5dGZm5m1Wicoe2K1/4+9MfhIG+K/47ePpdLpwcXFRDhbK
DA8Pv0f1bDSRSNRNTU3Ju/3yuC+XhX4LZ/M6dvRt9DjsGeo3chiqXXaceTvy
/rV66lHH4lG4o4VLly5FBwcHnbHgOHG8fvn3fu/39FiF3//Nb37Thdp7vW38
jfReDV7Yb1MjxM75Ri7st6ghJq2TXe054OBI/0U0tn7b3+Gwaw0xn9r2Rbx3
gG18VG3jyXBY1WB6pt17p2m/AdRxTF/lcIZ+FPHKVV8JO8cjOn297vU1qvrA
Q3Ff/LWRr7bVPfbYYxzYD/3gBz9QfQ1xDO9V50N0sNeffumll/irkIxS2GGn
4sW7G/5E7h4673UPu1VvHPNzJ8ZetS1Ak08Gzcz+qe+9o61V/4jQv8TIvqvh
j/xTuvqU3/C6qzT6F51tv6S2SRedv3vUEdJjY2Oz8Cx3erv8H2XuB9Q+b/t6
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
u0CZOQkz8rPhTW+ikPyXmPiEEoYYAePubENNTK0lyVxT0WV619yaVopqU0UW
c2NyE2pq026pag2BLxvGBz3GjKybyw5ryputgfY0WAPmgDXxyKTd2z5pzicW
7LqSenMmNmfO9AhrsiUnqu3u5vStwiOFzj8uCKyDLwlSRqq4mjJyR18p154M
ZtreQrlcUxVKnP1kqv6YXHP2Vk/hUfCkxFzUpailDieenHbiiR0rLkE4CZSh
dLLNRJt39zrK+3GUypoMqUShqRy7wriXmba6M0d5FalibgxOeJUoXx6BeKIr
UW48odAamxe+LDhL5V7eHF8AX2LWpiQVy4YKK/vxuKrDypDLmG21CF7XaOUu
YVNbElokrIA6zlVle7LlhVV2d31ca62rTq1WrS3aI5MVXoBxJyzImieZWlBc
+VIL1myNfSBPl6QVeM4RX55VtPk50gR66yJpg5jyPJ+tWSQPu4oRbvDAs8MQ
zZYXEWdi+v2LeH7RvLbyggow3mu79+yYfbaZwWdeB54dsGhe4pZKWPYy/oA8
z+lnFX1AH5ls4Xz708YnQR/fWSLq7KjIY6cQlXZmrssEz1jvpObProSdzakd
OwnVtjG5Rf6Y64pD1mDnMAlkriL0kEQizxSJrFT7oCLRwIodP3se/QCB+hat
RFPSijf2g0BzZgYkmu4hiaok7Jw+3flxT4q5YUf/s4hAOeseH4fuWLZf8k/K
yRUZ96n7BR8+dLvss/dzTdPXF1qqZL0HKIVkpSLEuGPkMzXXJasTstyjWZYz
gUsQ0s0lJY48syab29DOOFPgOvIMog0pdRZGAGrWbEKO69au8FBZa+yXG1Yk
qjuUJhNdpuKNxyOpWCHa3Pv6hZ6x76KRReDNKtoaUpaWt/Fo27moTipWKW/F
HtWXKunK7DcalQcn/fSVc4SF3dcyotd43Ai5ObnHHp2eqBaWFGWfruU+rVnz
jE7Qux32hIQ9d+ki1fPMz8keYc3uEtvzZJE1ByaBGW64SS+QNIo4ikAUbysv
5pMzxiFhhrAHzLuQWiBzXFV3rnfBujS+I3HHzxiJP2DMuV6wauEZqSNM9M9K
4HF9w9yTWqs9IbKPw7E9cw2MuWC3IfpsIfKQNZtTV6xp5OPTA4vCGjDGXJvY
1IxpZfCxLvQ/al1ILIAxCD2DaxBqa2CMsAaMuYCkZo5JDcKOjzUxYY2Vjkzc
PnTo6K1Tp+qcf+ASuKZA37I5cIdJTRn9Xw8C1xRU/PjJvaqCfcrhi919/Gi2
v6TImm08bQ1Ulzh1LNIFrchLabpEqlnjDXXWRGODSDXOhgQS/D7emLpGSTWV
0yjSqOTeutAeBWOas83HKt4tBnlybXTWK2SFZcUIiFXVxDWuDDwMQD9MNMRf
2jq/4pCGhCGxptbD5ItaFbVH3dLFVWhXnCKWtyZKZTH7lA+t68iWF3F9awcQ
on2sSuWZsTwZdkpXWojlWRdh+4vpxyWwXBFaLLBi29jNpYIDlxQPlCDLJzlU
kmLNjW2xkQMCfyHBzeypolI2xoWVm+C2iiM3dZPXZEFIyIK0ZflFhyxa6e0V
4oAkdrp3wRVpmiQsbI1tIdFRyvEZayI5a0ckOj6tyeISxU7FLolE3Z5huw6C
XANRItZIbIIkUaElOmOuT24j2Z/YMvZaQ50jjC5siCwbiCwZxZEhGmZpcC2E
lKrPeI/KaM6eZ1gx5xILVhwk6W1MOCSx22q6s8VFlQWna3qcf0cUuJzBRxK3
/hskSeByBvVvjn/8lYTqJlmfYAns1WR54Vs9x2VCxG4sklVV1kBNuUyKxE6c
IlOslFR8dRkMYm2lp1NXfaNvL4OppMaOl9XewRI1b4jYwuyfLAFjWn1JzbSP
JZopozqpybcTNV06yKAFgsxdeFxm3s9aGNs/VBRWfA+Zf/bksSIVaFSQIXVY
/N127wzAOwHsqOsWwzrEpJnhSPavr2Nw05qwl9aoGZLZJ/SaWRbLOp1qmKyz
0kFmj0+WiTSz+yNTYNFzElyoz56XyXXRX0z/Jet/gY8AvWiu5ReFKy8iFVOU
2hEdJm31JlmkQs3qTWAPsWafotKqQ6mb1qWJXwNffs2hl6LWHk/RQcGdbXLU
2wsh8iok2u1eMlFiz64jKpmUXXbiz0U39uzMPanp9IS5LZTixCoIBR8xEpu0
W2sipJTdH4U9Nya3jY+AVVugUZu5NrbJkGM3V7Zakwg7k/0LpJNkPCCUHe+Y
spJtg2hp83JS1QnmEovmrI9VmdicHW0bkYynszmlGCX14/Icmk3zSP9TJ+ey
Cqkk179bWeDAzXhP1Oqoq7NTTXU/aC85la0+eMiOnPDVADpb7LOnTqjAEg3Q
xQkqkv+vulRRdFlzlFgyJYUyX2BhLYCUoRTD0A1OGvfw/5TomfbpQFzZdGbZ
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
MSvMYWd65jofboSsTP+iIgxzHGeqws1zDFU2C8PGc4ogyHNCnJ3xSTYn6DB3
UFwJO1wRpRYShuSRK9nKkiaKM53uM6XRcefLWq0Jf77Mzatf0fTpdcLMV4zw
N2bH1skku7djQkpe6P1VfLBHf/8rvhD0FR+TIsIkHeL8TCKDVBq09KLq/IdF
grY3RiWgKvqwkT7PMgBRyjHyOHUBaySOCFQLKaEjzwYij4o6l+yWmoi5dv6K
uTZ5JQQGjRsfNleo5Ma2EXi2ySHouVlzaWQTKm7TbgSHqORc/gysmnMDK9nS
4npzNrlsziSX7FjHeSo5ZkEW77PS1Sar+j/oBR430KgwErydmqaQXlzAChop
5NN8n7gZOSULlBltqNyQ9ZS7JeelTuGPNVZbDRV3OFByXunpgnKTGRq37JyD
P8x8wJd6P3fwHFWZj1JuUkU7b+T9VbymHdFnnOSxJ/rOhd9Mx5NG3msjfSl7
on/wlZnU2F/HG7rIGV7t6A82d3BHJjX7JMl1ucPyM0vOkvHo+kA+CDQOKrXz
Yq+/ryiqykYbeo2QF3T0BfDqhpHXeV2jLFZ02hN2v5qrcQgVFimXr4POMzoD
epacIr8a+Z/e+iMZQO15Qk50zwsKiyTNC07+QzJxnoYpyIoUA7ovWZNQV4pQ
ZILUAXTa42vCDAoxBiLFJISVta9qwnzFiU/Zhpq4NTd5lZQKK8JpHn1Fagwh
VXPgYUQfOlS+g0wSmhyZKUo0JCd2D1lljScvaUY9pxiVeFQSJMWop6Dh0FRZ
wW4lqzLwVaCU8XG7H9HJRyhzdXLHSneN281V7YxJilFjTlRaJKOYGwmrLuvc
aH5gDYwCq5IuqxSjIOmmE5cZlczzsZnblafV3YY+EKyuSXG6KkfFTdNKr3tz
J0r5p+ZW3yer1OqOH85WHTxoLrTX+VapqbC01NnKhEiK00Itj1ZcW6MrblJt
ay4tZVMVN+j8lrLyP+luqb+V6j/LZpeXneANNm+dS3bYLeWVXLxWZeSz4qZl
nEg5fX+szaEM7Kmj0kurwxetS+mJVy6mxuzJ/qE3B+MDf9dzNvrmYGLgtdH+
dOiVmXPnjfyXl0fmhF1bHrs0s/LAsj5Hz5FdQi5JjZx0SKdEvUyJ0q+jZUdj
Y399pi4iy9fO8r6vvRd81elgZRrx6CIsfBH+kMzitqclVfLxa14X5fbj8TlP
0y08TwzqCwPmSTThGUEqJQWkIrPDW2wu26j8Vpz0SBUUQDw+k3yGxBYVtPJ9
Qegr5JNQiHz7Ksb32rrDt69alyavkWfYwRIUWAveX3U+83inYhh3rHb/c2S2
dSG9qAuDX3LptuvRTVYKXVl6Ee0FCWA7i8+Tch71NOW2MUrbDGRzT4NuinKb
cFqbM0I7a7h3SgLZ+vTV28eL+B9owboQKWd8BDJwR5NuB4RjGNu2E9E5h3BW
8syw1d8+BMKtSxibSwnp7FjnFORgEwh3AYRbQlvIHjtSaEUZxtqHmD8pwslc
anUwlZIaXpBmgaty1Fq3/ffN1ZXI6rUTn/2CNSyLQTXVTgjVrIFaruaE9gvd
6os2Gh+xS4uP3+qPNavW25z57ivPZ777rRczr/2nL99Kxtsyr3/nK5nX/+Jr
mTf+4rcyb9j/OvPGX/5O5i227/7bGzeuXiLZMt977Xcz33v99zNZaS9lsm+w
/XsjdCud6jbuvpU+1509UXAMDKxlBY/VO2ukIyHlh81RbzkbwthfJeqjwrIQ
OJcy9uPxHJg3yPbKbHrq5cdGH1VL2c5v8H9c+NKme9zatmp6fYFKmfj81oX4
7Lc3pnbUDFDmOng2RcaRdh1QUdCEqtbt1bt5oYGUusMeq8J+VkkB4nkutQbU
Zgc37VjrkFN4IK+UCCSndNGOdFLNS5mQLdmp6LwbsBCB7Ah0XqQ5zveGilp5
DqsctoRIK8WwvdBmi/jdV6Vhs0Q0sEs+DTm00lGPolFlaXt0cqUrHZxUKm8h
rVhnvCmLwF/UjHJZRTkgtQnWJcAqtDmwinN3888Y/9zcmtekmiWpniSpzI2Z
GyQVyHUWpLqmAtnUrj+YgVdXIA8Vt8irJYdXI1vg1Za54OPWPLileLVmzg6s
kFsS0DJJ8mrRriltRKuXYFZa0aZv7hicZa3JUeRT//rD0Nc8BC72UReJ7uXl
OwxidnfhMQSyGrIL+ZXcDwyAj3fVGffc2H4snfnOH1/P/MU3fgPtyRu/9vjw
jSvr45m//LPnFcFeedEhWea173zlVrKvHST7rRAZZuzXHPu34NitW+f6z954
4tcvM5hpjgm/4CTAsFDm+2/9kRHOfP97f5z52+99A0SL4oO/zf4Jtv0w+6c3
nnlq/dZQOoZ+DaV7jbv+JHY2IrfTLT9WygqfUomTyy+tjS++vDx6mQSzJ1Nj
YbAubeR/v+NMx9/0nom/Mjs88/JjrGDIuoRt+Scd4Jcu66X1+p18Rxu+2dc8
+Obqhc2Xti/+unzGmaSZG1xCLTfG6JQFPDuzTnn8aXWXGL0ILvyOJMvTydYL
bJxTksjFhWoxBE0JW36CqfJdyCNZmMBXMSzKf65zVaTg1dWvOiFLE+yrPqIp
knHade1r8pHwbP1rDq/wWZ7zGbjT6ohMtfkr+ojyrLTjvV5tUYLYsjxTS06k
HlWBjFRb9ii3w7boUg/D8X7STti9ffkZCWYO5zZnn1KcmxXOmRuZG+Z65rrd
Unv29vETteb61FVwDryb5DVXq5NXEM/AOcYyu6kK6qtzTPNuVni3gJh2eXDT
6gfvEuCdx7k1cC5jDSLLqy1rIu+sWEvSijb3g3d1t2sa++XeHfpuqoEp25oc
BcEg7wJTtupWH3ulGth2/IisM208eMhcOFPHOzLZjS7v8jLf+aNdtF/P/MUf
C+9CGftPftMI3+qLNWnqwReDeDeNe4R6r3/na4xtt1J9ETe2vSG8Y2zTnGNs
e+335TW4J7QDRb//xh+Re2h/7LCPvAMDY2Re5off/1Mc6off/zP06od/+0rm
7932rVDm73/4rfCt4aF4CA99qg6Y/1fttW1vnG2OkGyvn+s5l+3v6TcQBPsG
jfzXRgdGsX3+jXh7/59PJTL+S+ausI5uXexfyE71zVlbF3fdlUA6I3OyMVY6
npLL57rUpQxo4J3HubBTSlepGEmm0jEtEPUShptIx2bJNj3TZE0gB9pV4lBK
gTpJCju41yGMj5zDXZBt1xTrFFXC2VNFZQ75jP+PsHsBijJN8wX/xZcJqHXp
6unLTE/Mzkycs3si5mzs7onYjT1nzk5P9HT1pS5aU5bl/VLITUggTa4iIH4C
AgICAooiFlkKQqG2ZSlHbcvOrLZoR6o8pG1nWxbtfG3TLA0Uk03TLMEYhvv8
n+f9LklZcyriTa4qWvz4P8/zvt+XdqwN0m++fw8Vi3ve5rdcH0hSFeUl8tao
poyN6g+7pLnHIiLNJS6nETOZ93CeNnCAq8lOQteJyCNx2tfJG7mrtwtIEoc1
YAayG8yt69IjJblV5I3MUfHYDnNUKrSRuTbkHHujrMusiL22clOkMKMMteNx
sfa8ZS3cWHqUrO2O7EwpsTNOWaNmrY2skbethWIt0KKbmWmGlhTJ2pxPzALh
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
TSQj/pTSSMnOZtSgBPIoUOrhapL5HKnc4hLZBpFmZmZl7NVX1iuRjeFyCTwz
LaWEh6gJT6k1mSU/Y5CqOtVzWcddAvi/8+ML3atfI4yUb3euNxt3ZRYTykpb
SxhPSMWJjONTNnbTRyC3ACNGMZjHXNCet/INMxgH40Ng5HwDSMKIYvMGgUyz
MHoYYqIbIuKNR6Sz2MUghR4XP3q8j3BTc1Hi55XmjshxlgEdj1rwFnd2iza2
ieDA2W7CBmCPuLMjZryxeJY6O4xgphPYm1d545oS5rjIXAZMevj27RuaB5ro
zTksri3n+LhOPqTR59L7H8/S6z0QF3vtlY2a7Lp5l1LzWi2UI4zbLXyjW/GG
85/0+m/e2pozkbItm6pNn7lnd4MOclSEFuXvGd9dXDWZ6zMoGY9RMr6rhF1l
PUi+rvarknKUemQNcxgzn3owEmcnX1frVdUgHmdsLSr+8Bo1bS3mNkRgQSN/
nXb8AZtXoDUrbI0XdAq9C9oziD54ixTvPKAmLohAx1q7tVnB49C2mgHcgm1d
eqQwuwrxhyv8qnq05eFmisBmbFjs5QikVq8bEWhuWrOdrL3NXZ4ObQLtG+G6
kk7GlpuymyrLmnBNMUEr7iBnWEegjLU50tog7cn3Xl7L+Veh8i99q9/cvCEz
9vJLb4g03tzf4kxe7AHoijhpcVcB/m/8vmdQUQYPVfvs3Yio9HU88YSy+x+r
3YiRPvpzHtx5V/uaRB+Vkci7h/cu8mhlzBmtMLd4apx5xiT3ddzbKW43NQ49
HdSoKHNho3VHgbtrzM5iRVXq3RN2SRY7e/twntJuXtIO5SXhS7ASzyooCaEf
qScFpQMQy8v+WByPO+klVhLrS3B3dEgxQOIMnOWY8zA3b/A3v/mUsu7HDXNz
vwM9UahkssA5/kVzGlDPGo8fzZqvv76Kj6Yc57PY/6a/RAeG4BCHFEaSVnh1
iIIF5sZ25dfE/Dm7NB0aNS88gigF4bHhQ/XveplhErMDPwRdfm5LZP9e8LvK
JSvYXaHyTMRdkZe0OkUf7z+UFnDkcdRx5EEhZ9wlVJ4XtW8CXriDFPLLRsTc
e6hEOfaOuPi12/zOEDxaxLCNejuqPC1+hO80VZ494KfDH04Nij4163zb3KgE
NpS9bfmjh7qS45o3kptaGlu3IYfxVRd3IOXooYqi7lnzTSpAHXhV9PZmTFki
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
fM7RmOZoNEOOSNEoIu+LSPq19y5e1b4aytq6DVNSWltJo5Ssd/pIZO8Z0igi
b7/Ta9zuPhVszi8a2b4hRUQ2WWVrO+Y0DZeolG3haemFSMHOelJYj4kpqXwP
IuWIHDWUVK7S43PcVjZWnx1qqH43eqCyJ1pX2TNVXdE1Vb3neCw3y5jOzTRi
2YHGaG1FcJglkkndmpmewqim/KQ6aHPS5qhDI4Wq8hhbtzmPDDbCouYBRB1B
SU3t3pJOGMTC4bixjPSd5pZteWZGLisMlxbjcNyG2JoN6a5WMu5Z+eIlYvfi
VxSV6959910l0aMkskLUq7JHaAu8r1kt48zcg2BP7zEsfMe4ILrmMsxxPNgj
24UuiDocIhVEIfvTsUfh+TcpIih5v3CBx6MLOIu6gAENPCIpFwBPlmxVaLpT
wHqtvtFa3vga1sEp5avE5cIjjkdNZHokIm9zRMrsFKG4gCe6nqe/QW+f54sW
2SP+tpyJ05g2zRLGWekZsSgWg6wwNo4CFgyftRnOPLSWE4vT8bFIDk0dEKlg
R91KDEP+TF+wu/UwB+P4yD1Vt0aNsdu4ihIWv8HZ+PDmyFM1isQhY9TWCIm2
RljkbIyexxo07p67GMrctFXT6XELfR22xndIYzdpPHHK+Pj4O8bHx7pD6WvX
RQrzmzQ9sreiR/tLyUZIpNVcf5Gy0Yds5JNvpFHO2uQeoPdn8v4FeQw3ikZu
IhuqB6h5xOofqt93OkJNo+n3VcZSUkqmqso7p6rKjk1Vlh0bryo9Fq0uf3t4
Pw6swiWJ1DxsUppI+qZ0eSwqPAyPkay0Cq5fPRKM5po3uHLF1r4KxuV8+i3b
V2C+sXorkdxPJFsVyY1mWlbZl85Qlcm/kw/F7e/bY528LO4XpWfkqc19Dzv0
WmObUF5hDo9IUaTiQapUu1sUiQjGIr8akfJJSkVRh0Sxh4s68tw1qmURfSTP
bNSc1BWMT0Qf79M9nmeHvHhco0al5/ptiR4VgErgks6SGXrtDUMvBGpJ9FUV
qTKVV8Pnn9vpKNMcqVXJIS+MTud5gCMscYsFVKuz82rLkFDOMk4dOpcG5aws
nevVBKI5A6LMlIgyUJ3rVvr/4BDVOCp16NRBU4dL7T9JSxl9oNKREzJ4ovUw
Ec2yaY45IUks7xgPb1ksb6uxzkFieYtYukPyBofkfTskrxNLoRm9ICxRtt49
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
TKfZxGBcXzlsqqiowKNK0WHoINeg3BhmpTHnGnOqJ0yBJz0hhx9DUwnIcScn
E9LioTQI40uF6po6HXP4MZEm4xjdBzrCLVNzs8cxQXUVsXuIpbKHPAXt6ad2
AtAImZ7B2MiQcp2Yhqp+ELfsflOj7xpreMfM/R6pO6X21OTsuhOzz7aEYItx
4alCDx8XU4i1Tiv0HDbHiefCG/3jlbhjcfSz5M15GuDUEPS6ybs7OKrevG3y
7hKbCwoXLKIM37N6kzaHp3U/PkMOr2tz8MZ94AmKOzEXjCg5lbkdDd5FZe6C
MndemTunzJ2FuZVbyBuZq93onVbmTilzn6Yzp0rOj3kCk0/eyNwcZS47hycw
trl6Ze7AZMm8fZM484DO2/v6tDuzJmVL5mXqrAsP1Z8rVn3kgp3zzwCvtW7V
h0AHfETuR7zygtiTYcwhhY/XrVur6t5PLl7mYSD6y4ULF2PdGp/3mydW9Dtp
+A4+ik9jS8U3Rv7Iq6T1/ywtLeX9av1S03DcOSi3DWPT3DaMjfR7J6Xc1Pkm
2cZDGNSWn6sdMlVlSoWJvm44JrQQab+orKrhSItraDJoYWIpuaaRARjeX1xV
hcuFFp1roi0u2iTWdGmJZk8lmjqqz3vW6048JG+y3dLd0cvXDl042lx6b8wN
0nj28sB7gAVqmMPNw336vyNuQWlhSVBaUBKmXAan3D0cnr3s8w9u3wtvpC7O
ZSabE3cu0DmvCruzFrvTYZl5S5WZN0+c93ev3IR9zqBwfp6/u269KjPF3bVI
q2e5ozLz8t6w1VvMrR65207utpG7Lba7kWVm+pzTrR65K6wkc+VWmZnqTm78
Dmt3MBd155qgc8GN/jntGc/oVON3PA5quPM75sST8xfX8oYZVZqg5sIZ3kez
8UetxcXr6axV0g4rbfxgUSJvSU2iuGrbz6qq12tpeKhISdOP8NlPCj2ZNIxa
sNDJlw7qpW2qrvxEaxtn7hYyQl32t1BDop1LTJ8xI3Sm5ir9aOf6h/RDQbqd
48sGzDeH8eJ+zFOSA8MyQxkYkoT7yTWknQ64vv4ndGfqSdgL/akRS3Pzcaue
jHHU9fBRUSfusuBOd3U4QUVplX+koRnuHCkvx7G9zhR7ibC0VPAeWO7GeB1U
X3LU3cBphz+/fud+gncX8CTvnuW8a79827R3d7W9Cze8NpN316y8C5B3LuTR
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
JFqJKJL8YGhkkKhJZMye3lzYs/E9RAFgISaVOe/Z3kfCKtPjo+G0MyuABKky
Fg0RQgHMhBOZfQAE51UGRY0HogWCAZtzMbZD1NewF5JhUwAI830g9Frb64Bw
wNreySnbmzfJVJZRyUkc8BgXORX74PmssROpWTyRjMqXxYHFAH7wc4mxDQb4
Qec3UaPj297u465/YXZfTHSZsrTcfasl+klG62x1pZg1Is+2QliLs/uPUftr
UD0zhEb0F2lENv1LW4sjwqEy/7fi9sfYBcMHABvVQ0nb5GnYiihsmDbX9xQi
0ylhTXsCOx7ZHceORIvpvboHs3kapWmITU5VY+jaPLbe9GA3CtJTfktvT/Vd
XwfE8XUmMX5GiY9XfKpnJsY/Sm320tbOwq6u7Rzf85rRx2R8h5cI2ws0PS3i
+ykR3wWjYXPtBke4uxCvsxm9M5XNbu8+7HkApnZ/wDv2ta7BfcaHPaOk1W86
1WDTaV5R02mObjrlsOlUQV1NfEp5UoDFYgTuL7HBHpufCkT15/hrXslfb/XZ
MiM4b+uj5AVnT2vCkinvY3Z0DuylF50Vh+dRjqgZ4fmoJeq73UfCmwn3gq0E
5ejPFOvXu3sFaY2hOxBIBPZp0sY82riXP2UrNO9qzu0qef+mXGhPx/t7Gtua
BG5oHe2kKBjYbPE5G4+/w/v2D/6+ZRZAed8qSHmbG2ZiRZL3SReQcKPUc0Ux
9WQwph4IxtRBEVOPZsZU3qoBT055qw4Vy2mE+0TPQhWpKVoqvVNkq1Rqq/R5
XDzaQnnbqy2x3aWoKNVvcg04naPFcpdUepuo94YfXET0EzKdmXsJvd6wfxw6
ftJP8Oz+Q2bDCu+t2lJGYOw1gTHCLYI4a7mkO6WwSdh/79qlvmUD4xGzSR6X
tmYERt4kCIy+58EdkrvUGNwlMr89dHqaLvHNpaeG7UZpViG/hoyTtFcqZ4Kk
2a5Y7BTs0gQ7WaR3ysuCvu2+ZkOi3qlLZYZEtj8jrNItbunwduik2KETQrpw
g1i7vi3C3V4X7oR2ZYS7EtqVtUXsUQ4EtsiEO3uCjCnGlhn4Yhn4SsqZt1P2
Ce8JNJBoTs6VuvWsHwmJZqxl6tf+JmUO3vAmPWQ2iTdqVlvSOastM7gd22x1
KCLiPF0sQzq2HcZ98WKbvy+HPBlaU0KG9L4EZCi0L5lRjkoK+oxNEeRgP3Sg
oyKC3RUasKcxFwh33BZusFuiHaJXsnwmEOH0lvyT+1bJstIPWcvwN+SwEoh1
wMK2zrW49hEuPES/LF054q19ka5EuPDqUU9W+rwsjZf+YJGuLAQ6eEtvI1YZ
0lJq0SNfXXi98SHFGrvO3wsoiV5nr7Sn1/na0EoinPijBvqDTZMbsFZWeHvB
KhFrdn0ZOYBXA0sLNistBw7TocXtEIvryUF5ahCzcpvKB+HYlsgUq0HexBhd
qK+hlX0hEPm/5QcVgiUjXf2nMiM/50LPeEFlQeNsLCh5K3lYrORAQFgPBYS1
NyCsQ0btVhsdaDFjr4Zgg3acFa7pKUVXdIT1LCwZV0eFRnhp+DK/70dn0Z73
v6YX8qZbyFBlAPeDvjbGhYJRScfUWVh4KWyes9iLp/2BeNpnVkzEU1gtuBes
FwiPWbH9Q69YJrUJfE7x4rDLj4jlOVqwWW7BXnax03L6aX61gCous6kPy2Qy
Z3c2px6c/uqUpB3fuat9ynQ1rLCxqT0V7fTCtKQXZrhbmAZvYQwhjdIwJ3Np
TqLqtzjpp3dFpSqUyg3WczQzC0AcoUJDKJ/RC/CbMgmnj2uWhNOwiQenTZgE
GfpUytIjzNIjfJGq0r3M+vmYnGfZUB5HXunGkcdOohPyJvm/aaKPdtoXHkX3
82r9yu74ryyUn9FC0MMSef1SGsbV2DJCRJ9jLCakX/IUOaZc74BmRfobFmgs
Lequ/9dkSjN/9pVITERYmuvb/kuZ2/dT/jkvDD8VWDt923tl3nZfYEue9P9a
ehXcwFef0ufSE7Q9gdXU9VHP8uhb/rcyCbw7sK76tp7C69v+rswF+Gu3hnZd
n/AXgF4Vy6D67+5bJYem3vXXlX7VE4FF0Lf9n2Uuwk/c2tpFeDywCPq2/1bm
Imxz4LLHu48OLALPKKr/5d82s3n+VgBco93XbHdE3/Z/u/UpybDNAYDRuw8S
XVlm1f8Z+qXT734zAKvH/JcuTjJW/7fMFe1yK2ph9ZiDmt0ofdsv6M939y7Z
C1gbWNbH7Ov/gbhjRZmwej2woo+43bCLIO89rMyVWME/583oP+JWx66EvPeD
/r0zI/9St6J2lUf5m0e/8yVx75H+vTMfwev0V5l+X+iNLOW9Hy1zTRYGQDfS
rZNdE3nv0f69M7P19sDaPuyvCb3GvxL35ohfOqy3+utBuHnY/xr9fnnfb/p/
cyb+5vDPefijZzsI0S+LOz5T5go3B1Z4hL8K9Jvkvb/jvl8yts90K2xRp+/t
cVve+3tlrsS0wCqPsCvxQ3HHF/07Zq7E1MDaPuCvBP2cvPdL/r0zAzyfduJz
+4HASsh7/8i/d2aUf9VfCfp/w/2/m37nj8S9x/j3zgz6E/x702vR9/a4Le89
vsz1HhdA3jC3TnZN5L0nunuXjPx6BsBDnniTCcvtV8S9J5eJvJcDyKsKrIm8
d32Za6Lx5GGwMrAm8t7T/HtnsvHFwHoL3bNrUi3uPXPoNaGfeD6w3hVunayB
kfduLnNNvhNYb7o3MX2MuOMc/46Zkf9Zt8r2FeT8lRBnyvK929wOl2TjN91u
2VXW9/aYLu/dMfQqy3zDY3rOrsRYccdFZa6teLTBYi52r9SuhLz3a+7flKy3
fC2At8jhxK6EvPfyMleC/UWlhzf48OLdOHHfVWWuBz8nWelhDT68tZD3XePf
N9N/sU/LS15bPo8X9+vy75eJMo43ebO2Hn/l/d4s83Xzicp5s56eT5H321zm
/Xifc+Y+v9SxeYK4FY+zDy9lpc6tW7fun/WfI/8pzwdVSJTgP721fv36K5s2
baoRP7rD/4NpQ+X3L5T/3+rf/T81MtA2\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"8154249a-3575-8648-803b-504c18399b32"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"ArcCos", "[", "x", "]"}]}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9426186825982533`*^9, 3.9426186964559155`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b88f0256-8d0c-4b4f-ba66-12079cae8986"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["2", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["x", "2"]}]]]}]], "Output",
 CellChangeTimes->{3.942618697035988*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"b42ecd6b-c0b5-7148-92ea-0896ed6e2cf5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Expand", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "x"}], "-", 
      FractionBox[
       SuperscriptBox["x", "3"], "2"]}], ")"}], "2"], ",", " ", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["32", "3"], "-", 
  FractionBox["64", "5"], "+", 
  FractionBox["32", "7"]}]}], "Input",
 CellChangeTimes->{{3.942605013817468*^9, 3.94260505873846*^9}, {
  3.942605137792694*^9, 3.9426052713084145`*^9}, {3.942605638886854*^9, 
  3.942605641811913*^9}, {3.9426057495007973`*^9, 3.9426057843050365`*^9}, {
  3.942605884055649*^9, 3.942605910594938*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"5e9f784d-672a-e141-bb0b-7bcd03362cb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RevolutionPlot3D", "[", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"ArcCos", "[", "x", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"RevolutionAxis", "->", "\"\<X\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.25", ",", "White"}], "]"}]}], ",", 
    RowBox[{"Mesh", "->", "None"}], ",", 
    RowBox[{"Boxed", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.9426180972534714`*^9, 3.9426181169388676`*^9}, {
  3.942618292637417*^9, 3.9426184045059795`*^9}, {3.9426184654142017`*^9, 
  3.9426184709965153`*^9}, {3.94261856277034*^9, 3.942618595663679*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e1d20a06-e90b-5b4c-a93b-5125497e51b2"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJxtmHk8Vfkbx4VcWVpkiBKVLKMsqZTqfg9pSlowlSUtjFQGZTJTyYgiooky
QwuRTBJFlmu77rltolAUWaqxyy5LEq7fOffb+fbr+6p/vF69ntfxnPd5fJ7P
85nndMh6n6iIiIj2JBERMernddvk7OBFR9gG1qV6SYnZvMvXFU1G500hXHXZ
lxeap4OZFofrp/7N4V0uyVLXHmcRKe9rJtTNH4B4B7McyZNZvHzd/V6vqiQI
9Tx5w2z3ZyBVTTVOaX8mz2fr7I0H7kwmyh5rZqibVwCHhoLk2I0ZPNZgZIzW
SXEiRPdxiXtdFfBUOaqTr5nOa3D79YniRjHipyinVo57Hdg1cLZQZyyNdy1X
w71cWpSg2qX+1YPEkT9EjUJSeSGei1dY3xch9mSWnVM3bwRzFj5pDRtP4UU0
nCWMSgWg4ECMkvnFZjCnMGzqi/W3eUahRVPVukbBbBW3m+51rSDKX4T72TaR
59dS7OZU9gkcLzc2vKjeDtbZpF11UEjgrdVJnIi1GQKvA6fwOe6d4O7E9Z3S
m+J458O0tdMsP4BlxtWb6jjdIL6rj5PVFsnb8WBPzZQd78GFnps1ExO9wCrB
j/zZcrhA57P1NIPHGwDDOaWiZsvS50Okl8v8+hcJEoizW87ni8rlg6RYtJqD
IHoy4hw4e5fjvfIB0iEj59zzCHHEecu2LbsvP+8nM21qEl4HiSHOhzySVlgV
fyA11H/558xRUcS57MrxO3ML+shZpbf0ZjhOQpx/b7/AeWPVSyqWXi3YaiqC
OAdOTXy1Tr6bvPzb8igFAwFgOF8y7ZoektdB/sGx0d7OH0WcvS0aHDuM35PH
4gPTV2uNIM6mTsfsks60kHKBXftO2n1EnGNsNndrBTaS+SUfZ583HkCcH+9b
7aQo+44sE2MZuBv2Is6T4hv+NZ5bSfrKt1fO6G5BnF2MIxel+i4jVZaJKBpZ
/YQ4B9wIdNx4U4y/2zbYTspmAjCcF4amxdnfF+XLnxjTbm0fBwzn8pTc+NV1
k/jrdvl2/ec9BhjOHcOXXmf0i/A1Ta7kCVijgOE8T/2+wj4JEb7SKdeGWWEj
gOFcZyqoOK0tIPUrimrSZT8BhvO1kMHZr43GSM/m5TLlfh8Bw1k0265T1vAz
eVL1Y9y95kHEOWKseGe7/CdyIvp0gN3SAcR57mJ97+uvhkgrtTlTig58QJz/
ZNUE9zgPkNl874/PenoQ56fSW6PiU/vI08cCMyViOhDnuU2nXFbN7CTHFt7X
PRbVgjgPrB08+FqiiazTE7fMs32HOPsu/uUyb9da0jgkdtf2Jjbi3JwUPi/Z
T5I/+cKK6MLdrYgzGB49pv8Li6+8XWueun0L4qzrk9m92kyCH2MnFq69rRlx
3j7vBH/d/Mn8QZ1ZAR4WTYhzluxM6Suj1Hccy3q4n92IOE+KWd29oUyU77rc
N2WrTgPirLWg3mU8ahJfndWyZPL0esTZSmHRsSfbRfin3LIvZLx8izgTXR1H
A1gCcr3xpEhf1zrEOaOnk/1+xSjJUrcg3GqrEee9/yx5+6PeJ7L4gEBpt3wV
4vzSpVImoWyQvFu3WUp+ogJxDpYZNPqroY9cnTRDqbOiDHFONS/MqcptIyfe
ne0ESY8R50C7235LNTaQx8Y9D+rJaCDOsyO8hm9TnGuMDH2Ld7eSDOce36eW
NGfDF+caNOxbSIaz9I+Hn9Ccn1n9q7toWzPJcPZZoB1Nc26qjhbxtGgiGc5r
vPPfX6Y4+yWGqbiyG0mGc+d/HSU0Z/nM5kYrnQYS6cbtGxtozoKeYjPW9HqS
4bzXQcmB5ly/Oe1g9su3JMN57uatZjTnuurDc0+51pEM5/FNC6bTnGc76nkd
qq0mGc5nwuIzaM7hjk79e+WrSIaz+YKZ7TcozgN3R30UJipIhvP9OR+Uac53
R7tn9FaUkQznvW0TYTTnG4pqHNOkxyTDOTtP24bmXMQqIpbIaJAM57GTwZ3m
lG48OnLYX9pmAnHOVpDTp3Vj7ribWVv7OOL8s8DPiNYNb999I/XeY4izTMQr
T1o36q+8zJ1gjSLO6veCOM6UbjwyKahQChtBnF1MG1Ro3biX2czNkP2EOIu0
nf6titKNjz6p9ZRuIM6VBpJbaN1IDVrlkt48iDibVus9e0/pxpG2qpX2SwcQ
51UuysNxlG74mPjcoXQDca6zdZandUMqOkS5tKcHcd6wW8WQ1g3D1yWprJgO
xFndtPehMaUb9wOvfaZ0A3GeEZ45XEXpRtzcUI9823eIs2Si0kJaN2K01/rv
aGIjztsP144sofbgXyz2kvIECT7D+Zm532Ylag8qXDl5m9qDfIbzDRUfnTRq
Dx5X3fGa2oN8hvPzXP0Vl6g9qDoruZPag3yGc2h6+HxLag/6e9lVU3uQz3C+
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
ag==
     "], {
      {GrayLevel[1], Opacity[0.25], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[
          TagBox[Polygon3DBox[CompressedData["
1:eJxNmHm8F2MUh2ckRFSkUPd2b8u9kSwJ2VJJskRI2kQlUioSIUslt4gsKaWy
Zm1DdqVEsmTPlp0QhbJVKM5jnvn8/HE+75w52/e878z7fmdKew8+adAWSZKs
TZOkUoxfhaDXCNkpye5tGbKj99Freq9yyKqQkpC9Q2qHbB2yTciuIVVCtg0p
Ctk+ZIeQOiHbhVQNqRWylTG76YttF3MQX1df4ne2JjH1Au83Ma4M+Va84CgX
BzkaO4KlzHrYGtoD+RrYJ/qJIa1D2oTsbhy46ts/fqXWQq8cGL6LsTikib2B
d09H+t7DHNgaWRMc+4iXfO1CDgg5MKS5+PDdT3zo+3uPPvY1Dlwt7BO8B1sP
LIe7JtTZOnB+H2NTa5Qbc4i+4D3IHMT/YGxLcZUZ08p8+zpPjM1C2ouDHEc7
guUo62E70h7I19Y+9ze+vn0eYxy4jrD/5q5HM/UT7A0sa8TYIeR4r7FViX5X
x3hoyISQq0JGh3Q0Duw3h4zSdor4WIdO4kPv7D36OD+kV0jvkK72Cd6frN8j
5Axr8Bz1FBN4uzhHxJz2P7zbBc4fYzw25HR9iT/Vmu2tSb6TrM14csj2Eftz
jN1C1lp/QEg/64HxLHsgX1/77Gz8EfZ5rrHgOtP+8eujH/p59gaWQfYG3sGO
2Aaao6cY21hjiLjJ91vIpSHXhFwkvrNDLhQf+jDv0ccFxoFruP2B93LrgWWk
a0OdK8UE3l/0p94V+mK7zBzEj9CX+Goxn+tiPCfJnosh1r/KcWjIOHGQ4zpH
sFxrHWw1Is+vMV4cUmGfw4w/0z6vNw5cV9s/fqP1Q7/J3sByg72B90ZHbOPN
caVzxjqz9reYi9zsp+w97EF/OPeTQ3YKnL/HOCZkivfpY17IPSEzQqbZJ3hv
tx5Y7k6y94d3604xgXeqc0TMHfpim24O4u/Sl/jbrDnOmhPEPsNxYsgscZBj
tiNYZloP24P2QL4H7A+9dvS4McZ7Q+YYB64N+twfsnP4rI9xUsij9gaWh+0N
vI84YptrDmwPWRMcf5rviZBlIfNDFoQ8JSYwPmPMTO2z7Olp7dheMseTxs8W
+0Jrg2uRI7ieNR+5FtsDa7hr9PVXjI+FPGcO4v82/5KQpdYBY0n4Nw75J65f
FSu5X9YOxlccsb0uPnK/pu98891vz29oB/t71qS/OlFnU4wvhLxlP8+HvO1I
H28ah22zscuT7Jnguebdet989PGhWMH4sZhYhxX2g/6J98DOOcx5ytn6ufXA
UhTYkpB3kozjwAs49+E+nPmc/Z/ZGzFfJxlnqh7yhTnoo5JxxHxqTWIqW5u8
8Jha6vAb+AK8YaXX8KWq3uMdhh/xHufcihF+85F90+eWacaH6iUZh8Ke87La
1qtp3w3Ex/lbKt4G6jW8VxLygXP8svFlzh2cgrN6T3HBHXLexNhY3E20Ub/c
+K3SjDvuZR24xD7mhRc0FwtnPmf/d9YpEl8zY0qM29uemhuT87Am1jvAvNQ/
UJ0Y+EJLc7RS3ybNONBhxtNjzq0YD0oK/LI8KfChVvaNPedlLaxHbThFW/Fx
NrYRb1v1Zt5rLb52xhB/lDr52quDBQ4Cr9g2zfjQcfYAl4BjrNaHHjgfOCfO
EmtH/ajJmX2iOE5Wb2mODuKAF3QSR2f11sZ1FNOp2sDYRR18XdWpB2foacwZ
6lXTjEt1tyb2nCsx9nCeOomPmr2M72xPfbVzzvZJCpyplzF91H8UzzH20NeY
HdOMo4xNsvOcs4lzcYc041j9xQF/GCBGeMVAccAlBot3oH5wtH7WA8f5+oEF
XjHE2kPVc141yJ7gBRe6bsPUextHrnXep0b1NOM9l4hvuH1Qb0SS8QRiRqqD
ER5ymTWx51zpCm1dzH22NUcZD8epsDb42JNHJwXONMqeRqufa53h9lBhTF/j
h2ob57xzfnDuPCkO+MN1YoRXjBcHXOJG8Y7XjzOZs/RBcdysH1jgFROsPVF9
hDnIWzPNeNKtrj08YrI9TDDXtdaYIt6p6uCbpk49OMOdxtytDkZ4yHRrYs+5
0h3afhdbhTXvMX6KPTE3tdKMx9yXFDgTfuu9nuhcTBfTZOM4mzmrOQ9fTQpc
dlxS4FizxDFHHYzwjbnigGM8It65+k0zbqY45um3S5pxo8etzXo+kRR41cP2
9LTrzbo9o77RPDPM+6w26sxXB98CderBHeAQf3k9T4xwieesiX1RUuBSC12z
mdbfLc140ovWY55eER9n4FJ7gHsssael6nOssyApcCZi8m/j9mJd5hrgCy94
XSzwh5z7vKkt50bYONM4C5taG1613Pqc0++bFw60wvrwA/hRifxus5g+NOYl
496z1xXGbLLuYvF+Yl6wfqpeP3IWpxkPqpRm3AXeAh+CF8Ej4FNf/K8Hrj93
XXle4eec68QW2zf2nGd9Zr1iey8y77fWqed1iTm+0RdcW6QZDmyr9GV/ZJ9k
b4QDcNbDQzgj4TT8NzjM+y21rUoK/0TWaOe7nbOEc4TvcPZ69nnOLM6y47St
1rer/t20rdG3u/49rL1aLP3MeY62tfqyL7D/jrGH3+zpYu+zJw+wx/7q67Q3
tUeeo7HGXmONddbsby1ysA+yH7J/sKewN00y5g9zjPF+hbb1+hKzwRy8Dzw3
y1zvja4/ewL7A/sY3yq8t/OUjd5jDvjfAcbF+vDtwPvJe7pEfZP2x82Zf+ds
1rduml0v1/a3vtz7Rx94P88rz2ppjKnfAzx3/O9r6rMAf+VZ+u9/aZp9H/AM
wr95Jhuk2T/KSubaZG7mnv9xh7rm8J78WYDD5c8dHHQvnwX+Zx0rrtR3ieeI
/0fdnLsNziXrBl/p7vrDCfq7zvCbS1xn/nfkzwv/LMa4bnwP3+t68o9gkuvM
uTjWOpw9rGnDNNtT6rpfsm/mc8++f59rxbfoC64n3+SPOR91/M5if2NfZv9u
lGbzXuSeUuz7W+R95mB3r79Msvmt575TVzysZ2Ov343rMveo1Hz1vSauPM32
C/I1Mif3Wb9qSZajoXnKrVXNPGXuL6ViYm3+BXW5thY=
            "]],
           Annotation[#, "Charting`Private`Tag$13016#1"]& ],
          Annotation[#, "Charting`Private`Tag$13038#1"]& ]],
        Lighting->Automatic]}, {}, {}, {}, {}},
     VertexNormals->CompressedData["
1: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
      "]], {}}, {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  ImageSize->{479.36966341670757`, 150.8392559027972},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.060077899222344175`, -2.756444693440677, \
-1.9617347675024268`},
  ViewVertical->{-0.9941207115481057, -0.06627779526115557, \
-0.08562280494359097}]], "Output",
 CellChangeTimes->{
  3.942618117794836*^9, {3.9426182942196655`*^9, 3.9426184049693737`*^9}, 
   3.942618471686081*^9, {3.942618571620165*^9, 3.942618596340357*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"30101ff4-cca6-404b-8e99-7738e20ef546"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9426065791326237`*^9, 3.9426066287829247`*^9}, {
  3.9426066653172646`*^9, 
  3.942606666926899*^9}},ExpressionUUID->"7a625512-ec6e-ba43-a908-\
eb5ce80b0a42"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
Zr4=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.368417, 0.506779, 0.709798]], 
             Line[CompressedData["
1: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
Zr4=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1.9999997662703457`, 2.}, {-1.4142133633666665`, 
            1.414213390227226}}, "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           Automatic, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.368417, 0.506779, 0.709798]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-1.9999997662703457`, 2.}, {-1.4142133633666665`, 
           1.414213390227226}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          Automatic, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         Line[CompressedData["
1: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
Zr4=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-1.9999997662703457`, 2.}, {-1.4142133633666665`, 
        1.414213390227226}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
       "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> Automatic,
        "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.368417, 0.506779, 0.709798]]}, 
       "HighlightLabelingFunctions" -> <|
        "CoordinatesToolOptions" -> Identity, 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{389.9999999999628, Automatic},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-1.9999997662703457`, 2.}, {-1.4142133633666665`, 
   1.414213390227226}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.942606612503744*^9, 3.942606629673321*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"018c7743-0fd3-bb41-bbab-e04d3581f00d"]
}, Closed]],

Cell["Binomial ", "Text",
 CellChangeTimes->{{3.942618155553051*^9, 
  3.9426181583450336`*^9}},ExpressionUUID->"4693c3a8-e07f-1044-be97-\
5fbe8ba07670"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "3", "D", " ", "Plot", " ", "of", " ", "Binomial", " ", "Coefficients"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "maxX"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "x"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"Opacity", "[", "0.8", "]"}]}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x (Degree)\>\"", ",", "\"\<y (Coefficient)\>\"", ",", 
          "\"\<\\[Binomial]x, y\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"MeshFunctions", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#1", "&"}], ",", 
          RowBox[{"#2", "&"}]}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxX", ",", "10"}], "}"}], ",", "1", ",", "20", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Slider", " ", "for", " ", "maximum", " ", "degree", " ", "x"}],
       "*)"}], 
     RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.941840312030073*^9, {3.941841406070741*^9, 3.9418414188388987`*^9}, 
   3.9418414674121*^9, {3.94260538724938*^9, 3.9426054203384514`*^9}, {
   3.9426054503694363`*^9, 3.942605503306492*^9}, {3.9426055688701*^9, 
   3.9426055692477436`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[24]:=",ExpressionUUID->"e6936b17-e969-3d4e-98f9-0c605b1372b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"2", "D", " ", 
    RowBox[{"Pascal", "'"}], "s", " ", "Triangle", " ", "Plot"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Binomial", "[", 
          RowBox[{"i", ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "x"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<Pascal's Triangle up to Degree x = \>\"", "<>", 
           RowBox[{"ToString", "[", "x", "]"}]}], ",", "Bold"}], "]"}]}], ",", 
       RowBox[{"FrameTicks", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "x"}], "]"}], ",", "Automatic"}], "}"}]}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "5"}], "}"}], ",", "1", ",", "200", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Slider", " ", "for", " ", "degree", " ", "x"}], "*)"}], 
     RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.941840383540165*^9, 3.941840459775442*^9, {3.94184144015485*^9, 
   3.941841463579176*^9}},ExpressionUUID->"a34b8e4f-181b-9b4a-99bc-\
df93d9d94eb7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 16, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`x$$], 5}, 1, 200, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {288., {147., 151.3219795239258}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ArrayPlot[
        Table[
         Binomial[$CellContext`i, $CellContext`j], {$CellContext`i, 
          0, $CellContext`x$$}, {$CellContext`j, 0, $CellContext`i}], Frame -> 
        True, ColorFunction -> "Rainbow", PlotLabel -> 
        Style["Pascal's Triangle up to Degree x = " <> 
          ToString[$CellContext`x$$], Bold], FrameTicks -> {
          Range[0, $CellContext`x$$], Automatic}], 
      "Specifications" :> {{{$CellContext`x$$, 5}, 1, 200, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{327., {183.2072265414754, 187.7927734585246}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9418403851340504`*^9, 3.9418404642603035`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"56edc849-421a-c845-90d6-bc5579bc0c53"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "Binomial", " ", "Coefficients", " ", "for", " ", "Fixed", 
    " ", "\|01d465"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"Binomial", "[", 
            RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "x"}], "}"}]}], "]"}], ",", 
       RowBox[{"Joined", "->", "False"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
       RowBox[{"Filling", "->", "Axis"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Adds", " ", "vertical", " ", "lines", " ", "to", " ", "the", " ", 
         "axis"}], "*)"}], 
       RowBox[{"AxesOrigin", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Ensures", " ", "the", " ", "axes", " ", "start", " ", "at", " ", 
         "zero"}], "*)"}], 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Adds", " ", "frame", " ", "for", " ", "better", " ", "appearance"}], 
        "*)"}], 
       RowBox[{"FrameLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Degree\>\"", ",", "\"\<Coefficient\>\""}], "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Proper", " ", "labels"}], "*)"}], 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Adds", " ", "grid", " ", "lines", " ", "for", " ", "better", " ", 
         "readability"}], "*)"}], 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<Binomial Coefficients for Degree x = \>\"", "<>", 
           RowBox[{"ToString", "[", "x", "]"}]}], ",", "Bold", ",", "16"}], 
         "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "20"}], "}"}], ",", "1", ",", "36", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Slider", " ", "for", " ", "degree", " ", "x"}], ",", 
       RowBox[{"matching", " ", "graph", " ", "range"}]}], "*)"}], 
     RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.9418404235188*^9, 3.9418407051977673`*^9, {3.941840807816839*^9, 
   3.941840808254305*^9}, {3.941841475672756*^9, 3.9418415115760384`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"49ed4761-e414-0844-bb9b-0b447d03611f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 34, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`x$$], 20}, 1, 36, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {288., {92., 96.55902917117484}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 20}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Table[{$CellContext`y, 
          Binomial[$CellContext`x$$, $CellContext`y]}, {$CellContext`y, 
          0, $CellContext`x$$}], Joined -> False, PlotStyle -> {Blue, 
          PointSize[Large]}, Filling -> Axis, AxesOrigin -> {0, 0}, Frame -> 
        True, FrameLabel -> {"Degree", "Coefficient"}, PlotRange -> All, 
        GridLines -> Automatic, PlotLabel -> 
        Style["Binomial Coefficients for Degree x = " <> 
          ToString[$CellContext`x$$], Bold, 16]], 
      "Specifications" :> {{{$CellContext`x$$, 20}, 1, 36, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{327., {135.7072265414754, 140.2927734585246}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.94184042459054*^9, 3.9418407079009*^9, 3.941840809129307*^9, 
   3.9420224909596243`*^9, {3.9420225219260426`*^9, 3.942022535041279*^9}, 
   3.942605066588131*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"78f44f53-7395-a447-a307-a5c0d9bbe338"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Binomial", " ", "coeff", " ", 
     RowBox[{"VS", ".", " ", "Normal"}], " ", "distribution"}], ",", " ", 
    RowBox[{
     RowBox[{"Binomial", " ", "Distribution", " ", "well"}], "-", 
     RowBox[{
     "approximate", " ", "a", " ", "normal", " ", "distribution"}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"data", ",", "mean", ",", "stddev", ",", "norm"}], "}"}], ",", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Binomial", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "0", ",", "x"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mean", "=", 
         RowBox[{"x", "/", "2"}]}], ";", 
        RowBox[{"(*", "Mean", "*)"}], 
        RowBox[{"stddev", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"x", "/", "4"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Standard", " ", "Deviation"}], "*)"}], 
        RowBox[{"norm", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", "data", "]"}], "*", 
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"mean", ",", "stddev"}], "]"}], ",", "y"}], "]"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "0", ",", "x"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"data", ",", "norm"}], "}"}], ",", 
          RowBox[{"Joined", "->", 
           RowBox[{"{", 
            RowBox[{"False", ",", "True"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Blue", ",", 
               RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "->", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Binomial Coefficients\>\"", ",", 
             "\"\<Normal Approximation\>\""}], "}"}]}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<y (Coefficient Index)\>\"", ",", "\"\<Value\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Binomial Coefficients and Normal Approximation\>\"", ",", 
             "Bold", ",", "16"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "20"}], "}"}], ",", "1", ",", "100", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Slider", " ", "for", " ", "Degree", " ", "x"}], "*)"}], 
     RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.941841103168127*^9, {3.941841547160446*^9, 3.9418415530357013`*^9}, {
   3.941841662976153*^9, 3.941841691346401*^9}, {3.941841900881935*^9, 
   3.9418419280919747`*^9}},ExpressionUUID->"d5772b6d-946d-7d47-a90b-\
f6cc1814bee0"],

Cell[CellGroupData[{

Cell["Automatic Integration", "Section",
 CellChangeTimes->{{3.938278504910383*^9, 3.938278546620672*^9}, 
   3.9410779676307125`*^9},ExpressionUUID->"fe546ddc-304a-d14e-83ae-\
f923d883f19a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Pre", "-", 
    RowBox[{"running", " ", "check"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<<", "Rubi`"}], "\[IndentingNewLine]", 
   RowBox[{"<<", "MaTeX`"}], "\[IndentingNewLine]", 
   RowBox[{"ConfigureMaTeX", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "\"\<pdfLaTeX\>\"", "\[Rule]", 
      "\"\<C:\\\\Program \
Files\\\\MiKTeX\\\\miktex\\\\bin\\\\x64\\\\pdflatex.exe\>\""}], ",", 
     RowBox[{
     "\"\<Ghostscript\>\"", "\[Rule]", 
      "\"\<C:\\\\Program Files\\\\gs\\\\gs10\\\\bin\\\\gswin64c.exe\>\""}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{"expr_", ",", "var_"}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"TeX2Str", "=", "Convert`TeX`ExpressionToTeX"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Steps", "[", 
             RowBox[{
              RowBox[{"Int", "[", 
               RowBox[{"expr", ",", "var"}], "]"}], ",", 
              RowBox[{"RubiPrintInformation", "->", "False"}]}], "]"}], "//", 
            "Flatten"}], "//", "Most"}], "//", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"RubiIntermediateResult", "[", "x_", "]"}], ":>", 
            RowBox[{"\"\<=&\>\"", "<>", 
             RowBox[{"(", 
              RowBox[{"TeX2Str", "[", 
               RowBox[{"HoldForm", "@@", "x"}], "]"}], ")"}], "<>", 
             "\"\<\\\\\\\\\>\""}]}], "]"}]}], "//", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<\\\\begin{aligned}\>\"", ",", 
            RowBox[{"TeX2Str", "@", 
             RowBox[{"HoldForm", "@", 
              RowBox[{"Int", "[", 
               RowBox[{"expr", ",", "var"}], "]"}]}]}], ",", 
            RowBox[{"Sequence", "@@", "#"}], ",", 
            "\"\<\\\\end{aligned}\>\""}], "}"}], "&"}]}], "//", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\"\<\\\\, d\>\"", "<>", 
             RowBox[{"ToString", "[", "var", "]"}]}], "->", 
            RowBox[{"\"\<\\\\, \\\\mathrm{d}\>\"", "<>", 
             RowBox[{"ToString", "[", "var", "]"}]}]}], ",", 
           RowBox[{
           "\"\<\\\\int\>\"", "->", "\"\<\\\\displaystyle \\\\int\>\""}]}], 
          "}"}], "]"}]}], "//", "StringRiffle"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.938059158634596*^9, 3.938059187871776*^9}, {
   3.938059445202175*^9, 3.938059448217097*^9}, {3.938059694787599*^9, 
   3.938059696365534*^9}, {3.9380597954575653`*^9, 3.938059802732033*^9}, 
   3.938061508128525*^9, 3.938061962853916*^9, {3.9381932263333015`*^9, 
   3.938193227598425*^9}, {3.938193263262894*^9, 3.938193273236141*^9}, {
   3.938193369430638*^9, 3.938193429871331*^9}, {3.938193931457819*^9, 
   3.938193932097988*^9}, {3.938277792762482*^9, 3.938277793949974*^9}, {
   3.9382779037143764`*^9, 3.9382779074791183`*^9}, {3.938277957405105*^9, 
   3.938277964871979*^9}, {3.938278243529209*^9, 3.9382782578383675`*^9}, 
   3.938665411339363*^9, {3.93866552691683*^9, 3.938665527416912*^9}, {
   3.941077971302576*^9, 
   3.9410779850682087`*^9}},ExpressionUUID->"25c9498f-4174-e247-b16e-\
00529d7a28e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"CacheSize\"\>", "\[Rule]", "100"}], ",", 
   RowBox[{"\<\"WorkingDirectory\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"pdfLaTeX\"\>", 
    "\[Rule]", "\<\"C:\\\\Program \
Files\\\\MiKTeX\\\\miktex\\\\bin\\\\x64\\\\pdflatex.exe\"\>"}], ",", 
   RowBox[{"\<\"Ghostscript\"\>", 
    "\[Rule]", "\<\"C:\\\\Program \
Files\\\\gs\\\\gs10\\\\bin\\\\gswin64c.exe\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.938277775907175*^9, 3.938277852429537*^9}, 
   3.938278336855976*^9, 3.938278661976431*^9, 3.938665093902872*^9, {
   3.9386653889383545`*^9, 3.938665414338625*^9}, 3.938665447747917*^9, {
   3.938665512685789*^9, 3.938665532337435*^9}, 3.9388045220557156`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f56f6041-aa13-0f43-9b21-2b0dfb7fe4ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Input", " ", "integral", " ", "formulas"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"F", "=", 
    RowBox[{
     RowBox[{"Int", "[", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"3", "+", 
         RowBox[{"4", 
          SuperscriptBox["x", "2"]}]}]], ",", "x"}], "]"}], "//", "Steps"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"F", "/.", " ", 
     RowBox[{"x", "->", 
      RowBox[{"b", "-", "F"}]}]}], "/.", " ", 
    RowBox[{"x", "->", "a"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"3", "+", 
        RowBox[{"4", 
         SuperscriptBox["x", "2"]}]}]], ",", "x"}], "]"}], "//", "MaTeX"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "0.5"], 
    RowBox[{
     FractionBox["1", 
      RowBox[{"3", "+", 
       RowBox[{"4", 
        SuperscriptBox["x", "2"]}]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{
  3.93866526997843*^9, {3.9388045375209446`*^9, 3.938804588649533*^9}, {
   3.941077998130926*^9, 
   3.941078013974476*^9}},ExpressionUUID->"61e57f94-c5a2-ef42-b729-\
e0fec96fe7d0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["209", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"PosQ\\\", \
\\\"[\\\", FractionBox[\\\"a\\\", \\\"b\\\"], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GtQ\\\", \\\"[\\\", RowBox[{\\\"a\\\", \
\\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"||\\\", RowBox[{\\\"GtQ\\\", \\\"[\\\
\", RowBox[{\\\"b\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}], \
\\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               FractionBox[
                RowBox[{"ArcTan", "[", 
                 FractionBox[
                  RowBox[{"2", " ", "x"}], 
                  SqrtBox["3"]], "]"}], 
                RowBox[{"2", " ", 
                 SqrtBox["3"]}]],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
           Rational[1, 2] 3^Rational[-1, 2] 
            ArcTan[2 3^Rational[-1, 2] $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"PosQ\", \"[\", FractionBox[\"a\", \
\"b\"], \"]\"}], \"&&\", RowBox[{\"(\", RowBox[{RowBox[{\"GtQ\", \"[\", \
RowBox[{\"a\", \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"GtQ\", \"[\", \
RowBox[{\"b\", \",\", \"0\"}], \"]\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + $CellContext`b $CellContext`x^2)^(-1), \
$CellContext`x]], 
          
          HoldComplete[(1/(Sqrt[$CellContext`a] Sqrt[$CellContext`b])) 
           ArcTan[Sqrt[$CellContext`b] ($CellContext`x/
              Sqrt[$CellContext`a])]], 209], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
          Rational[1, 2] 3^Rational[-1, 2] 
           ArcTan[2 3^Rational[-1, 2] $CellContext`x]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.938665501297855*^9, 3.9386655366177063`*^9, 3.9388045265702763`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.93882430801293*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"ff43c8a7-4880-cf4e-9138-36f984944432"],

Cell[BoxData[
 FractionBox[
  RowBox[{"ArcTan", "[", 
   FractionBox[
    RowBox[{"2", " ", "x"}], 
    SqrtBox["3"]], "]"}], 
  RowBox[{"2", " ", 
   SqrtBox["3"]}]]], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.9388243080249386`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"33002637-4d1f-6e40-999e-9fd91f293b42"],

Cell[BoxData["0.1511499470195182`"], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.938824308033001*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"92d5710e-901b-0041-a901-75b13785dbfb"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.006942515967786726], 
   {Thickness[0.0033185226326020553`], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v6Ibn/GD4wO9iWOtadlmB0YwIDV4QwI+DA7
yGwUm8+0gM0hDQxY4XyNTyovZ51kh/NNjIHgM5dDjGqEzDkbFoetXhss5lTy
OKiD1HEywfnbwfR/exgfrG/zL3uweZzccD6EZofz/Z94XjK9zORwuHtfk4ky
k8OMmSDw1/4G722x1G/scP5aIR2+dDthON9jzdHlDD9EHb7s+7g1fZqQQzTI
fTGSDu8XrVc4a6HgUHH/xy1jblmHVJD3jqk7gKwzFlZwaOH1Xz8lVd+h9PA2
15mxig71v60KznUYO/wHAXslhwO1shbpImYOnTaeu9KUlB2SY++4MVdYOHSD
+J+UHY60LQ8/xWTlsEEvbzGjjYoDD8i4GVYOb4q3iv7mVoX4S9nGoebThoDs
Xwh+CsicHWpwvtS8OM3TAeoQ+19YOySEBKkvyFSHxM8dawfZ5S889OarOVwX
+uR4/pq1QwPL0X5Dc6j+yQg+WN4NwQdp+//QyuHErh29bBfUHCRA9mywcpjS
3hp1OUYdzj8Gkv+A4NeCw0HDoQTojdP3EHwON9VSJi9rOP954sJrJu+tHU4d
dlqbaacOCd80Gwcmzi755HeqcD7YPhkVOB8SD0oQ/0pYO6SD+GWKDupvefcZ
rLRwuKMpu+Z/sqJDI8gf7RYOO4KtIv67y0DCv8PIQaRyUslZFnGHJyD781Uh
8sdFHfhjA+4bHVeEyKeIQMNH2uGBa7zjrItCDgq7FuxLfSfi0KrArnrmi6AD
OF8UCDosubX8sWEzvwO3I5/XjJcMDi3itayZx9jh/ABQugxmgfNh6R2Wn9Dz
FwDb4V2k
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4t8xuUf/FTk5mBiDgIkDjL9RL28xY4+Jg33T
o+MznBF8lsWTrBj3OsL5PP7rp6TucHSQmReneXoDgl+yVfT3aTlTOH8DSP0d
azhfYuoVzgwlGzj/hnRNopGqjcPF/Hj2czMR/NsgutTR4UDb8vBTl6wd6n9b
FZzTcHT48630wZxEawews7sdMPhgdRzWDulpQLAOwVd90jzv7C8Ef0337QwG
f0eIOyIQfJj7YXyY/8RB7vZC+L8iYoXp2cMOcP7+WlmL9CmYfFj4ep9gt529
18FB4y3vPgNLE4flLzz0/gc6wvlg9S0I/mqQ/dsRfHD4eDrB+ejxBwAL/Lsf

     "]]}, 
   {Thickness[0.0033185226326020553`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.1391, 15.103099999999998`}, {
     53.647999999999996`, 15.103099999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJXIGYCYr+LE2P+FZs6pIHAMXEHGL/m/o9bxtoyDn+/
lT6YM9HEIUY1QubcHHmHDXp5ixlzjB3SQerNFBy+7LzV9bfUxCGcU6zd+LyC
Q4/XKxYTRVOH8sPbXGf2KsH5MybwV5llq8D5LJxd8sl+ahB71UwcZObFaZ7e
oO4QKb79IsM/Izh/I8i+M4Zw/kwQeGkAcYeNGpz/Ikv72/RaFTj/w6L1Cmc7
lB34/ddPSfUwdBCIDbhvFK4McXcZGn8bgv8fDAwdTIyBYDOCD3M/jA92v54q
XL8vKNyaVR1A2oyLEXxpkLsTEHzVJ83zzkYh+ODwDTR0OHXYaW1mnSokPI9C
+XLqDrelaxKNnhrB+fpaK4UvfEHwwf6NNIbzC9Z0385QMHGQmHqFM+OQGpwP
cz+MD3b3N2WHRpaj/YbiJhB/zVdyOA0yZ58xJPxmKDocblsefirJ2EH52qNg
hh4FiPt/GTnMANlbqeCQHHvHjXmFEdTfCg7RCo4fk32MHFZ+e1lxJkHBgRcU
/hJGDtWg9BStAIlPHiMH4cpJJWdDEPxSUHqRRfBD3l7+OOOgvIND06PjM6QR
fHGQv4IQ/MeJC6+Z3EfwwfH22BjO/7IhIHtWuInDjmCriP/pMnD+A9d4x1kX
xeH8/ohuf8YJgg6fQfx2Y4cW8VrWzGP8kPj5aATnF28V/X06DsH3B8VjsqFD
NCh//BFwmA4KZ25DhwPd+5pMlEUcbCsjVpjmGkLC+5kwPH4PguQPi8D5b9py
u42qxeD8tUI6fOn3xB28T7Dbzm41hITvZQlIPOkj+BBzDeB8cHxON4D4Vx3B
/7Lv49b0MDFUvpgQhL/c0KEH5H8DXnj8wvg3hD45nk8zgfNh5cN9UPh9FHJA
Lz8AwRLhGA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4gjx7RcZ2hwc/oNAvbQDjL8j2Crif7qMwwa9
vMWMOQj+bemaRKNQBB+sPs4Wg38GDFTgfImpVzgzlFThfKl5cZqnJ6g6XBX6
5HheDcEHa3tjg8Fv+G1VcE4DwYeZD+PD7JcA6VtgCed/2Xmr628pgl+8VfT3
aTtMPticHmk4/0D3viaTxVIOh9qWh58qQvBh5sP4MPvR+elpQPCMC84vXF6y
4V8/J5z/Zd/HrenX2B18Lk6M+adsC+fDwgedf533tlhqGSecDzMfxofZD4sf
GP8N7z6DmVkIPix+0fmw+AcAcX/7ug==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAGIw7fgx+cxXF4dWBXbVM1PEHWB89zVHlzP8kHDI4fy5
ID0ak3/hatgb/Wh1OP9p4sJrJucRfCbOLvnkd+oQ81wR/JkgYIngsy6eZMVo
iuDX/bYqOKfh4mCgtVL4whJ1h/21shbpMU5w+2F8mHtLtor+Pv3OGYP/pi23
28haGM7/su/j1vQyQQeHpkfHZ7x2dohWjZA590fAYaNe3mLGGgRf+JPj+bRY
TL6JMQjwO7irljLNanB2ONC9r8kkmd8h4fBl7dSfCH7b8vBTRioucP6a7tsZ
DP4uqOpPIvhTvrHFz3jjAjcfxofZHyG+/SLDOQT/hKbVpNPxCD4svGH+g/Fh
/ofx0eMXxgcA+2XUpw==
      "], {{39.925000000000004`, 6.24219}, {37.021899999999995`, 6.24219}, {
      39.925000000000004`, 10.7469}, {39.925000000000004`, 6.24219}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lG1IU2EUx+/KklH5sumScnpnSkQqtS0Qszp+uPeuCMwXcsHCLOaMMqUM
BlkfFJSaipmRmsnI0AJfsBdMiSXESHROxJcP0/CF0hQtFRJLdPncZ3seCDrw
fPhd7nPvOf/zP0d1OTfFuJ1hGMnWSd8627ZO1erOjGofHZTrLUmSPAV42YGi
WQFZKDYFMETpQ53jCnDtL8hU/6Lc6XqwYZylrN/bMcjMCMCgsCog89PQYeOU
AC2yaD/TSQV+/l6AgyuRc7VSGb6fIYAGhTwAFvbYjtTso+zTUBkv+cYTFu/3
8DDFZSTWJgcS7kyN17sFOeFi1jfKkRaE83HyoGu2NzEhwVCfED1cO8Pj9yAE
2mNvNEhCBdhwb8XHMPhjyLFvqgVIlypKNAMsNFvGshmTAAdGp1OZcRUErSQO
ZLX8n7UozzHK16W/raZ1AetZqoKQx8PS7F4BBJRPtoro8SG3YLFmhCX8anXO
7LhEWdS3Lhx2ID1GBFgozrGoj4djveYp705qqzKG6AhzUbe31cbpcD4JLOFJ
pN8UZUvC6a6saRWu96cAJtT38xGQ/y54va+Vcg2KZMpne3xPPFUK4H/x3IR6
loWeQ/GVff6e/t1isZ8WeE//I4BNXL7iKOPJ/UmbX53mJuWYCuva0VGOMBRO
f64u4qBgYs2luRZGWNTDoCTcj/SNVsJgboav8z4Hyi6rzfgjFP+/ivK99fg8
p5WyWf/yWH8Dh/sRp8T1NnLYn1eVEPW1qL7fxWH9DCrs50Se9FesP4ey2I/X
lONG7Tnabh7uoPzHWMJLz9vYfh3lboutUFsUjvXv4Em9om9eePQL8+Sfx2Of
PQrG9V7goQT5/a0M+zGGzkv3XWWcaZwjLH5vmLIVzUMrZXHeyz38JgBk6Ht2
Ds+XbyDu/6BHL7OMsFjfLjlh0bdMENavi8N+exiE9XpGOS0/8onbTLn0zLyP
NtnLcsLefeFlnE8A5hoO0Pi6T/mRfnm5uCm9Vx3JExb11vNQhvbdUgCeF7PH
fzMyrG8F1U+s/wu9L+4ThUC48bsu1t1O2bs/UxaHlqszg+Hf/foXOLQ3dw==

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4hkzgSDSy4E/NuC+0XJFh+UvPPT+WyL4JVtF
f58283LYk1/zdmYolK/n5QDSNrNTwUFi6hXODCUvB+Vrj4IZbBQc9tfKWqTL
eDlU3/9xy1haAaL+nCecP99G58qsfQh+cInK9P8cCL7qk+Z5Zyd5OpwBAR4l
hz8xuUf/LfJ0mA2yz1PJQcHxY/KZs54OK769rDhzQclBZ8KCH4b3PCHu4VR2
EPnkeD5N1suh28ZzV9onZQeY/wJuSdckXlKB81t4/ddPcVWD86dP4K8y09Zw
sG96dHzGZ08HA62VwhdSNB3aloefMipB8C/mx7Of++kB53d7vWIxWenh8Pdb
6YM5H9XhfA9QQLSrwflyoIDdrwrx7wUPSLgtUnV4nLjwmsl9BH/KN7b4GV8Q
fLD9Ip4OsiD99xH8mk8bArKr1OB8Fs4u+WQ/dYfEw5e1Ux96wPmsiydZMV5F
8N/w7jOY+cnDITn2jhtzhYbD6u7bGQzmng6nDjutzbynAXFfBoJ/XNNq0unj
CL6LainTrB+eDpv08hYzzlGH82HhCeO/yNL+Nn2uioM+KH7WeToIgNJTurJD
hPj2iwxmnpBwr1R0EAbF11YPh96Ibn/GC3Lw8Pqy7+PW9DIEX6RyUsnZFAQf
rH+mrMMWkDtsvOB89PQMAN65PhU=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQvfSFh97/Sn8HYzDQcIDxDbRWCl94AuULIvjyjh+T
z7D6OzxNXHjNhF8Tzj9/NeyNvrUWnH+gVtYiPcXEocfrFYuJoZ/Dwbbl4aec
EHxuN9VSplfGEP5MBF/gk+P5tKV+EPuuIPglW0V/n7ZD8FWfNM87O8sAwm/1
c1h8fx/fnM8GDg5Nj47PcPZzOH3YaW1mnKGD7oQFPwyf+cL5Z0DABMHfope3
mHGOj8NhkPuMDOB8XUX5LzlhunD+epCFvloON6RrEo10fSHy39QdRED2X0Xw
Z8wEAk8/OJ9l8SQrxl4/hzmLlHf+Udd0kJh6hTNjkZ/DBrC5CD5MPXp8AAD5
ga5F
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQLTH1CmfGIj8H+eUvPPT+aznA+DLz4jRPT0DwTxx2
WptZp+XAsniSFWOvn0NK7B035h+aDubXjuaaZPg5mNrsDZqmqOkwYyYQaPo5
HNu1o5etQMPhjnRNotFdXzhf5JPj+bStCD5Yv4Cvw3rVJ83z1iL4R0HyAbpw
fu1vq4JzHPoOb3n3GcxU8nV4nqX9bfpffYfW5eGnjFx8HZbc38c3J9nAAWTM
2SRfB3GQuw8ZOPwHgfm+Dt1er1hMFA0d9tbKWqS/QfBNjIHA2w/OB9vT4Ofw
eUNA9qzpUP39fg7XhUAON4CHx+E2kMUI/hkQ0EHwp07grzJ7re+AHr4A48Sh
eA==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlGlIVFEUx2dUsiTbLMecrIykmXk68yZNI4pOQdAyMvdZaIUtai6pZVBG
i5FhVrSQReLaYE3khxbFSa0Ii8Q010RNNFpsc0qh0igjy959d+Yd6MD98Hu8
+945//M/xz82LSLeVaFQKMUTJR4X8aw5nGUwrRSgoXblrZ0WDpx86WT25o4H
HATTWC5AUtrX7KedHAx61vAFS5C37Kr7WxGMfOPMiySFyIH+c76nVnFQ3vcp
t4IX4LinuexSNgdjNNQC5OVMPhSaooVoev8LgSf3754bt0cDP8dtyze1IGcJ
ay5nViBL960EPsRceR4yWSvznbCRxzs8dDLPsmzVNuXo4CbNp5SAuVedETOk
A/Ns7+RwG4H4BDFOBMImVXW7otXBTwxw5HZV7NEeAgHvsywthTx01e0KyRwm
cGbtZ7cQfyOM/1WSaPMWZHb/jwtoBCFXHs94ZlsmsOe/ePY8QIBjbnXnjf28
rMdGmocF+drrmknFcchSfb4800MnQKl9tX5MyTO9FiGfLI1qXGhCtl5cogyP
duQjIJvbL0T/tSI/POK3OHG+EbppvWECNFE/bDXCvd7Tf+JVyM007ERmSSdR
v+5pQyvarvPwbrrf0w/1hL2XysM66qcqAqrczglJEUbIKRkxfjyB99O2ubfO
PIisWk1GfTjkuSu+xTUrCZTrd1uVxQaZJb9NR5b8OqoHe3WZa78bAXsy9yPv
pZ793wNZqnMK8tLAzsKPUx35uRhYvV4E2roiBw1qA3iJZSUEOfrfxzM/b0c/
SPXvR5b6UYCsHngb6ltCQE39WMLLPFxOUgqjkKV+ePFM/yKsN5H68iIBU4P7
sqJ0R/4HCNTTeeA5Vm8qgTfUQI+0zJ+ROC/URsF6ZOl7OmRpHlTI0ry7E+a7
hxr2vXkEbNR/nzWsrxqHXle1Mtv3Vs74PYAs/SdBx/TzI9BP57VMx/SahLxh
3/y8sRGzzGepbu0ONiA794WTpXySNbAqIN2lcCKBILpvfiyQ++Xk2g4ufmYE
sqS3qFcj9dcrDZuXDAL5dD57tEzfU6jHBFr/bbwv7ZMm5PU0fx9BZuf+zKTz
rcJ96tyv/wCklGv6
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KF0RscL0bH6IQ39wicp0fQMHGJ/bTbWUKcvAQfVJ
87yzSQj+zltdf1PDEXyQtv9TguB87+pmfZ8uBF/TatLp+hpM/uG25eGnjBD8
P99KH8z5qO9Qu25bUn0ngg8zH8aH2Q/jH7msnSqZhODD3I/OR/ffepDH3mrD
+aY2e4OmJerA/Qvjw+yD8WHugfFh/oXxYf5B54v0eL1i+aIN58svf+GhV68N
9y+MDzMfxofZD+PD/Avjw9yPzof5DwD4W9AI
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4pjco/823Q91mD6Bv8rst6UDjD9jJhCstHKY
sOCH4bNzmPw/30ofzGFE8G9J1yQaqVo6bHj4cuqmHaEOBlorhS8ssYDIz0Lj
p2Hye7xesZgctITzb4DM+4rgP83S/jbd19aB4+eC9M2XMPmpaUCwzBauHp2v
/pZ3n8FNe4cI8e0XGcIQ/G9s8TN8QqH+22nnoOD4MfmMZaiDz8WJMf8m2zq0
LQ8/ZfQlxEHlSfO8s10IPsx+sLtNQzH4sPCE8T9tCMietdwCYn4uNPwSLRy8
qpv1faYh+E2BnnMbjiH4sPh4nLjwmok8In5g5gMA6JLYqg==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQHSAnluVbHu5QsKb7dsYESwcY377p0fEZ1lYOaWCA
yYeph/GXv/DQ+//QwkHm9SMzqZBwh5kgcNLCQeiT4/k0TwR/0SQrRl8dTD7Y
/GxLVPmZCL7EvDjN0xus4fyvO291/Q21gfPB7rlg48D5c0H6Zq5whw8bArJn
uds6PBGRPfn0fZiDxlvefQYrbR1q121Lqj8b5rC3VtYi/QpUfjWC3+P1isUk
F8EPKVGZ/t8mzOFp4sJrJvoIPo//+impGTZwfn8wkMFv43DtaK5Jg3eYg77W
SuELT6wdCuLZz0nGIvggZ6fmI/gHQPbUhDnU/rYqOCdhA+cvBYVnIoLfCzL/
vo3Di+3rmZ8nIPjg8A1F8EHBwJAe5vAfBOJtHWJyj/7b1B3mUM9ytN9wuq2D
V3Wzvs8qBB8WHjD+G2AwzfwV5nCkbXn4KSUEH+Y/GP+GdE2i0VRruHs26OUt
ZuyxdlB90jzvrFqYw5QJ/FVm3VZwPlj/fEs4P0J8+0WGdRbw8P7zrfTBnEQL
h4qIFaZnZyP4YPeeQ/A3PHw5ddOHMAcHUHq5beFgYgwE/8McTh52WpuZZ+ng
CVLPFO5QvFX09+l7FhB7pMIdpEHpp8DCYcKCH4bPrND4Xgg+LP2DzZ+N4MPS
OwDTcmVR
      "], {{91.91559999999998, 26.184400000000007`}, {91.91559999999998, 
      25.014099999999996`}, {91.04379999999999, 24.6188}, {90.52969999999999, 
      24.6188}, {89.94380000000001, 24.6188}, {89.4547, 
      25.049999999999997`}, {89.4547, 25.6234}, {89.4547, 
      27.200000000000003`}, {91.48589999999999, 27.343799999999987`}, {
      91.91559999999998, 27.367199999999997`}, {91.91559999999998, 
      26.184400000000007`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4jQQ4It0+A8C9RYOMH7db6uCczcsHNqXh58y
ehEB5+fHs5+TvIrgL55kxeh7JcJhf62sRbqJJZxfz3K03zDdGs5fcn8f35xm
Gzhf/S3vPoObNg4cPxekbz4U4TB1An+VmbWtg6bVpNP1ayIcxKde4czYZOvg
qlrKNKsjwkFfa6XwhSO2DiBtM/MQfLC9Kgj+zltdf1PZofYft3Ho8XrFYsIY
4cDhBjSoy8ZBC2Q+AyYfph9s/4xwBxNjIFiM4G8x/3EoxQvKP4PgvwG551K4
ww3pmkQjUwT/SeLCaybzbeB8sH+SLOF8WPg9AAaL8SkEH2YfOh8WPwdA/l0T
7vAF5NFWC4eZIHAVwZfwCPgj8RrBh/kfxm8K9JzboIXgg+PbLgI1/u0Q8Vu7
bltSPS9afLNg8mH+g/Gng+JztjWcH6Pg+DH5jg0k/VhGOHzYEJA9qx0anhkI
/mMR2ZNPpyP44PBaFOFg3/To+IzXNnA+2F+GCD5K+C5CuA+U7IxnRaCGZwYm
H+b/RSD31kSghu9SBF8cFL67I1DD9yJa+P5CC1+k/AUAP2qSMA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{106.46299999999997`, 30.890599999999992`}, {
     106.46299999999997`, 31.075000000000003`}, {106.288, 
     31.075000000000003`}, {106.177, 31.075000000000003`}, {
     101.59499999999998`, 31.075000000000003`}, {101.48399999999998`, 
     31.075000000000003`}, {101.309, 31.075000000000003`}, {101.309, 
     30.890599999999992`}, {101.309, 30.70779999999999}, {101.48399999999998`,
      30.70779999999999}, {101.59499999999998`, 30.70779999999999}, {106.177, 
     30.70779999999999}, {106.288, 30.70779999999999}, {106.46299999999997`, 
     30.70779999999999}, {106.46299999999997`, 30.890599999999992`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4gSBCMstG6IdUtOA4JmNA4w/YyYQaNo68AO5
J+Yh+OkgdXkI/vqijIlvc6Idlr7w0PvviOA/zdL+Nr0XwZ/8jS1+xh8HON/8
2tFcEwlHhynO3TnPs6Mdur1esZhIOjqsd39YJRKH4L9ffszb3DPagcd//ZTU
Dw4OE97W2JvqRTv8B4HrDg4sYXy6m/5GYfDB7tzm4PAmcIdcK3c0nP/kgtLt
n2oI/vfgx0tnu0Q7XMyPZz93EcGHuR/Gh/nPv3d6npAzwv9bTpTtmy+E4Lts
+/z3CgMmHxa+YPeJRjvEKDh+TH5j47AdKF3hiOD3AI1vjkDwG6YCAygfwd8w
FxgisxF89PgDAI3Z1eU=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYCYvY1MlEpzHEO3G6qpUyvDBzWF2VMfMsS53Bd
6JPj+WcGDhvmvl9+jDvOgd9//ZTUEwYO34MfL53Ng+D7mHc6Jsgi+O4Pq0TW
ySP4z3+v/HhJNc7BoenR8RmnEXyY+TC+MQh8NnCwNY3b5akS56D+lnefwU8D
hw7HhKcXlOIcxKde4cxgMnQAOdeaPc5Bel6c5ukCQ4fr54AuuhvrUP/bquCc
hJGDBw+Tdvu6WAcNkP5MY4cpzt05z6NjHQy0Vgpf2GIKca9trENy7B035hUW
cH56GhC0WcP59/fxzTHOcnBgCePT3TQ31iHh8GXt1J+ODm8Cd8i1Ksc5/AcB
dme4+yd/Y4ufwYPg93i9YjERRPDbl4efMhJB8O1B4aHs7NAzPU+oWQHBnwMM
bm9xBB/sHl4EHxYfMD4svnbe6vqbKu7sYA8Kvz2xDstfeOj9n+nkcF7p9s+6
rFgHYWBwpx11hPjHNNbhDTB4ZjY5OJwBAZFYhz/fSh/MKbR3MAHFA3Osww3p
mkSjVls4HxyendZw/v5aWYv0LRYOGXtKJkuoxDrIgOKjwdTBN0kgwnJOrIPq
k+Z5Z3cZObhs+/z3yoZYh8WgAHU2cmh5DQzAs9DwPmYI54Pj/7AhxD1XYh1O
H3ZamznP0KEE6L2a+7EOz7O0v03PNXQQaD5wauFTaPxFGDqgp18A0zw6qA==

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4jNgEO/A4aZayrTLzmGB67bPf/cg+OxrZKJS
dsc79Hi9YjGZaOdQP9W5O2d7vMPUCfxVZtp2Dm+XH/M23xjvsL9W1iKdxc5h
wtsae9N18Q4+FyfG/PtsC1HfjuDPeQ/UUI/gi6xzf1ilguAfUdhQlJEZ7wB2
1hs7h62f/16pKIx3mAKyj9ve4QuQ+7It3qFkq+jv0372DsfL9s2X6oe6J9ve
Qbb1deAOoP29wSUq0+/bO8D8d1zTatJpdQc4f8o3tvgZLQh+pPj2iwz/HBxy
hZoPnJoJ9Y+Po4OqIQcwBBD89UUZE9/KIPjfgx8vnf0lzuHzhoDsWe8d4HzW
xZOsGKci+L9jco/+S3Jw6JmeJ9TMEe9QGbHC9Gy0g0Mon+6mufwI/p+VHy/5
SiH4YPu14iH6sxD8i/nx7OcmIvjFoPA45uCQIBBhuUUAwT+vdPtnHReC/6AK
GOKS0PgUdHR4E7hDrtU63kH9SfO8s1qOkPgIQfCnAKPveTOCb28at8tzTrzD
/X18c4xvOcD5sPCE8d/w7jOYKeUAiZ9yaHqaZe8Qu8uThwlon4kxECy2c1gy
Gxjjv+Ictpj/OJQyyxYeXr6g9NCM4IPjsx7BB0ebj63DnpLJEiz74uF89PQM
ABekUqE=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lAlIVFEUhscZt3FJSiuxzBaDbFyy3LLee8eWaRktzWjSsm7RNNpUjqUV
oVlZRLZoZWgqamiEYBQhFS2TGDXSlCQUKRVGFi0WBUNT0Xrve2/mgNCFy+Pj
3XuW/5x7JqzPX2ZQKRQKN7r1dCvpPjv/iv33LgL5bUee5Zp5cHLM1NbARwd4
yLm+yE+5k0D467KGh+U8fD5/T5dYhNwYEvMifBvykc1vf7YWEHjAVjEPt9kB
MwG/pRerDLk8JLV37bCYCBzLLAyv7ufAeOJTsZBD4Jej6GV9AQf6mfTAEuS4
NTQALfLpudSDQKDrzpwLeQ3IqT0nVv+xI4v+x/LA+TxtNqcQEPa/stbo5Pzm
EdCPvtqjsPCgWjEs6nIagd4xxeumPxGkeDII2C+lm2rDACopxmcTMKl/NBl1
IOVnQLb/frzr/UZkJs/hLUP+U336mH0OoOM+jcBI4Py7hdF/YwFmsEW53zKs
foYPclRl0/dYT2RJLwG259IAqX7BDWsibB0C+Co1h0YVIFdvHVHWsQPZq21s
9oZSAi3MwQCyrsuLqwsFF1sjkk/a9AAVnV+nrM4n8JctI0Bv97fMAcMQzkK2
0nRT0gkYN9KlBem7mEDj7MjHteMAnv3Ys+km1bvK4bm2ZjlI8Sfi/VPB7rQC
yKs2zOpfOhyZRlPR6Ubg6OIP7nE9gotJznOtqgY5leVzUNZHReDNJo2jukSQ
6uGBTKM/V+eNLOqnJvCF1fuQIOWnlt9DkwCsHS0BBD76W6adCQGg3cT5hGF9
hXjaoJHIvuxAAjK93RgyiwAzp4hBdtbbyWJ/DgpS3lSflaw/jwtwo5AqlCD3
c6oAWUyfKLlf43kp/wgCpe53K2KtHHjsoy9gPL4XMb+RyKab1GAQsvg+/If8
93b654Cl+zSQwK2S0CRjC3J79NZmt1//59OVAbsTNDyEe9KAAmR9F8jzQY0s
9qsSOfTgYMY1x1oo+Zls7g5GrmL2bJyLxfptkf15yfMliZPmTRAyk2/FRGSq
Rl+3hoC3dnKRspyDSaxBpxGXfafeop5GTpoPKXjfxgZIGrKofx6yc37uZfcT
cZ465+s/U/lnmQ==
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{122.22599999999998`, 
     27.537099999999995`}, {133.51699999999997`, 27.537099999999995`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4vinF5Ru6yY48Pivn5LqYeUA45sYA0GylcPc
98uPeWsnOHzZEJA9q9zK4T8IqCP4yrd/1mWpIPjsa2SiUpQTHG5I1yQapULN
U0xwKNkq+vu0n5UDf4TllhNx8Q6nDzutzYwzdngClP75L85hyf19fHOKzSD6
f8c5SEy9wpkxyczBtNMx4emPOIc0EJhm5vD898qPl74i+E+h/FQovwOo/MIn
hHzpvvlS+m/jHL7svNX1t9XMoTZrT8nkHXEQ/302dTgPtL5uU5zDobbl4ace
Ifhg+y/h5oPN22rqAAoe850Ivm+SQITlHgT/DAjciXP4+630wRxBMweg76zv
u8c7FIPCY56RQ/lLNUMOn3iHSPHtFxnqjBw8eJi02/0QfP/e6XlCwQi+vWnc
Ls8YBB/s/9h4hy3mPw6ldBk5HFHYUJSRGO9wXeiT4/llRg4fLwFdpJPg8Adk
v6KVw0wQAMZvSuwdN2YLRHzHKDh+TLZB8GHpAQBPVwAy
     "]]}, 
   {Thickness[0.0024923632324354347`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{129.283, 26.2809}, {133.51699999999997`, 
     26.2809}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJHIGYCYv27KmyNSxMczoDAHRMHGP/Lzltdf1tNHQps
ua4vnpLgIDMvTvO0gpmDzqa575dXJTi8yNL+Nt3XzKHDMeHphb4EhxtCnxzP
t5k5xD+9oHR7boLD32+lD+YImsP5BlorhS9sQfCTY++4MUdYOHz+e6XiZVuC
w0a9vMWMZywclG//rMvKQfC5mbTbxQIR/NlHFDYU2SQ4eJ9gt50diuCrPmme
d3aXOZz/JHHhNZN8cwdGoPabTgkOJVtFf5/2M3cAeafAE8G/7JskEBGI4Idb
bjlRFpbg4Nj06PiMagQf7L9tCP7yFx56/xktHH6v/HjJ1y/BoRikX87CIVkg
wnKLR4KDNDi8LBzY18hEpQRD+RMsHIC223KlJzg0shztN5xu4RDKp7tpbjaC
zw1SUITgzwSB1gSH6+DwRfBh4QnjfwXFl6o5RH9dgkPBmu7bGRcQ8TUhuERl
+npg/Ozy5GEqTnAoBMkXmDmAgl8tN8EhRsHxY3KOGcS82ASHA7WyFukpZg6g
6NgTkeCwAuTfRDOHpaAABvqfAQQSEHwvUHy4Ivgab3n3GWiaOSx03fb5bwSC
Dw7vWARf3ZBjjUwWgg9zP4yf8xwYwl0JDofaloef2mQK58PSK4wfIb79IsM9
Y4f986X071YkOEhMvcKZMcnYof/QV42YbAQfZj+MD7bPK8Fh+gT+KrPdxg7R
Kdb3/R2h4a9u4gBMrT/rvBB8sPkB0PAORfDB4TYTwQenx1smkPD2hspzmsLT
I4zPD4z+99YIPthfJtD09swEzr8jXZNoNBXBX3J/H9+cy8aQ/OcHlQ81dgAl
r+vZCD7Q9/2HehF8WP4G52cBRH6HhScAVVTM6A==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYCYluu64sLShMdNN7y7jPotHaA8RtYjvYbfrdz
WFwAFIlOdIgQ336Rwc/RoWd6nlCzQKKD7oQFPwyXOTk4Jjy9oMSd6DDfRufK
rH1ODgtdt33++yfB4f4+vjnGv5wg+j8nOIhPvcKZIeXs8PdKxUu1jwkO9k2P
js9QdnZQvv2zLusDgg/k7Sl5jeCH8ulumvscwY/uP/RV4wkmv315+CkjEQRf
H+Q+PmcH5jCgAU8THP6DALuzQ7jllhNlzxIcWBZPsmJkhdoHdN/OW11/U887
OWTvKZkswZHokM35c0F6tZODdrvYzXPyiQ7GIHDZ0YGbCSjimegg/MnxfNpa
B4j7IxIdvmwIyJ6Vbgfnw8ITxudyUy1lijJzuKAEFNBKdHiSuPCaib4x3H39
wSUq0/8bOGjEAD0AdL86SP9PA7h/wO5/j+BfFwI64BmCz++/fkrqCQN4eMH4
sPCE8WHhDePD4gPG/x78eOnsLwkO0vPiNE8/gLpHItHBARTetw0d4oHRfdsx
0cFAa6XwhRZjB5B2w5hEhy3mPw6lcJk5TJZgCePLTXSwrYxYYbrWHJ6ezoDA
HEsH9PQGAH5EJoA=
     "]]}, 
   {Thickness[0.0033185226326020553`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{83.6129, 15.103099999999998`}, {
     141.85199999999998`, 15.103099999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYnVDjjUyp6Ic2hXYVc9cEXJ4v/yYt/lOBP/L
3ysVL7dFOQhXTio5yyLk4LLt898rG6IcWsRrWTOP8UHUr4xyYAABB16HDXOB
IoujHPZ372sySeZxAOpWM6xA8B9UiaxzT0TwweovR8L5PdPzhJpfRDp82fdx
a/o0PofjZfvmS4lHOcwEgUghh/hdnjxM2lD7GoQd1shEpVjPj3Loj+j2ZzSQ
coD55wwIrJGB8+9oyq75v1kBzjcxBoJiZQegax5WtUQ5bDH/cSjFSxXiHm0E
378X6CCg+2B8sHvmRzqcBpn/RgnOD+cUaze+rwDny+9asC/VT94hQSDCcssB
BB/s/sMIPsx8GP/JBaXbP59FOnTbeO5KY1KA81PTgOAYgv/ANd5xVqGiw4qP
l3yTbkQ67M2veTvzqSLcfBg/Y0/JZIk9CP6WE0AH7kLwt8u1vg7cEenwHwTu
KzrwA5174lgkNHyVHZ4snX1E4UOkww6HpkfHZ6g45As1HzilGAXndzgmPL2Q
hOCDze+KcuCPDbhv9FwJzoeFP4zvuubocoYIWYcWoO1yqVEQ/5+TdNgOTF4V
ltD4PSAGD0+Q99OescP54PQwk9Vhwtsae9NtUXA+enoGAFdtTFw=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYC4pKMiW9r6mMdqj9tCMiu0nSA8Z9naX+bvlfT
4YjChqKMyliHjPwPrSe/aDpcqXipZliA4D+5oHT7ZxqC/0LNkGNNSqxDQkiQ
+oKTQPmls48oJMQ6PIoQ336xASovE+PQLF7LmunG5PA9+PHS2VOiHdYI6fCl
35N22P7575WKidEOIW8vf5zhKOPwHwT6ox0q7v+4Zdwt47DlRNm++V0I/na5
1teBHQg+f4TllhNtCL5MVIr1/fpohx3BVhH/1WUcfJIEIixNoh2MQWCyhMOG
ue+XH9OOdhCunFRyVkXCIX6XJw8TkO++5uhyBgkEfydI/3NxOP+Ba7zjrIni
DuvdH1aJ6EU7BIHcmyjusBzo3Q1GCP4C122f/5og+B5A3e1mCL6Peadjgm20
w8HufU0mh8UdWl4H7pBLjYb4e76kg8g6oAV/oh0u/z52fV7kZ3uQdjHGGIcX
tY+zz6/5YA8K3g1MMQ5bvTZYzKn8YO/fOz1PiBvBnwP0nrc4gu8CdM4ViRgH
8yRdO1aHj/YT3tbYm8rFOMyaCQSSX+xrwBbGOgTckq5JFNJ0kAUG7466WAev
E+y2s0MR6WOTXt5ixhgEH5Z+AFOtEMQ=
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{117.714, 12.712099999999998`}, {
     123.56699999999996`, 12.712099999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxd1G1Ik0EcAPA5TS1E0w1nbs69OP2QBGkiouBfynRZrBeIUd0pMl8imxBW
FhMsy2UaRmamflCIMEFHSZoMW5SWfTAzMcowVmjpSClLSole7p7H3YF/uA8/
7rm3///u0eaX7i/wlUgkPqRlkiYlLaBLdcgyiKGZxkoYeN0dFh9chBVgz8j7
NHYZQ7251uQzFglDmrsnijMw/KPRpoTr22tLZqswfMjMzWh5pYKoi1/29Tsw
hKC97oQ4DbPszLWyF3465uyupx2SOb04TymG+8nLTyy7DPB29NeBaQO3sN4k
Yt7R9+PPRDuCgVLbQvNrPbOwnkLHXJNmdBbqtFDXZA2r6kfQ+dNTPvJNA6c9
sVsDh9Z4grugkMRnBCM0dmuZvfv3Oovu/7mOjT852JfZHKWHbYkkBrnT3KYr
TS7uC+T46ofcQn6dq/NF6IFkP9X9BoEFTe307Y+BrI9n5Y5ozDwV43+uUc8t
7DONOztIutluxdCzxXrL5wi3d/9eC3mv18Ke/I3mlBIMN2n9UzQwUNYQ4XcQ
g5x+b1HD8ClXW2Q6Bpt7+V1ijkrcP6mPheYhVgV3FsfJFKvjN6mgl6S/fAWB
XRNgGFlSgtxBTjCPIO57jKfFoxTr6UFgNphVo1Pc0c52V4GVWxwfCWaSDtMC
N3Iag6S/ua8u2NKT1JiZXt/UXO70JOw02jDMVx+vTWhVMIv5kDGfV1SsO1q9
Hh6oyQXNxuCpmD72Mt4fLtH66Li7aUH+IubKRvIAHiFQ3gtvk+YFwteOZznJ
nQhmaX9XMNjoAo+ReC8Sg1l952j/fAizcH5HKLPwnkJlEG8PnxwdRlBM8+0v
h/fkOll7uMV3yC3Usw6J5z0sYxbyXxPKbJoxjic1bICJcnKBxxAsuRZ7i274
svp6PXO7dUhTye39PxjofMYgWPv/+A/e1uVO
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.42393516842275014`],
  ImageSize->{144.04395516811957`, 39.29269240348692},
  PlotRange->{{0., 144.04}, {0., 39.290000000000006`}}]], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.938824308044958*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"60e3e30f-3b3d-4645-a155-4e0ffb7da1c5"],

Cell[BoxData["0.1511499468945182`"], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.938824308176962*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"26a26c17-2224-2e44-baa2-4d7cd3b9ae2e"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "2"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "2"], "-", "1"}], 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}]], ",", "x"}], "]"}], "//", 
    "Steps"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "2"], "-", "1"}], 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}]], ",", "x"}], "]"}], "//", 
    "MaTeX"}]}]}]], "Input",
 CellChangeTimes->{
  3.9386653090197334`*^9, {3.9457222328844643`*^9, 3.945722234166609*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d2e6dcc2-125f-2247-b435-445f9d713d0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MaTeX", "[", 
   RowBox[{"IntWithStepsOfTeXForm", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}]], ",", "x"}], "]"}], "]"}], " ", 
  RowBox[{"Steps", "[", 
   RowBox[{"Int", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}]], ",", "x"}], "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.93866546780567*^9, 3.938665599181183*^9, 
  3.945722234871996*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"e6f7cf9a-eb1c-2d4b-ace2-f5aef1960d98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "3"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["x", "3"]}], "-", 
        RowBox[{"2", 
         SuperscriptBox["x", "2"]}], "+", "1"}], 
       RowBox[{
        RowBox[{"2", "x"}], "-", "1"}]], ",", "x"}], "]"}], "//", "Steps"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["x", "3"]}], "-", 
        RowBox[{"2", 
         SuperscriptBox["x", "2"]}], "+", "1"}], 
       RowBox[{
        RowBox[{"2", "x"}], "-", "1"}]], ",", "x"}], "]"}], "//", 
    "MaTeX"}]}]}]], "Input",
 CellChangeTimes->{3.938665332498466*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"2c93dca3-bc37-bd4a-ab83-bff6ad54b1d3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["1864", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"PolyQ\\\", \\\
\"[\\\", RowBox[{\\\"Pq\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"IGtQ\\\", \\\"[\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"||\\\", \
RowBox[{\\\"EqQ\\\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \\\"1\\\"}], \\\
\"]\\\"}]}], \\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"Int", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", 
                   SuperscriptBox["x", "2"]}], "+", 
                  FractionBox["1", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "x"}]}]]}], ",", "x"}], "]"}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
            Rubi`Int[
            2 $CellContext`x^2 + (-1 + 
               2 $CellContext`x)^(-1), $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"General\"\>", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                FractionBox[
                 RowBox[{"2", " ", 
                  SuperscriptBox["x", "3"]}], "3"], "+", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", "x"}]}], "]"}]}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
           Rational[2, 3] $CellContext`x^3 + 
            Rational[1, 2] Log[1 - 2 $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"PolyQ\", \"[\", RowBox[{\"Pq\", \",\", \
\"x\"}], \"]\"}], \"&&\", RowBox[{\"(\", RowBox[{RowBox[{\"IGtQ\", \"[\", \
RowBox[{\"p\", \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"EqQ\", \"[\", \
RowBox[{\"n\", \",\", \"1\"}], \"]\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[$CellContext`Pq ($CellContext`a + $CellContext`b \
$CellContext`x^$CellContext`n)^$CellContext`p, $CellContext`x]], 
          HoldComplete[
           Integrate[
            $CellContext`ExpandIntegrand[$CellContext`Pq ($CellContext`a + \
$CellContext`b $CellContext`x^$CellContext`n)^$CellContext`p, \
$CellContext`x], $CellContext`x]], 1864], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
           Rubi`Int[
           2 $CellContext`x^2 + (-1 + 
              2 $CellContext`x)^(-1), $CellContext`x]]], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Rubi`Int[$CellContext`a $CellContext`u + $CellContext`b \
$CellContext`v + $CellContext`\[CenterEllipsis], $CellContext`x]], 
          
          HoldComplete[$CellContext`a 
            Integrate[$CellContext`u, $CellContext`x] + $CellContext`b 
            Integrate[$CellContext`v, $CellContext`x] + $CellContext`\
\[CenterEllipsis]]], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
          Rational[2, 3] $CellContext`x^3 + 
           Rational[1, 2] Log[1 - 2 $CellContext`x]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.9386656283774757`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"c6321a38-c0b1-4347-83e6-3518fe5b90e7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["x", "3"]}], "3"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "x"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.938665628393091*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"4ddc897c-4fd0-244b-b74c-7e56793739f7"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.0041310364770520925`], 
   {Thickness[0.0019746354360309004`], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v6Ibn/GD4wOF/Pj2c8ZOjgwgAGrwxkQMHFw
kNkoNp9pAZtDehoQhCH4k7+xxc+oQfCfJC68ZrLewSFGNULmnA2Lw+cNAdmz
jjs4qH9SeTmLkwnO3+61wWJO5X97GN/EGAg2/7J3VS1lmrUBwQdRxtUI/k3p
mkQjXQeHw937mkyUmRxmzASCm/YON3hvi6V+Y4fz1wrp8KXbCcP5HmuOLmf4
Ieqg+qR53tkgR4dokPtiJB30Jyz4Ycjn7FBx/8ctY25ZB5DymR9dHMD2Cis4
JBy+rJ16082h9PA215mxig77a2Ut0o94OPwHAXslh/v7+OYYc3k5dNp47kpT
UnbYope3mNHG26EbxP+kDNHP6OOwASyu4tC6PPyUkY+Pw5viraK/uVUh7hP0
daj5BAyIXwh+SuwdN+YdanC+1Lw4zdMB6hD7v/g4JIQEqS/IVHdIBcXHOx8H
2eUvPPTmqznkcP5ckP7ax6GB5Wi/oTlU/0kEHyy/GMEPKVGZ/r/Ax+HErh29
bBfUHHj8109JjfBxmNLeGnU5Rh3OPwaS/4Dg1/62KjjXoeGw51bX39R8BJ9l
8SQrxqUI/gdQ/H73cTh12Gltpp06JB6NfR2YOLvkk9+pwvlg+2RU4Hywv44p
OewF+bfHB5LuyhQdpoDSW4i3wx1N2TX/kxUdHJoeHZ/h7O2wI9gq4r+7jMNG
UDi7eDiIVE4qOcsi7lAZscL0bLQLRP64KCR9FzpD5FNEHMSnXuHMKHJyeOAa
7zjropCDvOPH5DNzHR1aFdhVz3wRdIgQ336RQc/RYcmt5Y8Nm/kd5tvoXJnF
5+DQIl7LmnmMHc4PeOJ5yTSYBc6HpXdYfkLPXwChgWXV
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4gnBJSrT/5s4zAQBSU8HGD9CfPtFBjdPB5l5
cZqnFyD4S+7v45sz2RjO32L+41BKl7EDj//6KakRCP7OW11/U/sRfLD6dz5w
fo/XKxYTQV84/w3vPoOZQr4OtpURK0x9EXz/ixNj/jEbOyQcvqyd+tLHYfoE
/iqzbCOH2t9WBec2+Dj8BwF9Qwz+3lpZi/QWH4f0NCAoQ/CfJC68ZsJvBOd/
3hCQPWu7kUPr8vBTRmsQfJj7YXyY/04edlqbuc4I7v9ukD8WGsL54lOvcGY4
YfJh4auvtVL4whRDh8nf2OJnyHg6PM/S/jZ9rxGcD1avZAzng+1vR/DB4bPW
BM5Hjz8ARwXLFA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{32.892199999999995`, 53.18749999999999}, {
     32.892199999999995`, 53.4266}, {32.665600000000005`, 53.4266}, {32.4984, 
     53.4266}, {25.9859, 53.4266}, {25.818799999999996`, 53.4266}, {
     25.592200000000002`, 53.4266}, {25.592200000000002`, 
     53.18749999999999}, {25.592200000000002`, 52.94839999999999}, {
     25.818799999999996`, 52.94839999999999}, {25.9859, 52.94839999999999}, {
     32.4984, 52.94839999999999}, {32.665600000000005`, 52.94839999999999}, {
     32.892199999999995`, 52.94839999999999}, {32.892199999999995`, 
     53.18749999999999}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYgXHj8ln3ro4vOfdZzBTysthg17eYsYzCP7O
W11/U4+7OLioljLNYvByMDEGgt0uDvtrZS3S13hC1K9xcdgIoqd4OvR4vWIx
WejioDthwQ/DNk+HZS889P57Ivhty8NPGckg+N0g9YzOcP4bkL1azg4Jhy9r
p670dDihaTXpdLszxF5uL4fPGwKyZ613dvgPAvpeDgwgMMPFIVx8+0UGNm8H
mH98TrDbzg5F8FkWT7JifIvgnwGBOT4Q+5JcILSQL8T9G53h/OMg+/87ofKn
O0HcU+0D54Pp795w/oX8ePZzK70dfsfkHv13C8EHu/8+gg8zH0Ve3RkS3gcQ
/BkzgeAjgg8OfxkfB/GpVzgzuKDhZekDNx/Gvwgy9yKCX7xV9Pfpcwj+/X18
c4xPOUHC09zH4Uniwmsmz6H8+VD9ltD4eebjcFO6JtFoLoIPVi/vAueXgMzP
c4H4pxLBh4U/jP8DFC5Z3g4VEStMzypD1f/0cpjyjS1+xhlo/E73godnGgjY
ecL5oOCYKenpEAGK92MucD56egYAUHlL1A==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lG1IVFEQhu+WaUZKVGYRRUFWUq2pK4pojeS9d89eIbFAsQ+1WFcys1DJ
H1mSkKQ/KjFaLT9CUJEoi8qKMqHELT9qUyQrkEIoKIxMrNTcds7ZvfOrgcPy
LOecO/O+M2f9ofwU63xJkgzulepe89zLeLHxd/haMzwtWRNjm2Tg5bvGY02G
WQYujGAztHwxG10GCxTcC5rpDSTeU7jhiksinmhPzq11qRB8ecg/Z5rB7P68
7rlpFcLw3nEGNRhOVeyzMdiL54tVOD0Te3xgM4NzLakvI0zE9XFbh2rnFJ35
+Y8KyCFF82qTiR++q/hrvUDM721n4jufFch8NrjF+oJBzHB3nklSwZbtDqMF
khx+8VejPDxngeop3wx7kgqjnYHXItM1UPA7pSosn0h4lV2nwY3K9zlSz/+5
D2OSeEFTVawhyAx2zOu8BrdR1zEVFu++VW0t1XQ9itNao/r3ETdg3TuIub6r
NGjE/8dVWJfw43BfgCb08jHr3Iz7wol5HSlmkU8UcSH6eJCY19HgqXehx//H
GgRgng5VZ1OkO3KJx7KuD5uiVYhGXTM1oXOoKvbt0mAb+u6rQlpwh1O6rwmf
WhT9PK+7ktgRGlvV+13WeWT1qayIOhlO4r6fFp25Hk7idtzfZ4Gj/n8abU0y
lKMuzy2in28Sr8S+fES8FHV5IsMS/O23CF+6ZNh59lOPfdACXXwuZKFfiSb6
OV3R/eX1lxNzP/qInfkZfgMjCnzAPA8QJ6LOMcTcjxWa6OvXil4vtmV2pyJ8
avPkX6HAGZyHt0zUW6CAD/ZZCRM+qjQvXPcpWWd+3zgxnwcHsYTRKos+jvPc
NyoL31QmfP0qwzKsr4i4B30rJ+bz1MyEfkOyqPcBE3p1EH8L6NxeU0W8cays
vv+ILHSwE3vfCy/zfDYxCEG+I4v3ZhHT/fIyn4N4RWeu9wlFvHeJTMzLJQUw
7cgyJvRtI/14/b/oPM8jTNUZsE96ib3vJ6/rDbH3ff0Hhltfzw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYhNjICj2cphvo3Nl1jdvB/umR8dnBCP4/P7r
p6QGeDnc38c3x/iRtwMPiO/h5fA8ceE1k/XeDlv08hYz2ng5VESsMD0729sh
Qnz7RQYzL4g5k6HqX3jC+ebXjuaa3EDw3/DuM5iphODvr5W1SF/j6fAfBPh9
HKZ8Y4ufscfT4QnIPnkfhz23uv6mPvd0CClRmf7fwcfhuKbVpNPfPR2eguT9
fRzWdN/OYDD3ckg4fFk7tdPHAeY/MP8ggq8zYcEPQzlfOP/DhoDsWdN9HW5I
1yQa8Xo5hIP88czXQd7xY/KZXk84P5vz54J0YQRf9UnzvLOHPBx6vF6xmHQi
+HNB4aeH4IP98ccH4t9XHg4inxzPp331caj9bVVw7geCrwdyF58nnA+2X9cT
op/FF87PAblDG8EHh3OCr8PvmNyj/355wPngeHyH4LctDz9lxOPpoAJy1ypf
B1fVUqZZAZ4Oe0HhfsQX4r4mBB8cbg8RfHA6EPJyKAfFdzGCDwtPGL8dZM8W
aPwc94SER5qPwydQOPt7QsL9tTckvs57OJRsFf19Os0bHl7g9BCN4IPdEYng
g9OHvbeDzwl229mhXnA+enoGAHSQSY8=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYCYlfVUqZZNgEO6WlAMM3LAcbP4fy5IH2zl8Pn
DQHZs/QR/Pbl4aeMVBD8+/v45hgv8sPgz5gJBJE+cP6a7tsZDPkI/hvefQYz
u3wc5troXJnVhuCD9WVi8sHuKkDwYebD+DD7HZoeHZ9x2AfO152w4IfhOgQf
bO4kTP5/EJiO4Ks/aZ53tsrLYco3tvgZaxB8mPkwPsx+dP4ZELjiAefvvNX1
N3U/gl8RscL07GIPhxvSNYlGrQg+LHzQ+fKOH5PP7EXwYebD+DD7YfED4/cD
vf9MD8GHxS86Hxb/AK/o9/c=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAGIQrW016XR9SZBDSInK9P8SXg4wvsAnx/Nprl4O/nJi
Wb7qmPw70jWJRn994Py7+/jmGEv5wvlLX3jo/Vf0ddAEmSeD4KenAYEYgi/9
+pGZlAiCHym+/SIDX5DDlw0B2bP4fR0qI1aYnlUPhNsP48PcGwyiP2Dy5R0/
Jp/p9YTzb4HcG+rpsPNW19/U94EOESB73DwdPoPs2Y7gL55kxei7ApM/EwQk
PR2sda7MerYz0GHyN7b4GTKeDt7Vzfo+3xD8mNyj/zZxB8H5+fHs5yQVg1DV
xyH4j0VkTz7ND4KbD+PD7HdXLWWalYDg167bllSvieDDwhvmPxgf5n8YHz1+
YXwAhtPK3g==
      "], {{71.82499999999999, 52.54219999999998}, {68.9219, 
      52.54219999999998}, {71.82499999999999, 57.04689999999999}, {
      71.82499999999999, 52.54219999999998}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lGlIVFEUx2e0zcgKNM3CMihaDC21EpU6kqL3Pc3pXUFpc4lxrGj5kBSk
aRpIJRSSNJqhJGhE5ODWQlmkJurkkhqSWaZltlJatGhO7947M+dTF96HH9x7
3jn/8z9nWfJhRe+o0Wi06henfg7ql36zLjnzB4UHGZ6Bhu8EbFzjc6hMO0nA
kKKeMQoVo5E+Fq0EXqHf9po/I18o/bV+ZAR5sH5usb/K7gU9Tql/CLxx9Wx5
O0zBl138QiDAXz0dFMZMugNFBiLeX6VwciLoSPsqAt5B+W2ZWci1p9M7q/XI
/H0chfAVaQ5FOuQ7z8/+1Z9Hjj26/JLFREQ+OygkNnR761sI5GwnV7JSqKjL
R4I86cO0gFNWnpLA9Pp9QVUehVf8nQyzfpcaqsspuI6FdqRckSFkbU/RSMv/
2czOIPLorUrHd18pGAvVc0aGh0znPgpzYiov6rNkux7H469teLITuYQF3ozM
9fWQhR4DVPTBWYbVTK9RZK6DBbm36WBA1rxYkc8G5KO1Cyba9iDfONefqimR
wYnV+8Ha/3syfHKuX1fYiqxhpxg53v1WlyabwqZnaqBEGRZG6iYXnqAi760y
ZDA/7aPiXp0MjWobPILwfVl+kDZ6LbJ8Isc36qViZ8r6WKPAMabPuGRnrkcX
sondN0uw+OPQxkW3FcitiGv1a5TE/+8jjzPfNSAfTpjZ7tGkwHymzxNJ1PtY
gS3ZQ83GbgkimM8GFaFfhgzDzM8u2F9e1xpk3o8oZN0St/3RlMKLxelJfruR
w1jcQGTeDzer/tuovV5mm8Jwqx+vW/P3ppDJ5qGPiHq9KExjQmYQCGZ+dMJ5
cWF5vFbszOMNIPN5aEXmc3BXET4OscbrVYSvIghY2OlXRNw05GZWeC4yj1NO
hH6diqj3NhF6PULedbBpqqoSmc/BZUXMtxHZti9szPNZaeUHitg3s4m9Xzb+
OSPBGDWd2jmG6b3Uuu/CiIjjS4HZ1T+HCH2DUT8+30n4nu+Tk8jcR2Zk2/7k
PnqKbNuv/wDXwWOB
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdk21Ik1EUxx9fSAcZEYZERAVKpL07ECTpLOiDPvehiDtmL8NYTI2yVay+
pMxmSJSR2SKdEVJQIOKGy00i/KIrc8uUrKAXiLAlldELhbHMnnufe3egA/fD
j8O59/z/59zVDtduZ4aiKGn6segnXT89F17VKkVWqKnW44sKkv/sr4v+3U7g
14KqdmKyQs7OgM/ZKvgZBXf/0mTsNoEOFnMUjph+d9UMEWBlfcut4EmWHhvL
1lKcd3XSVLsXObjh6K20Hg1WWb4djM9QsOVFJpSEBnEWA8hvBxddL/YiT0cC
GR8qKeRPNd143I2c+93ypNqO/DW467C/RIP+s/XjISeF+y/PzznXaNDaNbs5
cQI5W2875EXm9S0UVrK+ypC5vn3I1J1/bb5Rgx0FJ9P99aL+kmb0cZwKvzQo
YH02U1jIeESD4adFzmW9FLZ53z1sj2lgLtYjglxY2hbzDP+X/yT9RZZ+Subz
WqLBWlb/mkLJ82ideRrnFWWJFwQqmY8PRH6AQMXppo3kHoX1zJgwMe7rpPCG
+d5HoKE37PBcFnqDxNB3kcI8iwAy13kT2cce9on32pCZjJAfufmObXTLXWTZ
v+St6yb9iZ8UDgzpxu1Blvsqme+tSzXmPUGhpeJjprlcNeYbRpbvS+Z+uymQ
kayyTrsKn3MGN3U4hP9XVEO3G5nff4bCLPO7G5nvbRx5MfNhRjX0nxL5TJLa
R8lTuSsevbch8/9ULub9Q00x72sUedxVlTV2SHCDyBeqYGf/K4LMxtyYRJb/
m+/jOWTp5z8LJOhD
     "]]}, 
   {Thickness[0.0019746354360309004`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.1391, 45.090999999999994`}, {
     85.49689999999998, 45.090999999999994`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{38.09219999999999, 36.887499999999996`}, {
     38.09219999999999, 37.12659999999999}, {37.86559999999999, 
     37.12659999999999}, {37.69839999999999, 37.12659999999999}, {31.1859, 
     37.12659999999999}, {31.018799999999995`, 37.12659999999999}, {
     30.792199999999994`, 37.12659999999999}, {30.792199999999994`, 
     36.887499999999996`}, {30.792199999999994`, 36.6484}, {
     31.018799999999995`, 36.6484}, {31.1859, 36.6484}, {37.69839999999999, 
     36.6484}, {37.86559999999999, 36.6484}, {38.09219999999999, 36.6484}, {
     38.09219999999999, 36.887499999999996`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4hOaVpNO/3d1MAaBzw4OMP7nDQHZs+QdHXj8
109JvYDgX8yPZz/nieDflK5JNHJ1dVj+wkPvvyGCH1yiMv1/BoL/CaT+uAuc
r/aked7ZVwh+2/LwU0ZvXBzm2ehcmaWG4K8Amcvo6vArJvfov0MuDj4n2G1n
b3VxkJh6hTOjy8WBAQQkMPmR4tsvMsS5OJiA/GWN4IPd0Y7gV0asMD1728VB
wfFj8plWBB/mfhgf5r8niQuvmVx3gfvfVbWUaVYAgt/j9YrFRBGTDwtfsDu9
XBx0Jyz4YfjNwaFkq+jv0/cQfLB6QVc4vwJkvzOCDw6fawg+evwBAD55wgA=

     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4nDx7RcZ2Hwc/oNAvpMDjM+yeJIVY6+Twwa9
vMWMb7zh/BvSNYlGVxH8Nd23Mxj0vTD4JsYg4ALnu6mWMs3yQPDbloefMkpx
ccjh/LkgXRjBT08Dgm+eGPwH+/jmGHsh+DDzYXyY/Tz+66ekBnjA+b9jco/+
s0Lwd97q+psqj8mfCQKFCP7+WlmL9BAnh4TDl7VTLRF8mPkwPsx+dD6YXucA
5weXqEz/PwPBF/7keD6t1sFh+QsPvf+CXnA+LHzQ+WB3TUfwYebD+DD7YfED
47/h3Wcw8xWCD4tfdD4s/gFAONZ6
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4tjco/82KQc4tC8PP2X0xdFB9UnzvLNCCL62
1aTT9QIBDvf38c0xvuXokJ4GBFwBDhHi2y8ytEHVMwU4eJ9gt52dC+X/8nc4
rgnUGO/o4ND06PiMxQi+guPH5DOlCD5YfZQfnN8KsrfFz+F3DNBhTY4OCYcv
a6c+9HM4AwJPHB16vF6xmHD6O8wEAU4nhxkg+qO/w+cNAdmz7js5wPzzJHHh
NRN9Zzh/vo3OlVnHEHyQN9LKXCD+3OPv0Aai37g4qIDcw4Xgg+2P9IPz40H8
j74Q94Qg+Ikg+qIznJ/D+XNBerOzw5RvbPEzTPzgfLD7LRF8mPko8o1+Dg9A
4T0LwTcxBoLTCD44/L85O2zQy1vMmOLn8AsUXkIucPNhfLC52gg+j//6Kaka
CH5FxArTs8p+kPAUdHGo/W1VcM4Byq+E6p/s53ACFD/7XRxKtor+Pv0NwQer
r/CH88Hmn/CH6AtG8GHhD+ODw8XF2UHkk+P5tFp/h2yQ+stODroTFvwwVIPG
b6ETPDz/g4C4I5wPCg7jzw4Q9/MHwPno6RkASKlPug==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lGtIFUEUx6/XyKIXmM9MM0ioFC1fmRWd2a20VNxJSAVBvOKjwoSwMtSU
blRo4OXSxUdqosaN8m1mIdiHECsfKWmSfojMV48PpkSFle3O7N3zqYFh+c3u
mZ3zP/852w3ZJ9PsdTqdnTzj5amX50cnz5cz3RQSXLtGdEMEbBz1wuHQnTEC
A8p4QgGuTvWVTxK4YY1/FfgI+cfq5PLoJuSjPhf0lY0U2vzP1duNEojKMwZE
P6DQtyvc3N9HoEIZFgolJz6vCiZq/GkKrpbRtZl6Aqban3tnjyF7fJkK3eKH
zOI9Kbzv2VgVtBs5LmdH2Uom8tcNPXsqiglEKOfxprCclNX7t47AfFeL/Zy8
34oyHARYapXOVkaoPC6Aa6T02y2OwuWE+yGDQSJkJzsMuWdRaCyZzNRdEqHe
HG4XY/o/BynDihzr5XImpotCsLKeKoLPtLFmsIaCdT7SfyVR1PRwWiSv00OQ
973tzQp2Qz6s6LskcD0aKDydKP6TNidAqaJXM/I28i11oBf5gN9o5eyYep5N
osbrY1tup4Uhs7rlqvm2UYhW6m8Rua4m5Ix0eRiQnxV4hmVEUhhRAveLUND8
2FBIKPfNVpH7KYBynUtF8JVtUKjD+DW/ajM6FiWNWz98srQ3IHcreeRJsFnR
Z1DQmOnxEJn59Z4ARnq8uuiKxHWoFvj/jcjM58XI47LMRSUS18cq8HxvSfDO
Iz8lsElQ19X38SL384Sk1Zflv4DM6uGI9e+8lj/c4U4hp9N5uT8UmfnXEZnV
Y0Hg+jtTLV/my3UUchU/GtXzy3qx+9BOeL6zEtw9KBfyFOF+HJa0+8J8bEVm
+9Ujs/tgQmZ1K5J4nV3U/aokros34et1ar6xyCnP3/impSCz/xQS/l2ZxPM1
E67XTWQlzP0iMnsaVD6PbOsXNmbn0al8XeL9Zhq0etlYufbt/chM7xkJEhUd
vQj3wXeJ551EuL567Dcs/51Ui2f95Agy6zNmZFv/ZH2yEfuprb/+A+XpbCY=

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQ/YZ3n8HMbeEOZ0CAx9UBxu/xesViYgnlNyH4mlaT
TtfXhDtURKwwPeuM4JdsFf19ug/Bv7+Pb46xkafDAxAtFO6QePiydqoigs+6
eJIV41cPCN8NwV8EpHx9wh3Ep17hzHiF4O+81fU3dT6CL/LJ8XyarzuEbxPu
cDE/nv1cpbvDLpA66XCHJ4kLr5msd3fY8PDl1E1vwuB8BhCYguB/2RCQPcs9
zCEB5D5JBN/nBLvt7FA3OD+H8+eC9MmuDm3Lw08ZTYDK/3VxWAKy/wmCnwYC
cuFwvszrR2ZSDuEOy1546P33dHVQe9I876xXuMOa7tsZDOkIPkw9enwAAHxh
tS4=
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQrfaked5Zr3CHE5pWk07vd3WA8duWh58yWoLgf9oQ
kD1rvquDzOtHZlIO4Q6R4tsvMtS5OmxtqbmwWTfcgdd//ZRUD1eHNBDgC3fY
qJe3mFHG1aEDZM6LMDh/ySQrRt8rCD5Yf2OYQw7nzwXp2gg+WD7EDc5/sI9v
jvEhN4cJC34YPusKc9h5q+tv6n83h5jco/82zQ5zuJgfz37O0N1hTfftDIbV
YQ49Xq9YTBLdHWaCwMkwB1fVUqZZE9wdKiJWmJ59j+CbGAOBfDicHwHyl1U4
RJ03VL9jOMR9xu7w8Eg4fFk7VRLBB/tbDMFXBdG/3BzQwxcAhMGhuQ==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxFlGlIVFEUx0cN27RMMpdssUYMLbemMiM4UXeemaJmMfdJIFpjUppSFi2G
MrZABoUZuTSlrUqRpqkUokZqlkuZIWWEudRoJmJ7uPXue2/euXA//N6795x7
/mdxi03arrdSqVQWwtYJ21LY2ZszE0wbePheGr4/z0TAzP0xhZ2aEQKk8sfE
2wAeuhamxvj/IhAaa0fXa5Cj9mzoDluF/Cey73b+Sh5CmqZvzB8mMFY8+ibU
k4eYZx1e+h4C9hl1LwsdeHDvz7jWGkXgt3V0TsgghYfeB25auBK4WPDX70sj
8sKh3rUu95Fz2TJSOEqL1rRuRv5mW+Oba0A+c1f30v8WAa37Ycu8AgrZzFE1
gYGqEiuTYE8856aFHyzu5zKPasExKHzcqYPC/O+bXsWFcpAUPb3NeZgCYXYu
clC1+PRQhB2vcKXMW2S+5yoo4oH/jSN3G7et46GFrVQO5tL1j5oW8wCG3uc5
hzhFj/uZH+JVYcjtzLEf8numry0H+6pTLjmpediRor4ypeJAyM7RQW9kExOc
IL9rEzKyk5d0WIF8ZyDIeyoC+VPNnKursziwsfQ6u8BPzn8JBy4+H9XW85Dj
2OqlCteeXBSwt4lCwsx/BXsjOTj5oDI27SmVzq3loG/+ohefSyicD/46TVPM
gWdgVnNaOt6fIVwrP4hc2jN4uUyN/KTr3IR+TCfpY9IqLOrRgCyer9WCIWKr
MX1SB4/Z9yqt5N+KKkwdq9pVs5A7GxI16bOppE+dFiKZbjYUUiocxpobtZJf
Dzn/yRwEn8jwCYnCehDjT0a+wOo3C7niVOrr8lwKNmEl2fpwZLF+vZDFfMyU
6+0yVeKdYiuTgj2rR6P8fkGvUtYPLUSKN45CAAskmcCNrECL0HDsl2PMjwey
aG85stgPdshinaooqNjyle25yv0VSKS8LpP1ikce35XYMHkcWeynXCLF4SjH
e49Ies1ArhfGgvNvncJiHfbKnIlsnhdmFt/jQqCbsTWV5s3EFiVfZmbPKtuG
LOqtp/CT9f06Aks2je5uOSzX6xEi6WtAPW6y+Ivwvhh3PXJ505Ga6/a8wub5
uZTZbcB5ap6v/wHn92jo
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KH1EYUNRRmaMwwlNq0mnxd0dYHzWxZOsGE3dHVRu
/6zLikHwJfTvqrAFIvg29/17p/dFwflTnLtznjcj+OvdH1aJlGHyEw5f1k6V
RPAP1MpapP9xcwCalifUjODDzIfxYfbD+PtPLXTdFo3gw9yPzkf3Xw7nzwXp
v13hfB7/9VNSJdzg/oXxYfbB+DD3wPgw/8L4MP+g81lA/v/rCueD3XPfFe5f
GB9mPowPsx/Gh/kXxkfxHxIf5j8A6N/FLg==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4qWzjyhsSIp1uJgfz37O0MHBxBgIqmMdzoCA
iYPDlYqXaoYdsQ7paUAQhuBP/sYWP6MGwX+SuPCayXoHh5bXgTvkSmMdPm8I
yJ513MHhDZDbmozg8zBpt4sFIvh7SiZLsNjFOriqljLN2oDgG4PdgeDflK5J
NNJ1cLA1jdvlmRLrMGMmENy0d6gRWef+cBKCf7xs33wp9jg4H+w/ozgH1SfN
884GOTrI6N9VYcuMc9CfsOCHIZ+zwxTn7pzni+McQMpnfnRxEGg+cGrh1TiH
hMOXtVNvujl8+Qv04b84h/21shbpRzwg4SMd73B/H98cYy4vh4KMiW9rzOMd
tujlLWa08XbY+hmoITAeop/Rx2EJyP6oeIfW5eGnjHx8HF6oGXKsKYmHuE/Q
1+G80u2fdZMQfHGWMD7dVQh+RIr1ff+98RD7v/g4rPh4yTfpQLxDKig+3vlA
/Ls83iGH8+eC9Nc+DqpA42VmQfWfRPDB8osR/JASlen/C3wcSoHa9dfGO/D4
r5+SGuHjwB9hueXEPgT/7fJj3uYXEXxw+D+Jd9hzq+tvaj6Cz7J4khXjUgT/
Ayh+v/s4xO7y5GHaHQ8JN2NfBwlQ+E9E8MH2hSH45cDkxKET77AX5N8eHwcX
YPT8Zox3mAJKbyHeDu4Pq0TW/Y9zcGh6dHyGM5Q/Pc5hIyj8XTwg6c05zqEy
YoXp2WgXiLx+HCR9FzpD4kcyzkF86hXOjCInh+1yra8DGeIc5B0/Jp+Z6wiJ
j0+xDhHi2y8y6Dk6zHkPDIDzsQ7zbXSuzOJzcADGZlHGRAT/+e+VHy+VIviw
9A7LT+j5CwBKhHkm
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYCYpO4XZ48QYkOJVtFf59+Z+cA40+dwF9l9tvO
ITrF+r5/YKJDj9crFhNGe4ee6XlCzQGJDlvMfxxK4bJ3KJkswRLmlOhg3/To
+Ixqe4fbP+uy9mgkOrQvDz9lpOLg4Jjw9IISf6JDwuHL2qknHRyWH/M277yY
4LBRL28xY4iTQ3fO898rtyY4sCyeZMXo6gLnL3vhofd/ohucL/zJ8XyarocD
yPiSwwkO/0HA3svhghLQRqZEh+OaVpNOs/s4JAtEWG5RSHQIKVGZ/v+Bj8PH
S75JAg6JDqlpQBDn62DeCXQR0P0zZgLBQl+4f3UnLPhhuAzBB/t3JYKv4Pgx
+cxaBP+OdE2i0V5fh/5DXzVi/BH83aAA8ULwC2y5ri92QfCnOgN95Izgz5fS
v6tih2b/vgSH8ogVpmcvezucXui67fPUBIedt7r+pop7wvk5nD8XpE92g/Ml
pl7hzLBycTDgWCMTtSPB4QwI3HF0AFlfIJnokA1SL+zgwM2k3S6mmOiQv6b7
dsYDe4fz34MfL9VPdDAxBoJke4e574ExZJ/ocAPkvq92cPcWgNRfsIP7B8aH
+RfGh4UHjA8LL3Q+LL0BAHn4GZU=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4uPe5p2OHEkOCo4fk8/wujlot4vdPPc/Ec7X
2TT3/fJ/iQ6VEStMz352dQjl090093eiw6cNAdmz5rtC1H9PdHiSuPCaSbur
AzcTUORrokPC4cvaqZWuDkDdx7zvI/iLC2y5rl9G8MHqexH8n3VZe0qmJzpM
+cYWP2OOq8P0PKHmA+sSHdJA4J+rQ7JAhOWWHYkOJsZAoOzm0OGY8PTCp0SH
Hq9XLCY/3Rxg/qn7bVVwzsMdzre4djTX5AGC/x8E+j0cgK5ZXPA00UEe5F9W
T4h7diL4t0EO6kHwwe4pgronzwPO/xOTe/TfK3c4n2XxJCvGue4Oydb3/Xub
kfgg97cg+DDzYfyls48obJgGDe/NCP4ZEHiC4IPDn9/DgX2NTFRKf6LDZFB4
6XjAzYfx0ye+rbFvRPB7QA5sQPD7D33ViKlPdAAFp7G2hwPIudPboPzJHg4q
bI1TnWdD4+emh0P2npLJElsQ/O/Bj5fOvoLgg81/AfVPLoIPC38YX2/Cgh+G
ce4OQNv7D12Fqn/r5sAPTF7v90Pjt9sNHp4zQcDQFc4HhwePq8PvlR8v+f5D
8NHTMwACfkQ4
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxllHss1VEcwK8yqklm1Zr6A2XZlEdd7+RrnPvzyCiFYcnxLOUqkrW7XpbK
Vam065JkKhkbNdUqu/S4MiFhJLPSY6plplIzSef3uL5/dLbzx+d37zk738/3
YUOV25Lny2QyI7aj2J7HtvOCulUxfRS+N4Snl44SMPDHhMp++TiB0367PnX3
UHizUpWwYZJAoSbDMq8b+dIK40jzTuREi2jPxg4KW9pMfcrGGHu/DTv7gkLC
016H5BEC49WtIe6PKdh9zLvaGUNgoCrTZ1EthduOGVVGqwjEf+q2HdIilz2z
bjhQiCycP0khN/qWa6c/8rfFOmftCeT86qj2DdcJ3OAvyKdQ/MskvqSJQHOF
ldMwu0/LLxsFFI2pfF1LJZ5QwJL1d8rHKygs/e73MiWUA/u4808m6ygQu4Pz
Sos4eDrJvuj+5wCJH2UzI+34u3znwyAz5q+DXyoOlJZ5Le16CnDi/fOSLG7O
R516KE0WhvxKGW/a5YI8yPtdzIk+2ihsz16jmZVxoq9O5NgkJnwQuTeUWkSP
UFDw77FHvvk50HF2K/I7nfmVjRc5SB+drpnokvJfz8GPmb7cLzrkHeZMUDUy
n14N87d34dS11AgO+HKx1VBI4ZcbB7yOyHMUCoO/GstrOFjH9Fbn4HnPxrYc
nRJ5aOrInqZA5PQmdoNc8jOqmGPBhx5Z+H+zAtR7WQCuFB68KZhJvq8Q69kD
2ZRhkjdyLEuv/SbJT4sC3M+wCBhn3102/aJVAa+7fkd8CJLymcmJ9ZyI+RXi
z0Dmy3ngKPIak+OX/fMomIXVFyeHIwv164As5GOhVG/HMN7VvBAVBUu+Hsul
9zNfDXw/dBAx3t0UPPr1++SZRKzHndgvLJs9ocHIwn2ByEYOp5YPbkYW+t2N
goxfzgRM2fPUAVJ/eREx/5zkKw35T9w+/d/DyEI/aYnoz0+Kt5aIvryQma2q
TBfkrLQLY6q1EquRDfPCwMJ7rAg4DTODntK8mQmYy5eBn4ewjMYhp7LjvszX
T37euROxX/ZL9ZpDRL+H0IfgswDPC/OtBLmlvZLca0Y2zE9rv4nEDj3OU8N8
/QfrT2Ll
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4pkgkJnsMM9G58osMw8HljA+3U2JCL5Fp2PC
04Rkh/v7+OYYK3k4fPl7peJlXLLDk8SF10zeuztot4vdPBed7FAZscL07G13
hz8rP17yjUp2cGh6dHzGZXeIejcEnxGkwQnBt+W6vrhAFMGf6tyd89w82eE/
CPh7OPDrbpr73jrZ4THIvngPBx0gdznQvOASlen/GzwcZuQJNR/wgrqn38Ph
8FeNmH6g/QmHL2unnvRwgPkvEcRn9ITz9SYs+GEYh+B/2BCQPeu6p0P2npLJ
EgHJDuHi2y8yqHk5HPc273Q0QPCBrvu9UhDB17+rwtb4N8mhx+sVi8lJTzh/
Pij88hD8yd/Y4mfYeDr8rMvaU8Ke7CD8yfF8mqmnQ/wuTx4mbgTfgGONTJQA
gg+2XyLZYQpIvwuCn835c0F6NoLP479+SuoCT4dk6/v+vdwI/uwjChuKOBD8
xQXAEOdPdlB50jzv7CtPB2BoHfqqkOywv1bWIp3FCxIfugg+KPrUXBH8K75J
AhGByQ7loPje7Annw8ITxm9bHn7K6As0fuyg6WmZh0OyQITlFqB9xiCg7eHA
2giMcYZkh5Ktor9PL3OHhxc4PcxG8MHxORPBZwCBBneHCW9r7E2TkuF89PQM
AFiOOQ8=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4hNl++ZLvU5xmAkCnW4OMP48G50rs5a5OfwI
frx09hME/8vfKxUv7yH4l3yTBCJKMflnQMDHA86/v49vjnESgi/v+DH5TK2H
Q4TllhNleQi+iTEQpGPyKyJWmJ5NRvBh5sP4MPtZwvh0N/1NhvMNONbIRP1A
8G25ri8u+IjJB5vTjeBHiG+/yJDn5sCvu2nu++8IPsx8GB9mPzqfAQROuMD5
b3j3GczchOCv6b6dwTDdxUHDEOjAPAQfFj7o/JASlen/NyD4MPNhfJj9sPiB
8Y95m3c6PkHwYfGLzofFPwB1edtb
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4ts/67L2xGQ4zAQBSU8HGD9CfPtFBjdPB/NO
x4SnAQi+ClvjVGd9BF/dkGONjF6GA4//+impEQj+zltdf1P7EXyw+nc+cH6P
1ysWE0FfOP8N7z6DmUK+DuGWW06UqSH4kSnW9/1lMxwSDl/WTn3p4zDhbY29
KVeGQ+1vq4JzG3wcOoDOu/AoHYO/t1bWIr3FxyGUT3fT3NcI/tLZRxQ2/EPw
LYDW7RPOcGhdHn7KaA2CD3M/jA/zH9A1vdOFEP7XiOk/9PVDOpzPw6TdLvYU
kw8LX6Bvo1LepztM/sYWP0PG06F3ep5Qs0gGnM8NUq+I4H8FWaCL4IPDJwjB
R48/AJfLvqU=
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{171.85799999999998`, 
     45.090999999999994`}, {213.933, 45.090999999999994`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{180.192, 36.887499999999996`}, {180.192, 
     37.12659999999999}, {179.966, 37.12659999999999}, {179.798, 
     37.12659999999999}, {173.28599999999997`, 37.12659999999999}, {
     173.11899999999997`, 37.12659999999999}, {172.892, 37.12659999999999}, {
     172.892, 36.887499999999996`}, {172.892, 36.6484}, {173.11899999999997`, 
     36.6484}, {173.28599999999997`, 36.6484}, {179.798, 36.6484}, {179.966, 
     36.6484}, {180.192, 36.6484}, {180.192, 36.887499999999996`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYseEpxeUnNMdjEHgs4MDjP95Q0D2LHlHh7nv
lx/zNkfwe3Ke/14piuD3Ts8TahZJd1j+wkPvvyGCH1yiMv1/BoL/CaT+uAuc
r/aked7ZVwh+2/LwU0ZvXBz2zZfSv8uD4B84tdB1G3O6w6+Y3KP/Drk4/Ah+
vHT2hzQHialXODO6XBw+gJx3EpMfKb79IkOci8OekskSLJcQfB4m7Xaxpwj+
AqB1Kr/SHBQcPyafaUXwYe6H8WH+A7rm898faXD/Tzj0VSPmOoJflDHxbc1p
TD4sfIG+PXDqapqD7oQFPwy/OTh8+Xul4uUvBB+snj0dzo/pB1ogguCDw8cC
wUePPwADEdRr
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4iSBCMstRzIc/oNAvpMDjM+yeJIVY6+Tw8S3
Nfam+xD8nul5Qs07EPzs579XfvTD5JsYg4ALnO+mWso0ywPBb1sefsooxcXh
4yXfJAEPBP8MCDhg8h/s45tj7IXgw8yH8WH2z32//Jj39XQ4/9RC122fLyL4
NxYX2HKdxuTPBIFCBH9/raxFeoiTw4pj3uadFxF8mPkwPsx+dH56GhCsc4Dz
g0tUpv+fgeALf3I8n1br4HAA5EB3BB8WPuj8nbe6/qZOR/Bh5sP4MPth8QPj
xz+9oHR7L4IPi190Piz+AThI9uw=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4ikSLGF8VzMd2peHnzL64ujwPfjx0tlnEPwf
dVl7Sk5nOtzfxzfH+Jajg8rtn3VZJzIdIsS3X2Rog6o/kungfYLddnauo8ON
c0CRg5kOxzWtJp2Od3TI2FMyWWINgp9vy3V98QIEH6w+EsE/5m3e6ZiS6fA7
JvfovyZHh2Tr+/691ZkOZ0DgiaOD/l0VtsbWTIeZIMDp5BDOp7tp7v5Mh88b
ArJn3XdygPnnSeLCayb6znD+fBudK7OOIfhpIFDm4sBxfXGB7aZMhzaQf9+4
QNzTiuAvBzkoEsEHu8ce6p4QBD/x8GXt1IvOcH4O588F6c3ODgYca2SiAhB8
sPsDEXyY+TB+UcbEtzXJmQ4PQOE9C8E3MQaC0wg+OPy/OTtcqXipZhiT6fAL
FF5CLnDzYXyTuF2ePH4IfmQK0IG+CH50/6GvGj7Q8BR0cWAHOjclGMqvdHH4
eMk3SSAj0+EEKH72uzgAYyfhaQOCf0RhQ1HGQgQ/AmT+Vqh/ghF8WPjD+FO+
scXPcHF2OPJVI6Z/UaZDNkj9ZScHUPLa0wO1v9AJHp7/QUDcEc4HBYfxZweH
E2X75kudRvDR0zMA0DJPFQ==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lH1MzVEYx69b3JAiehnmpYWIRKWi9JzfT5tUq9XmFk0qt3LoZXaltsbS
H+FGk9KbtCRXE9K8TGvZkIyKuDRibV7mZSxJw6Kc8/v97n3+crbzx2dn5+w8
3+/3eRYmZUbrrFQq1QS2tWyr2R435XxaXEch1vlGr6qHgJnD7muCqp8R0Nqt
aKmppQAH33RW9BOI3bFuILIGOeH9Y9f+SuSVr90m5TO+4plRP8FEwMumae6W
CgqdS9eWPOwk0KY/4WJ9jIJh02drH0LgbFbQlL59FJzLTJPT1ASWt9QMGlOQ
045/zQuOQ5buR1MYaLc75b0MOUbvVj6ehvxlWrtX5RECev5ADIXR+PSOsTME
inZ/GG1k743zpREgoTXUVp2qcJ8Ar37vp227KeTGnvft9hbhp3t88e1cCk2G
/jTVPhGKb4+4xxv+z4fI9vePTyKrPAqdXpym4OPNVrIIgQORR8tLKBg/bvQc
jxMtesz6Th6l+CL7Pe9I93FBDub6DguQyvUoo3Dz5ZG/ug8CrOR6VSEvWcUE
P4dcO5s5ckn5j71oYdvIy6U6f+SQRXvVVTki+F+9n91eTSGc+18mwq0HdSHX
Dchu/UwgPTK3dwfTrzczQdMTIII9i8tgMoUuvuaKAEwO160UhpujdlUVi/CL
yasX8b4mv0w0BCIb74X5HXZE9jvMBFVRmMn16RYsLOlxAVnKa4MA2gBWgJrC
fDKU3FUjyHmeiMxxlQ0yt3fERtHHKID1Zhb4yRRezMlLXH1RAGP13QXNTsq5
VpTz7IX+anj965B5nOvDkb89iUiaHkVBf81x9OEaZCm/DsiSH98EOW8RWO8g
FySUQg7PY4EAffz/gUo/tBC53jUUagOXm6o2EzmPHtgvndnttbOdkaX3HJEf
/Yx52zAVWep3KwqpKWw5ETCx78XOUPprAZH9n6XUF4mceOephy4RWeqnA0TW
z06pt4TIedEg2/bVZwWN7bRwsO+21tAfCu9BNs8LM0v/URH40zj0JGKSMm/e
gcUvM5e6MEeXIvux67ZMrzg+7+YRuV/WK3mNJ7K+G1APSU8t3pfmmw65uDzD
oaAI2Tw/C43aB6ubcJ6a5+s/z05ZOw==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYC4hSBCMsta7Idlr3w0Ps/0c0Bxv8dk3v03ysP
hz8rP17y7cp2cFctZZrl4e3w/0rFSzXNbIcL+fHs5wR9HfTvqrA1KmY7sCye
ZMVo6usQv8uTh0k426E8YoXp2WJfh/nvlx/zZs52UHnSPO/sKl+H6XlCzQf+
ZTncka5JNNrr63Bmoeu2z38R/O/Bj5fO/oHg/weBz2jyHzD5Co4fk8+sRfCP
a1pNOr3c10HdkGONzKcshxkzgWChr8OXv0APAPlzbXSuzJrn63Dc27zTkSHb
4cuGgOxZ6b4ON84BTZDMdggpUZn+n8HXoSRj4tsa42yHCpB/on0cpkiwhPEV
ZjvEH76snXrRy0Ejpv/Q155sB/NrR3NNHnjA+TmcPxekT3aD8xlA4IeLg4kx
ENRnOwh/cjyf9tTJIWdPyWQJh2wH7xPstrNlHSH2A8Nzf62sRbqLg8N8KWAI
M0HDr8se7p8t5j8OpXDZO1zxTRKI+Jjl0OP1isWE0R7u/5TYO27MP+zg/JKt
or9Pv0PwC9Z03864YAcPXxgfFv4wPix+YHxY/MH4c44obChiyXY4fthpbeY/
Owf2xqnO3S3ZDqDgnhnoCE9PEeLbLzLwuTigpzcA32gwlw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQzRLGp7vJMdfhDAjwuDrA+D1er1hMLF0dDpxa6LpN
HcEvsOW6vlgl16EiYoXpWWcEv2Sr6O/TfQj+/X18c4yNPB1KMia+rXmf45B4
+LJ2qiKCz7p4khXjVw8H/bsqbI2cuXA+a+NU526eXAfxqVc4M14h+Dtvdf1N
nY/gi3xyPJ/m6w7hs+Q6XMyPZz9X6e6QsadkssSXHIcniQuvmax3d7jzsy5r
zx0EX+U2UGADgj/hbY29aVeOQwLIfZIIvs8JdtvZoW5wfg7nzwXpk10dLigB
DVgHlf/rArH/BoI/YyYQfEXwwy23nChjy3VY9sJD77+nq4NOu9jNc9y5Dmu6
b2cwpCP4MPXo8QEA7i+1XA==
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQrdMudvMcd67DCU2rSaf3uzrA+G3Lw08ZLUHwP20I
yJ4139Uh3HLLiTK2XIdI8e0XGepcHdInvq2x/5vjwOu/fkqqh6vDjJlA8DbH
YaNe3mJGGVeH80q3f9bdQvBZG6c6d19A8FXYgALLcxxyOH8uSNdG8MHyIW5w
/oN9fHOMD7k5LCmw5bq+Osdh562uv6n/3RyOe5t3Om7JcbiYH89+ztDdYYpz
d87z3TkOPV6vWEwS3R1MjIHgdI6Dq2op06wJ7g5/Vn685HsPwd9TMlmC5RuC
z75GJiqFOdehImKF6VlvqH72XIj7jN3h4ZFw+LJ2qiSCnwYCYgi+6pPmeWd/
uTmghy8AlKSY6g==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxllH1MjVEYwG+JZGppWKM/ZLW1RULkq3lanfdFWgg1a+qmmyudW7gSaza1
+SpEWW4orZSmrXyUsaTRrVz5NtHHfC9M2jUXqVvOed/33ucPZzt//N57z9l5
fs+Hd2LaOs0YlUrlwHYM245sB46v8drkpIMfdWu2F/cRsPFHddnLoAECh0MT
Pj1x1EHX9Cz1PAuBvCKdR44KudDTaaObldo5yT128fVhCqvbnUPO9jNe+ibq
2BAF9b3n/pp3BAaqWiOCzRR8P+aUPNxEoLM8PWRCN4UrAbpyBy8C8Z+ezOy+
j3yuZUbdzkZk6Xw9hczYSwsehiF/c20KNGQjH6yKMc2rIHDxLLuggULhr3Hx
ZxoJ3C6dNqeX3Wfgy1uA/P6s5QtMCpsFcJ199fzAYwqTf4Q+To4UwS/uxF1L
DwXiu9uxOF+EFgv78v1/Dle4UV/g6fQXfw/afGvlROavg68sEdI8cppNFgqQ
/b7tzC7R7qMmt1urikJ+mhbv/Ggu8mvu11WUffyhsF7vUzSqEiGB+7Iix3Hh
Ljo7v4hMdI+dpAOBv8cPufLzioDRtchvm9zOzT8lQmrfULV5hMr5rxXhp/VF
5pfvyBvcmKBO5GUsvUXMX6rL4IWt0SJID2qjkMzXQhG4jo1NFPJWfXUKqhZh
FtNbVYnnF11vz2gqRe4Z3J/SmIms5UKTFD99gp0lH0Zk6f93BMjjAWgo3Ow6
atXcEOR61iI7M0zajszT65dKZT/NAgQfYQXPWF8/ZehBqwCvHv2O/rBXyWe6
KNdzAeZXir8EuYKVc2ctss+4A6fDrlGYGFVbqFmDLNWvP7KUDxel3uowXp9u
JqSGggevx/MC8HCSmK863g8dRI7XQGHRSyMNSidyPR7HfhmuNj+L3Ics3ZeJ
rPI/NPW1Dlnq92QKKr4CCYxlz8vVK/21hMj536P40iIPx1HjyD5kqZ8MRPa3
Q4n3MpF9pSAzW+XpamS99mR/VozCuci2eWFj6T3TCMzpZQa3KfPGGm7Pl43b
IlhG85D58eXM108+74KJ3C9lSr1mENlvFfqQfN7C8wl8vrUjN5vKSMMAsm1+
zgg1b+kw4jy1zdd/bs9sDA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KH1EYUNRRmaMQ8At6ZrESVoOML77/lpZC3ZtB5Xb
P+uyYhB8Cf27KmyBCL7Nff/e6X1RcP4U5+6c580I/nr3h1UiZZj87Q5Nj47P
0ILz9bVWCl9Q0XIAmpYn1Izgw8yH8WH2w/j7Ty103RaN4MPcj85H99+jCPHt
FxXU4PzM/A+tJ6eowf0L48Psg/Fh7oHxYf6F8WH+Qed7gPyvjuAHgtyzSRXu
XxgfZj6MD7Mfxof5F8aHuR+dD/MfAP4CwzQ=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4p7peULNBnEOJVtFf5/2M3YI5dPdNFcewY9I
sb7vLxvnoPqked5ZKWOHNTJRKdbicQ7iU69wZhQZQdTzxzn8+Vb6YI6jkYM4
SxifLlecw9edt7r+qho52Nz3751+LxbOd39YJbLuOIIPVm+F4H/5e6XipV+s
Q7SC48fkHCMH3bsqbI21sQ7/QUDf2OGIwoaijImxDjNBoNLYQaD5wKmFrHEO
PifYbWermjrA/GOgtVL4whEEf8n9fXxzPpvB+cYgEGzhUCOyzv3hq1iHYpB/
7Swh7pmE4G/9DHSQJYIPdg8r1D38FnC+xlvefQac5nC+bWXECtNcM4fjZfvm
S6kj+GD3ayL4MPNhfB/zTscE31hIeM9C8M+AwB8EXwIU/kHmDvwRlltO2MU6
xIDCq8ccbj6Mf17p9s86JQRfQh/oQEUEX7b1deAOOWh4dpo7lAKdq68L5Uda
OHjwMGm3h0Hj56mFAzB21Aw7EPz3y495m59E8MHmf4T6hxfBh4U/jD8huERl
+ntThzdA21tPw9SbOoCS1/35UPs9TeDhmZ4GBNMM4XxwePgYOnwPfrx0tkwc
nI+engF8/Dts
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlHtMTXEcwG/XHbEU6UHdiFXWopxz7znCzDevVHrJlNf5JZXrVQ1hKQ01
k1ALFyXKmqQXemm6tbxSiWIeYYU2Jc2QHiP8zjn3nt/mt/3++Ox3fme/7+f7
mB4WvSpilEwmM8I7GG853r+vfWvzrUdgfeb5WI1cBQYeGYjtzJqogkLluvAF
tQg+bXMZ0NqpoKxhr+5SNeHaxpxlFbcIb6z2MpFjfnR3cdFWUxWETgiZV1aK
oP92e8rITxr29ThRxlkIEn/Nj2nppsDzfZxFcTQCbZpZHLudgpDwBR3+voSf
zHgzfJAmLNx3QODYdST7cTVhE/+S0xHutMQehz88PHeAhq6n+AdOCNbbe3zb
XEiD5euWwSAVgi2ReO1VwZ09GZMVfgh4jLRioPzHyPP9axGEWFe2yloY+BJY
NTV5N4K6BDv3LatZsEvuDaw6S1j5H084UteYU0RYscZ09s0aBM38msVCrO6S
jVsegrK5Q/XhNqzkI9X7s0Ldykj8yvy7x5OzhLt5v76M6KMAQbtt/CaaYURf
5YR9w7DwZsKLGK7a663+PUmEDynun6JeEu4vDdh+IZiFGE16X3ylPv/pLCSe
WXJ8h5bw0gosSEPYDKe3Afsbt9wxVt7OAF8uHZ4IZPy6zEAS1rGMReDdMGZh
ZjIL/Vhvz2hy30TuctRqmJPY/4Q2yvw64Z3mWOghTvRjxEgs+KhRSyx8f0MN
JbtwAEkc5HevcP2boxbrOYVwPsawNMIBOL296Zzop0wNY/iCz+BAmc05N9Wp
YeXcYx6hRfpzC1as505Oyq8Q/wDhTlzOnlNI/rvyMu/Z2yPwa03f8OcZI7ET
X78phIV8eOrrzRZJ8b4ThOjrMUr//iFO7IcmWoz3CwdXOnSmWZNosT5fcFK/
pPXFL2KKCQv/KyCc9fXqAx8tYaHfj3Kg4lcGBfzzSnM5GM/3Vz4l5j+fg1o+
PgUt8cy+8bo5zoSF/oqkRX8X8bkQLy36OkkY23ofF084YRvuSI2evQkb5oWB
hfdoKBgM+piXmcqJ88aVkvJlYEfKuFDZRljDNzz2Jcy7XErsl98c/OXXNFr0
a0zmjeDTFUn3hfnmQ1jp9s5h9HnChvm5u9zyV5OOhv/n6z9k72eu
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxF031Ik0EcB/C5JMFlyaI0NZw18a3Smtue5wnxt0lRWNgbpml16tYWhls1
A9MEk8q0mlGy3sjEP6ywGrSKCHTZi0tDjCQpiaIQIZAo1AKLutt2+x0cDx+O
e+7ue79LKrdtM8+RyWRhtBtol9PeltdyYKKWwD7WZnTAfW67Q+1q18Nopz0n
spKAR/+7zyQJcCE2vHD+VgIN4S+cqy0CfO96ma83E7B3t4xZbwjQn68/bXAQ
cLUuOKrLEEP2PTPe2T+E/jNT/fnaQQmKTWs/FewmsMkXkXN1XIImAxkfNqIP
W89P1qWgwzJOLX6vJDBR1vEu24buPbZUsIyIIdfPSvahJhEsdHruEgJRBfcu
mq0isOOMJqJFj+9ITwq6tz0u8+MKAmPxdWVr2tD+8w2jc49/6b8UL0FFdJHo
UROYx+YLEtC/tccl8rwksCkbvQNpQd+WgK5Ot0Ag9vqetEG3BE8cNFEjmm2v
cwP6H2slBGz+fNE8T24nu69cMTB/B4HI9cnV8m94X6mTUT1ZrwR4rnIfsm4k
oGDjzQJU0PjP5hGYevyh+e8JIfA/DYHimEdvZPUCsOtYlknAwM5bK4BCTgNe
SeAyazXor+w+9qKfnuzaOWAUIKI7YZcpEy2wvDXoM64qZSOg+f65324ujy4q
I1CqMvyoeK0Pmdcr90/3lsorv7SgntvQlldAwL2qqjOsWwvTqaXOPgOar8/t
X09FICv91sLhES14BzrWPYwhkMDyBx3QaiXjKrT//7ReWlneNnS2hrb7aC+r
xyldIO+k4Phyfageudn1FyrR7KNRBOtNhnY8WDQ7eFcXck5N0U3tpDbw/pKD
41VaULDyMqJLnH3TqSY0f9/+ekzH987z/A+0bKlW
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{115.46199999999997`, 
     12.185899999999998`}, {132.69899999999998`, 12.185899999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJXIGYCYvY1MlEpi+MdZoJAJIcDjP/ANd5x1kQBh3bH
hKcXsuIdDnbvazJhFnE4orChKEMx3sHEGAguizhMce7OeZ4c7yBSOankLIuY
g2zr68AdffEOwW8vf5zRKAnnx6hGyJyzkYXzweY3Kjj8BwH/eIc7mrJr/j9W
dLhx7nvwY1YEH2zfzjg432Xb579XGuIcwjnF2o3zFeD8EJB9ibJwvvuao8sZ
KqQdeqbnCTXPiHNoV2BXPSMi7VD+Us2QYwkafwuCn5oGBMfiHM6AAYIPcz+M
fwAUHofl4Ppldy3Yl5onDwmXxQi+zX3/3unzEPwWoPfl5iL44PCdBTUvWd4B
GPrW97fHQcInUNHB/WGVyLr/CP4dFbbGqczxcD7YmTIIvgcPk3a7X7zD3vya
tzO/KsD5MPfD+GB3Bss4+CYJRFj6xDukgPy1TNJhT8lkCRazeAc3UPjNEHc4
XrZvvpR8vMNaIR2+9DpRiPtZYelF1GHFx0u+SR+g4eUj6rAVGPwVN+McdgRb
RfxXF3UQWQf0wRlo+MmIQuLzZJxDX0S3P6MAgg+Ov4UicD5Ev4hDBDA4/M8i
+LG7PHmYbiP4E97W2Jv+Q/BBydfaPh7OtzeN2+UZE+8gDwrvcwJwPtj+Ag44
/9LvY9fn3fxuv10OmEA14h3mn5i8JFvto30HKH6YEPy1oAi5FwfnN0wFZoD5
cQ6s+r+4LvV8tX+//Ji3eWecg/8Tz0umwowONSALFsZBwmsmAzx+wfLBTHD+
klvLHxseZoXzNT6pvJzVyeGg0y5289zyOEh8FXM53AUmp7xJCD44/9Qj+OD4
zIlzsCtxrD0twwnnb/PaYDGnkhXOz5maUGjx+af9lQpgAt4AVL92kb3J5+f2
sPiF8Z8snX1EIQHBh5UPMhvF5jMl/LVHLz8AefXWkA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYCYv27KmyNikkOM0EgUsMBxl+v+qR53lkNh/hd
njxM0gh+ZIr1fX9RBN9iy4myfasTMfipaSCgD+dv0MtbzLgHwb8tXZNoJGrg
sH++lP7dJQg+2B1zMfniU69wZhzSh/Nh5sP4MPuz95RMljBB8KfnCTUf0EPw
FxfYcl1Xx+T/B4F4BH/GBP4qs9fqDkDTWML0EHyY+TA+zH50vjEIBCvC+eWH
t7nO/KsA54dzirUb9ys49IIcuATBh4UPOp8/NuC+0XcEH2Y+jA+zHxY/ML7O
prnvl0sh+LD4RefD4h8ARizisw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4js/67L2+CQ7nAEBH0MHGN/7BLvt7KWGDhad
jglPHRB8FbbGqc7yCL66IccaGblkhy3mPw6lnELwefzXT0m1MILzweq/WsD5
G/XyFjPaWML5xVtFf5+2s3QIt9xyokwMwY9Msb7vz5vsEK3g+DH5jYXDhLc1
9qa/khymTeCvMqu2cOgAOu/CJUy++NQrnBlKFg6hfLqb5t5G8JfOPqKw4R2C
bwG0bh9zssPyFx56/wsRfJj7YXyY/4Cu6Z3OhPC/Rkz/oa8PkuB8bibtdrGr
mHxY+LKvkYlKuZ/kcLBtefipIEOH3ul5Qs0syXA+WL0ggv8VZIEsgh8BCh8n
BB89/gAQScEY
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{149.509, 12.185899999999998`}, {
     155.36199999999997`, 12.185899999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4uPe5p2OEckOhctLNvzj53DQaRe7ec4fib9p
7vvlfskOfRHd/owFbA6hfLqb5nonO7yofZx9XocRot492eEMCPj8t+dh0m4X
c0128H3iecl08l97oO5j3voI/uICW67rygg+N0j93SQ4/2dd1p6S50kO0aoR
Muf+MDhMzxNqPvAvyWEmCEiyOyQLRFhu4Uh2SAMDTocOx4SnF5ySHQ5272sy
SRZ2gPmHAQQeiML5b9pyu41mS8H5YPfyKDgAXbO4wDTZ4Y6m7Jr/jxUdwO7h
RPBvgxx0JwnOB7vnUBJUvzycf9813nHWRyk4P/jt5Y8zGiUckq3v+/deRuKD
3H8FwYeZD+MvnX1EYcOzJAf3NUeXM1hIwvn/QWC/FJz/Zd/HreliMg7sa2Si
Uu4nOawV0uFL/ycDNx/GT5/4tsb+IoLfA3LgBQS//9BXjZjzSQ4GxkDwWcYB
5Nzp12DhreCgwtY41fl1kkO3jeeuNCNFh+w9JZMlWJLh/O/Bj5fOVkHwweZb
JDuEgPzDKA/nw8Ifxq+8/+OWcbeYA9D2/kOqyRD/Mwo78AOT13v+ZIdUUPQ+
44eH5yywg77Yw/jg8Pj/3v7Pyo+XfIHpE8ZHT88A3qxSYw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4j0lkyVYjFIc0tNAQMkBxndfc3Q5g4Syw4pj
3uadkgi+Rkz/oa8imPwZE/irzLRV4PxI8e0XGeoMHXTaxW6eu5/sEK3g+DE5
BsFffH8f3xxmQ4d8oeYDp34i+BadjglP/yQ7nDzstDbznQGcz+u/fkpqBIIP
sw/Gh7mnwJbr+uIfCD7MPnQ+zL8XlG7/rHuV7NBt47krrUjJIWPi2xr7vwj+
nZ91WXs4UuD8KxUv1QxFEPy575cf81ZH8NHDEwA8m5SA
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}}}, {{{167.284, 11.7563}, {167.284, 13.298399999999999`}, {
      166.11399999999998`, 14.529699999999998`}, {164.72799999999998`, 
      14.529699999999998`}, {163.29399999999998`, 14.529699999999998`}, {
      162.15800000000002`, 13.262500000000001`}, {162.15800000000002`, 
      11.7563}, {162.15800000000002`, 10.2281}, {163.35299999999998`, 
      9.081249999999999}, {164.716, 9.081249999999999}, {166.125, 
      9.081249999999999}, {167.284, 10.2516}, {167.284, 
      11.7563}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/fGSb5LAmRSHmk8bArJ3qTvA+AZaK4UvPFGD8xNC
gtQXZKo6qBlyrJE5BOV7qjgAeVEp21Mc7mjKrvmvrOyQJ9R84NTSFAcGENig
5DD3/fJj3tMR/L9XKl6qdSL4U527c56Xpzg8cI13nCWo7LBvvpT+3ZwUhxdZ
2t+m26o4XFC6/bMuKcVBal6c5ukAVYcFQGkVIH/GTCDYqQbnw9wP4/98+/qA
5WINOD8l9o4bs4SWw56SyRIseSkO0yfwV5lpazskCURYbqlIcQi4JV2TaKTj
YHBXha0R6L6M/A+tJ6foOHwBOXgagg/zH4yf8BTowq0pDqlpQKCm4wDynuEB
qH0W2vDwO3HYaW2mnBacP7m9NeryHA0H9PAHAAqnqoo=
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxF1A9IU0EcB/ClI7NMQs3GcrH/m+6pmUpaCT+LmatMKdAhWmFeWIpaLVMq
I02WpJhN0anDUmsIC0zKf4SZf9LMQmvQH4tFEGYl/gkhS6t7b9u7gzE+7927
u/e93z1RWs4h5MLhcGLwj/5nmgXBxYW2hEw+BU43NEm6l/UUUO2mWfNdBGGh
dAuE5PSdtngj8aCw7UxGCfG4eHKpMA/BcE9X+epcClas+dPy0wg2lu37xvWh
oCxr6k8rQvBJu6lz4hYFEH6kR6N19J+jYFGZUtGvIb7Rj68oiLmJnoHt6x1O
ULHuhKLPw/n+rA36kuTXfkoYyett5G92vN8OBdDTz29B8Hvme1+kqwJ0Bh43
kY8g9vElQYRZDkuFpx7pvBEcGHGLql+UsWbuuxH7FNzUvWiRAB49+KMQwQXb
r/eh6yRQved61pQEwfMx3H6IYbl1/lWcF4JzAx1qo0kMaRu0kQ84+P3VR6Pr
nohYM/EVC1nXGnHrFkBu1No3zVIE/5jGh77R2+qOw8Rz5qf7t18hftuMnzAj
UCxIp+tKBayT3H31oRVC1nstQ2aOUgRb11j8klsc66kUAz1dbjkCLd0/XgL0
dD8LEJyn1z8jgWvRx76MnyBm7quJd9niy2uCiPFumGZVxFU4bk8ZAl611T0j
TWpfvwiBwPw1NqhRCtlexX2jAgTb6Dy8ZayZ+qkivh+U3bxqWQZ4Nww8nP/B
icqUv8flbP72/OSAVyueDCf9mXpUE1vjcOIa4gC977uXmcTO+m6n3aBgzezX
WX/W6akfYlx5AfZ6KnLUN0cFyhAcMD4PwQGt3uODKqDjWrmK4CFdr10UpPZo
PFxqiCNKccC1xLgaRvLqiJn9aiBm3s+EgC63MQsFYfg4eeD+GTlzJc+qKMCn
aVGJx7vMHaoISSJ2nkenhwd23zvZq7LvV73jeZ3KPl4TMZPfHWLn94I5/wZi
5/fkP4vO4NU=
      "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQHbfLk4cpO9Vhu0PTo+MVmg4w/vQJ/FVm3Aj+8V07
etkENBx6p+cJNaekOswAyWerO2RMfFtjHwvkzwSCnWoOQNkDpwJTHaa0t0Zd
rlFz+KoR03/IE8HP2lMyWUIDk58GAs804HxjECjWhPOfRIhvv/gAwd+gl7eY
8Y6Wg819/97peqkOD0DyDdoOCU8vKN02TXUIuCVdk2ik43DFN0kgwhHq/gIo
3xPBR/EfEr+F13/9FFYtB/TwAQDF/Hss
      "], {{172.63400000000001`, 8.268749999999999}, {172.63400000000001`, 
      7.562499999999997}, {171.72699999999998`, 7.001560000000001}, {170.628, 
      7.001560000000001}, {169.48000000000002`, 7.001560000000001}, {
      168.60799999999998`, 7.587499999999998}, {168.60799999999998`, 
      8.268749999999999}, {168.60799999999998`, 8.36406}, {
      168.63099999999997`, 8.82969}, {169.086, 9.14063}, {169.34799999999998`,
       9.307809999999998}, {169.45600000000002`, 9.307809999999998}, {
      170.29200000000003`, 9.307809999999998}, {171.284, 9.307809999999998}, {
      172.63400000000001`, 9.307809999999998}, {172.63400000000001`, 
      8.268749999999999}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYCYp1Nc98vN0pz6Ivo9mc0kHSA8dsU2FXPhCD4
Z88AQY6kQ0z/oa8aOmkOMaoRMudspBxOLXTd9pk1zaEHpF9A3qFnep5Q84dU
hxkzgaBSGc4HcWdGasD5U9pboy7/0XG4oHT7Zx1TmoN9ZcQK01oDB0btdrGb
emkOX3fe6vr71BBu/59vpQ/mMBrB+Z83BGTPYkfwpefFaZ4WQPCNQUDZyOHO
z7qsPQZpDupvefcZaBo5mIDE9RF8ruuLC2y1EPwvf69UvORKc7AFucfXEOLf
H6kO3V6vWEwUDRwKbIE6nqQ6bHVoenT8hq7DEpDA7VSHLeY/DqV4acP5MP/C
+ODwsFRz+LD8mLf5w1SHB67xjrMSlR14mIAe/prq0GnjuSvtkoLDue/Bj5dy
A93zSeXlrJfSDnG7PIFK0hzkdy3Yl3pOAu5+GB/mPxgf5v80EHiG4MPiFwBS
o9i9
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYseEpxeUHqc5pKeBgJIDjO++5uhyBgllh7nv
lx/zvo7g9+Q8/71yK4LfOz1PqHlLmsMD13jHWYkI/oss7W/TbVXg/I16eYsZ
7xjA+eJTr3BmKBnC+belaxKNVA0d9s2X0r+7BsE/cGqh67bFaQ4H25aHn7pk
4PAj+PHS2RPSHP58K30wJ9HA4QPQeeaZmPz631YF5zgMHPaUTJZgKULweZi0
28VaEfwFQOtUZqU58Pqvn5IageDD3A/jw/wHdM3nvzMQ/p9w6KtGTDmCX5Qx
8W1NNiYfFr5A3x44VZrm0G3juSutSMnhy98rFS9nIfhg9csR/Jh+oAVbEHxw
+NxA8NHjDwDfs83Z
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{194.992, 12.187499999999998`}, {194.992, 
     12.426599999999999`}, {194.76599999999996`, 12.426599999999999`}, {
     194.59799999999998`, 12.426599999999999`}, {188.086, 
     12.426599999999999`}, {187.91899999999998`, 12.426599999999999`}, {
     187.692, 12.426599999999999`}, {187.692, 12.187499999999998`}, {187.692, 
     11.9484}, {187.91899999999998`, 11.9484}, {188.086, 11.9484}, {
     194.59799999999998`, 11.9484}, {194.76599999999996`, 11.9484}, {194.992, 
     11.9484}, {194.992, 12.187499999999998`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYp1Nc98vr8t02GL+41BKlprDxLc19qZlCP5k
CZYwvtJMB4mpVzgzmNQcdpcARYoyHf5+K30wZ6MKRH1epsOJXTt62QJUHIoy
gCLZmQ47HJoeHZdQcWAO49PdFIrgc11fXGDrheCD1TMj+PFPLyjd5s10aOH1
Xz9lqYrD3ysVL9VUMx3OgICOmsOJsn3zpfQzHRhA4ICaw/vlx7zNMzMdUmLv
uDFLaDnA/KOvKP8lJ0wbzhfp8XrFskUXzp8JApYGDkDXcF2PznS4LV2TaKRq
CHGPPoLvmAB0EDOCD3bPywyIe97ow/myy1946N3XhfPd99fKWizXcTi10HXb
558IPtj9vxF8mPkwPjeTdrsY0P/i4PDWhfNT04DgGIL/BxT+hXoOeULNB06x
QsPrqR7cfBj/3Pfgx0u/I/ifQQ78huB/1YjpP/Q1w+E/CNzXcwA59+8fKN/e
wKE75/nvlYKZDtEKjh+Tzxg4AGPnZ50Wgh+3y5OHyRvBB5sfB/XPc304Hxb+
MP6b4q2iv1drO0QDbdfwganXdAAlrzCzTIj98Rrw8JwBiq+fSnB+Oig80pQc
kgQiLLeUZML56OkZAHFQUzg=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx11H0slVEcB3BvS+mSaiuz9HJf8NznRooh5Ce7VFJNDVuivJ+TudZobZne
V7JmlpLS663pRTG7SRfVKEqNNGSjJWmojPKWUJ3nee59zl+d7fzxubvP85zz
/f3OWRGrCUswNzExMSUzgkwzMuN9Pm49E4xhZjyju6hFAUbX6yvPzBpWQHX6
WTuLIAxFN2SPpy0d4WnjdXVFIHVDiGd2AFAXBOak9Plj2L0jzOnagAIKUhcc
e7YOQyUc7WmoVIC8czILu2O4v0Blk3RFBpL32jS/pRjWcEMrhXw7i3Aba+rm
ie2fb/1FovnnfyHI8d2oT1wvE92P2fECP7no0Ja8qD91cuhoIi+YRHDcemtp
vkIBw+9CY21NMFwoJOOxIzxfXrYv2drgSQZg95e30oUYDk2tTWtKZiEqt3bM
eTmGzS8t/S5lqGDCmfzi9n8PFdeHePpRJ+UNZvqrMSQkkuGogpvqipEZLwwe
vjVh501VYh69e663u2tY0Zk/y7bt/a0UzeebpBTy8MFw2OJFrpunUsgrgDqX
C3wzteWRc4E5OwzraaNubgv/7nqQFa1zSdWaZqrgqr3rB/l6DA18/VXg5Da7
ZMlq6lMBJCB7ag0pbyPJrzty8aOWwyxw7RJuheENNyQscHFkm5J+2NUVZN6h
ghgSb+cAEp9P6Zu686OHet7K8stDVdRFXKDFSMinmRHN5xFMzf9/FQNPuQ3c
RmB/JZp5bcsI/XyP2pew4AE1V96oUgQhXD4eDKRwDV+GwHzO6WVxWxiQmLEn
F9UgIb8xVujndiTWl9//J2quna1GqCO8dS/3jyNI1gyfeJXOirY71zonuUcp
mq/HTqXQb6N0vxE2XCBI6MfbzsL6SV6/B789845TCPvtQtDFOJT8HZEJ/dhC
zwup5qwjNdT8+6qo3aP1GyXl1Px5v2vwiBS8yPKePEKQUVehLnSQCfXXI6jW
ZA4WtlE7FPdvcFkmF13ID7mQ30PjfuVCXvepSVrvtTepiy+RE3nR4Fhq431h
NL+ey1KIt4301pUYvsdIxXoZPZ2Fq9ObqYu4A0/y6lbHBFycLxPOSy8y9Ktc
yPcrzYPPc4Y+n8/db3Ox6NGZ1gMDq6mN96fO81dt/CZ6nxrv1389pWSY
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4glva+xNL2U5zASBSA0HGH+7+Y9DKVpaDulp
QHAuy+FBhPj2iwq6Dktct33+uyPLwX1/razFc32HcMstJ8oWZTmIT73CmZFk
6HCibN98qeYsB/W3vPsMNI0cGLTbxW7WIfhXfJMEImoR/B91WXtKqrMcjEFA
GcGXnheneVoAwf+8ISB7FjuC/+db6YM5jEYOZxYCHdSY5fA8S/vb9LOGDjH9
h75qrMhy4PVfPyV1hoHDDJC/9mY5/AcBe11UfrwGnH8GBPYoO4Tz6W6auzrL
Ya2QDl96nbyDClvjVOf6LIc3bbndRrcl4fafBanPQfDbFNhVz4Qg+H0R3f6M
Bgg+KBjTnknA/S+/a8G+1HMS8PCB8ZcU2HJdb0bwTUDhsjjLYQ3IPXYyEP9u
zXLgjw24b1Su4GDPdX1xwUko/7kSPP4uXA17o1+t6oAevwD/keJg
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.45072933719790514`],
  ImageSize->{242.06597260273972`, 60.66068244084682},
  PlotRange->{{0., 242.07}, {0., 60.660000000000004`}}]], "Output",
 CellChangeTimes->{3.9386656292834845`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"bc462831-15f4-eb45-a9ad-a2cb9a1c2673"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "4"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"F1", "=", 
    RowBox[{
     RowBox[{"Int", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["E", 
          RowBox[{"2", "x"}]], "-", "1"}], 
        RowBox[{
         SuperscriptBox["E", 
          RowBox[{"2", "x"}]], "+", "1"}]], ",", "x"}], "]"}], "//", 
     "Steps"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a1", "=", 
     RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"F1", "/.", " ", 
      RowBox[{"x", "->", 
       RowBox[{"b1", "-", "F1"}]}]}], "/.", " ", 
     RowBox[{"x", "->", "a1"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["E", 
         RowBox[{"2", "x"}]], "-", "1"}], 
       RowBox[{
        SuperscriptBox["E", 
         RowBox[{"2", "x"}]], "+", "1"}]], ",", "x"}], "]"}], "//", 
    "MaTeX"}]}]}]], "Input",
 CellChangeTimes->{{3.938277913383983*^9, 3.938277938034464*^9}, {
   3.9382780628008766`*^9, 3.938278160184278*^9}, {3.93827840141921*^9, 
   3.938278402075105*^9}, {3.938278433614765*^9, 3.938278434130108*^9}, {
   3.938278600874878*^9, 3.9382786552904873`*^9}, {3.938278719119283*^9, 
   3.938278729443508*^9}, {3.9382788075793304`*^9, 3.9382788801424103`*^9}, {
   3.938278914095514*^9, 3.938278976941347*^9}, {3.938279031092222*^9, 
   3.9382790838639927`*^9}, {3.938279232383959*^9, 3.938279352573145*^9}, {
   3.9382794086070633`*^9, 3.938279464782219*^9}, {3.9382795144960823`*^9, 
   3.9382796923529434`*^9}, {3.9382797510293655`*^9, 3.938279821423469*^9}, {
   3.938279859205147*^9, 3.938279951464407*^9}, {3.938280078351612*^9, 
   3.938280098281212*^9}, 3.938665268635225*^9, {3.93866530783234*^9, 
   3.9386653382939377`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"1ad251e7-0ac7-ab4f-b034-142e3383ad4d"],

Cell[BoxData[
 RowBox[{"Steps", "[", 
  RowBox[{"Int", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]]}], 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]]}]], ",", "x"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.938278656352741*^9, 3.93827866711582*^9}, 
   3.938278731739317*^9, 3.938278882188137*^9, 3.938278939599201*^9, 
   3.938278970288183*^9, 3.938279040290451*^9, {3.938279071728733*^9, 
   3.938279084738359*^9}, {3.93827926202336*^9, 3.938279285541523*^9}, 
   3.938279465453779*^9, {3.938279814925821*^9, 3.9382798525515614`*^9}, 
   3.938279935144325*^9, 3.938279980374821*^9, {3.93828008334963*^9, 
   3.9382800988278694`*^9}, 3.9382803846521187`*^9, 3.9386653747229*^9, 
   3.9457222262790356`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e5a9272b-1830-0b4e-860e-b7c8f18614b8"],

Cell[BoxData[
 RowBox[{"Steps", "[", 
  RowBox[{"Int", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "1.`"}], "+", 
      SuperscriptBox["2.718281828459045`", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"1.`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", 
           RowBox[{"Steps", "[", 
            RowBox[{"Int", "[", 
             RowBox[{
              RowBox[{"-", "0.7615941559557647`"}], ",", 
              RowBox[{"-", "1.`"}]}], "]"}], "]"}]}]}], ")"}]}]]}], 
     RowBox[{"1.`", "\[VeryThinSpace]", "+", 
      SuperscriptBox["2.718281828459045`", 
       RowBox[{"2.`", " ", 
        RowBox[{"(", 
         RowBox[{"1.`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", 
           RowBox[{"Steps", "[", 
            RowBox[{"Int", "[", 
             RowBox[{
              RowBox[{"-", "0.7615941559557647`"}], ",", 
              RowBox[{"-", "1.`"}]}], "]"}], "]"}]}]}], ")"}]}]]}]], ",", 
    RowBox[{"1.`", "\[VeryThinSpace]", "-", 
     RowBox[{"1.`", " ", 
      RowBox[{"Steps", "[", 
       RowBox[{"Int", "[", 
        RowBox[{
         RowBox[{"-", "0.7615941559557647`"}], ",", 
         RowBox[{"-", "1.`"}]}], "]"}], "]"}]}]}]}], "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.938278656352741*^9, 3.93827866711582*^9}, 
   3.938278731739317*^9, 3.938278882188137*^9, 3.938278939599201*^9, 
   3.938278970288183*^9, 3.938279040290451*^9, {3.938279071728733*^9, 
   3.938279084738359*^9}, {3.93827926202336*^9, 3.938279285541523*^9}, 
   3.938279465453779*^9, {3.938279814925821*^9, 3.9382798525515614`*^9}, 
   3.938279935144325*^9, 3.938279980374821*^9, {3.93828008334963*^9, 
   3.9382800988278694`*^9}, 3.9382803846521187`*^9, 3.9386653747229*^9, 
   3.945722226286167*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"9f2cebf1-665f-774f-a851-07300e66000a"],

Cell[BoxData[
 RowBox[{"MaTeX", "[", 
  RowBox[{"IntWithStepsOfTeXForm", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]]}], 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]]}]], ",", "x"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.938278656352741*^9, 3.93827866711582*^9}, 
   3.938278731739317*^9, 3.938278882188137*^9, 3.938278939599201*^9, 
   3.938278970288183*^9, 3.938279040290451*^9, {3.938279071728733*^9, 
   3.938279084738359*^9}, {3.93827926202336*^9, 3.938279285541523*^9}, 
   3.938279465453779*^9, {3.938279814925821*^9, 3.9382798525515614`*^9}, 
   3.938279935144325*^9, 3.938279980374821*^9, {3.93828008334963*^9, 
   3.9382800988278694`*^9}, 3.9382803846521187`*^9, 3.9386653747229*^9, 
   3.9457222262952137`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"4488a13e-212f-3d49-810a-84dc2ecf14bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\:5411\:91cf\:53ef\:89c6\:5316", " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "a"}], "}"}], 
          "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"First", " ", "vector", " ", "a"}], "*)"}], 
         "\[IndentingNewLine]", "Red", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "b"}], "}"}], 
          "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Second", " ", "vector", " ", "b"}], "*)"}], 
         "\[IndentingNewLine]", "Green", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"Cross", "[", 
             RowBox[{"a", ",", "b"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Cross", " ", "product"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<a\>\"", ",", "Blue", ",", "Bold", ",", "12"}], "]"}],
            ",", 
           RowBox[{"a", "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "for", " ", "a"}], "*)"}], 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<b\>\"", ",", "Red", ",", "Bold", ",", "12"}], "]"}], 
           ",", 
           RowBox[{"b", "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "for", " ", "b"}], "*)"}], 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<a x b\>\"", ",", "Green", ",", "Bold", ",", "12"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Cross", "[", 
             RowBox[{"a", ",", "b"}], "]"}], "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}]}], "]"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{"Label", " ", "for", " ", "cross", " ", "product"}], "*)"}], 
        "}"}], ",", 
       RowBox[{"Boxed", "->", "False"}], ",", 
       RowBox[{"Axes", "->", "True"}], ",", 
       RowBox[{"AxesOrigin", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"theta", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "Control", " ", "for", " ", "rotating", " ", "vector", " ", "b"}], 
      "*)"}], 
     RowBox[{"(*", 
      RowBox[{"Define", " ", "the", " ", "vectors"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Initialization", ":>", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], ";", 
        RowBox[{"b", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
           RowBox[{"3", " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], ",", "1"}], "}"}]}]}], 
       ")"}]}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.937101544107807*^9, {3.937101637412787*^9, 3.93710170119261*^9}, {
   3.939670328658922*^9, 3.9396703372211447`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"83d302dd-a69b-ec41-911d-8dd5173dd5fd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`theta$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`theta$$], 0}, 0, 2 Pi, ControlType -> Manipulator}}, 
    Typeset`size$$ = {288., {142., 146.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`theta$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics3D[{Blue, 
         Arrow[{{0, 0, 0}, $CellContext`a}], Red, 
         Arrow[{{0, 0, 0}, $CellContext`b}], Green, 
         Arrow[{{0, 0, 0}, 
           Cross[$CellContext`a, $CellContext`b]}], 
         Text[
          Style["a", Blue, Bold, 12], $CellContext`a + {0.5, 0.5, 0}], 
         Text[
          Style["b", Red, Bold, 12], $CellContext`b + {0.5, 0.5, 0}], 
         Text[
          Style["a x b", Green, Bold, 12], 
          Cross[$CellContext`a, $CellContext`b] + {0.5, 0.5, 0}]}, Boxed -> 
        False, Axes -> True, AxesOrigin -> {0, 0, 0}], 
      "Specifications" :> {{{$CellContext`theta$$, 0}, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{327., {177.7072265414754, 182.2927734585246}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`a = {1, 2, 1}; $CellContext`b = {
        3 Cos[$CellContext`theta$$], 3 Sin[$CellContext`theta$$], 1}); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9371015494346886`*^9, 3.937101560635155*^9}, 
   3.9410780888320274`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"03eb30ac-6639-5e46-ac54-3d79eeb18336"]
}, Open  ]],

Cell[CellGroupData[{

Cell["inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}", "WolframAlphaLong",
 CellChangeTimes->{{3.935987531293798*^9, 3.9359875634786263`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"82a54a90-274c-534a-9e18-c3bb9beb84f6"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"Result__Step-by-step solution"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Eigen", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Inverse[{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               TemplateBox[{
                 TemplateBox[{
                   GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2"}, {"2", "3", 
                    RowBox[{"-", "1"}]}, {"1", "3", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                  DisplayFunction -> (
                   RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                  InterpretationFunction -> (#& )]}, "Inverse", SyntaxForm -> 
                SuperscriptBox], HoldForm], 
              TemplateBox[{10}, "Spacer1"], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"matrix inverse\"", "\[NoBreak]", 
                 "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Eigen", "id" -> "Result", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "2", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Inverse[{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              StyleBox[
               FractionBox["1", "30"], ScriptLevel -> 1], 
              TemplateBox[{
                GridBox[{{"6", "8", 
                   RowBox[{"-", "4"}]}, {
                   RowBox[{"-", "3"}], "1", "7"}, {"3", 
                   RowBox[{"-", "11"}], "13"}}, RowSpacings -> 1, 
                 ColumnSpacings -> 1, RowAlignments -> Baseline, 
                 ColumnAlignments -> Center]}, "Matrix", 
               DisplayFunction -> (
                RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
               InterpretationFunction -> (#& )]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Find the inverse", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2"}, {"2", "3", 
                    RowBox[{"-", "1"}]}, {"1", "3", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "Inverse", SyntaxForm -> 
                    SuperscriptBox], HoldForm], AutoMultiplicationSymbol -> 
                    True], HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox[
                    "To find the inverse, augment the given matrix with the \
identity matrix and perform Gaussian elimination", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2", "1", "0", "0"}, {"2", "3", 
                    RowBox[{"-", "1"}], "0", "1", "0"}, {
                    "1", "3", "1", "0", "0", "1"}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Swap row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" with row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"1", "3", "1", "0", "0", "1"}, {
                    StyleBox["2", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "1"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"3", 
                    RowBox[{"-", "2"}], "2", "1", "0", "0"}}, AutoDelete -> 
                    False, GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["1", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "3"}], "0", "1", 
                    RowBox[{"-", "2"}]}, {
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "2"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["2", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["1", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "2"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "11"}], 
                    RowBox[{"-", "1"}], "1", "0", 
                    RowBox[{"-", "3"}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Swap row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" with row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "11"}], 
                    RowBox[{"-", "1"}], "1", "0", 
                    RowBox[{"-", "3"}]}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "3"}], "0", "1", 
                    RowBox[{"-", "2"}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox["3", "11"], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["2", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "11"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "1"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", "0", 
                    RowBox[{"-", 
                    FractionBox["30", "11"]}], 
                    RowBox[{"-", 
                    FractionBox["3", "11"]}], "1", 
                    RowBox[{"-", 
                    FractionBox["13", "11"]}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Multiply row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" by ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "11"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "1"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", "0", "1", 
                    FractionBox["1", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    FractionBox["13", "30"]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Add row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" to row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "11"}], "0", 
                    FractionBox["11", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    RowBox[{"-", 
                    FractionBox["77", "30"]}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"1", "3", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["11", "30"], 
                    FractionBox["17", "30"]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "11"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["11", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["77", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Divide row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" by ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", "11"}], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["11", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["17", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", "1", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["1", "30"], 
                    FractionBox["7", "30"]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["2", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"1", "0", "0", 
                    FractionBox["1", "5"], 
                    FractionBox["4", "15"], 
                    RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["7", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Read off the inverse", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2"}, {"2", "3", 
                    RowBox[{"-", "1"}]}, {"1", "3", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "Inverse", SyntaxForm -> 
                    SuperscriptBox], HoldForm], AutoMultiplicationSymbol -> 
                    True], "\[LongEqual]", 
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{
                    FractionBox["1", "5"], 
                    FractionBox["4", "15"], 
                    RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["1", "30"], 
                    FractionBox["7", "30"]}, {
                    FractionBox["1", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    FractionBox["13", "30"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowDefault"]}], 
                    HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Simplify by factoring out an appropriate term", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    FractionBox["1", "30"], ScriptLevel -> 1], 
                    TemplateBox[{
                    GridBox[{{"6", "8", 
                    RowBox[{"-", "4"}]}, {
                    RowBox[{"-", "3"}], "1", "7"}, {"3", 
                    RowBox[{"-", "11"}], "13"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]], Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Result__Approximate form"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Use Gaussian elimination", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Use Gaussian elimination", "input" -> 
           "Result__Use Gaussian elimination"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Use the inverse formula", "input" -> 
           "Result__Use the inverse formula"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Result__Hide steps"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Eigen", "id" -> 
     "MatrixExpandedForm", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Inverse[{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               GridBox[{{
                  FractionBox["1", "5"], 
                  FractionBox["4", "15"], 
                  RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                  RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                  FractionBox["1", "30"], 
                  FractionBox["7", "30"]}, {
                  FractionBox["1", "10"], 
                  RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                  FractionBox["13", "30"]}}, RowSpacings -> 1, ColumnSpacings -> 
                1, RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
              "Matrix", 
              DisplayFunction -> (
               RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
              InterpretationFunction -> (#& )], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Dimensions", "scanner" -> "List", "id" -> "Dimensions",
      "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Dimensions[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"3", 
              StyleBox["\" (rows)\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TemplateBox[{"\" \[Times] \"", "3"}, "RowDefault"], 
              StyleBox["\" (columns)\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Dimensions__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Matrix plot", "scanner" -> "List", "id" -> 
     "MatrixPlot", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "MatrixPlot[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[
             
             RasterBox[{{{0.9056080753011289, 0.7998817818924338, 
              0.4892363007846362}, {0.23579080498281568`, 0.5054377169002706, 
              0.846443207203114}, {1., 0.4312504768444343, 0.}}, {{
              0.4983206016038352, 0.7268541122319858, 0.8394707240410165}, {
              0.8788531149915214, 0.8322057812973229, 0.5816337311710366}, {
              0.8693821769296596, 0.5987989690697999, 0.0855572645874716}}, {{
              0.8894894388332022, 0.6867291713837378, 0.25847740178673506`}, {
              0.8891581604529074, 0.5324349533651507, 
              0.0055184931579292775`}, {0.4012281092515242, 0.664437096582071,
               0.8010793975567913}}}, {{0, 0}, {3, 3}}, {0, 1}], AxesStyle -> 
             Directive[
               AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True,
              FrameLabel -> {None, None}, FrameStyle -> Directive[
               AbsoluteThickness[0.2]], FrameTicks -> {{{{2.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {0.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}, {{2.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {0.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}}, {{{0.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {2.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}, {{0.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {2.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}}}, GridLinesStyle -> 
             Automatic, ImageSize -> 75, 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
             TicksStyle -> {}, TicksStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1]], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Transpose", "scanner" -> "List", "id" -> 
     "MatrixTranspose", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Transpose[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               GridBox[{{
                  FractionBox["1", "5"], 
                  RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                  FractionBox["1", "10"]}, {
                  FractionBox["4", "15"], 
                  FractionBox["1", "30"], 
                  RowBox[{"-", 
                    FractionBox["11", "30"]}]}, {
                  RowBox[{"-", 
                    FractionBox["2", "15"]}], 
                  FractionBox["7", "30"], 
                  FractionBox["13", "30"]}}, RowSpacings -> 1, ColumnSpacings -> 
                1, RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
              "Matrix", 
              DisplayFunction -> (
               RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
              InterpretationFunction -> (#& )], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate forms", "input" -> 
         "MatrixTranspose__Approximate forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "MatrixTranspose__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod7$$ = 
   XMLElement[
   "pod", {"title" -> "Trace", "scanner" -> "List", "id" -> "Trace", 
     "position" -> "700", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Tr[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["2", "3"], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Trace__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Trace__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Determinant", "scanner" -> "List", "id" -> 
     "Determinant", "position" -> "800", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Det[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["1", "30"], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Determinant__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Determinant__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Characteristic polynomial", "scanner" -> "Eigen", "id" -> 
     "CharacteristicPolynomial", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "CharacteristicPolynomial[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, \
{1/10, -11/30, 13/30}}, \[Lambda]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{"-", 
                 RowBox[{
                   SuperscriptBox["\[Lambda]", "3"]}]}], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], "3"], "-", 
               FractionBox[
                RowBox[{"7", " ", "\[Lambda]"}], "30"], "+", 
               FractionBox["1", "30"]}], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "CharacteristicPolynomial__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "CharacteristicPolynomial__Step-by-step solution", "stepbystep" -> 
         "true", "buttonstyle" -> "StepByStepSolution"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://mathworld.wolfram.com/CharacteristicPolynomial.html", 
           "text" -> "Characteristic polynomial"}, {}]}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Eigenvalues", "scanner" -> "Eigen", "id" -> 
     "Eigenvalues", "position" -> "1000", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\[Lambda]", "1"], "\[TildeTilde]", 
              TagBox[
               RowBox[{
                 RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "+", 
                 RowBox[{"0.29386611303071347`", " ", "\[ImaginaryI]"}]}], 
               HoldForm]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\[Lambda]", "2"], "\[TildeTilde]", 
              TagBox[
               RowBox[{
                 RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "-", 
                 RowBox[{"0.29386611303071347`", " ", "\[ImaginaryI]"}]}], 
               HoldForm]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\[Lambda]", "3"], "\[TildeTilde]", 
              "0.26175460898876934`"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Exact forms", "input" -> "Eigenvalues__Exact forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Eigenvalues__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod11$$ = 
   XMLElement[
   "pod", {"title" -> "Eigenvectors", "scanner" -> "Eigen", "id" -> 
     "Eigenvectors", "position" -> "1100", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["v", "1"], "\[TildeTilde]", 
              TagBox[
               RowBox[{"(", "\[NoBreak]", 
                 TemplateBox[{",", "\",\"", 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "+", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox["1", HoldForm]}, "RowWithSeparators"], "\[NoBreak]",
                  ")"}], "Dot", "SyntaxForm" -> "."]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["v", "2"], "\[TildeTilde]", 
              TagBox[
               RowBox[{"(", "\[NoBreak]", 
                 TemplateBox[{",", "\",\"", 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "-", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox["1", HoldForm]}, "RowWithSeparators"], "\[NoBreak]",
                  ")"}], "Dot", "SyntaxForm" -> "."]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["v", "3"], "\[TildeTilde]", 
              TagBox[
               RowBox[{"(", "\[NoBreak]", 
                 TemplateBox[{",", "\",\"", 
                   TagBox["0.7791003844662475`", HoldForm], 
                   TagBox["0.6804238985214238`", HoldForm], 
                   TagBox["1", HoldForm]}, "RowWithSeparators"], "\[NoBreak]",
                  ")"}], "Dot", "SyntaxForm" -> "."]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Exact forms", "input" -> "Eigenvectors__Exact forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Eigenvectors__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod12$$ = 
   XMLElement[
   "pod", {"title" -> "Diagonalization", "scanner" -> "Eigen", "id" -> 
     "Diagonalization", "position" -> "1200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "JordanDecomposition[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                RowBox[{
                  TemplateBox[{
                    GridBox[{{
                    FractionBox["1", "5"], 
                    FractionBox["4", "15"], 
                    RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["1", "30"], 
                    FractionBox["7", "30"]}, {
                    FractionBox["1", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    FractionBox["13", "30"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )], "\[LongEqual]", 
                  TagBox[
                   RowBox[{"S", ".", "J", ".", 
                    
                    TemplateBox[{"S"}, "Inverse", SyntaxForm -> 
                    SuperscriptBox]}], HoldForm]}]}, {
                StyleBox["\"where\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}, {
                RowBox[{"S", "\[TildeTilde]", 
                  TemplateBox[{
                    GridBox[{{"0.7791003844662475`", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "-", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "+", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, {"0.6804238985214238`", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, {"1", "1", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}]}, {
                RowBox[{"J", "\[TildeTilde]", 
                  TemplateBox[{
                    GridBox[{{"0.2617546089887694`", "0", "0"}, {"0", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.2938661130307135`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], "0"}, {"0", "0", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.2938661130307135`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
                   "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}]}, {
                RowBox[{
                  TemplateBox[{"S"}, "Inverse", SyntaxForm -> SuperscriptBox],
                   "\[TildeTilde]", 
                  TemplateBox[{
                    
                    GridBox[{{
                    "0.6621386587964182`", "0.04476630969407526`", 
                    "0.4536674493972851`"}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.3310693293982091`"}], "+", 
                    RowBox[{"0.10333977784079848`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.02238315484703763`"}], "-", 
                    RowBox[{"0.6283835204086168`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.2731662753013575`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.34705510407662504`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.3310693293982091`"}], "-", 
                    RowBox[{"0.10333977784079848`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.02238315484703763`"}], "+", 
                    RowBox[{"0.6283835204086168`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.2731662753013575`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.34705510407662504`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
                   "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Column"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod13$$ = XMLElement[
   "pod", {"title" -> "Condition number", "scanner" -> "List", "id" -> 
     "ConditionNumber", "position" -> "1300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["4.5`", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False, False, False}, True}, Typeset`aux11$$ = {
   True, False, {False, False, False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "13", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.16", "parsetiming" -> "0.47400000000000003", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP1450622g5e312654cfeid00003ghigbi2f945b8dg", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "15", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa1450722g5e312654cfeid00001640iaf0ehi2dfi08884920455003441207", "version" -> 
    "2.6", "inputstring" -> "inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2024, 9, 22, 19, 53, 9.3365821`8.72276288508492}, "Line" -> 6, 
    "SessionID" -> 33101571439739455622}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7, 8, 9, 10, 11, 12, 13}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{819.2, {1351.983593718463, 1356.2164062815368`}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.935987589414692*^9},ExpressionUUID->"843b1ccb-33ff-da45-9fe8-\
9018bb8e27df"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A-level math", "Title",
 CellChangeTimes->{{3.931407174321792*^9, 
  3.931407177930338*^9}},ExpressionUUID->"3f82800e-aff7-7147-8f3b-\
0c72b943a643"],

Cell[CellGroupData[{

Cell["Year 13 - C1", "Section",
 CellChangeTimes->{{3.931407414930475*^9, 
  3.931407427130903*^9}},ExpressionUUID->"e98c8819-7aef-d64b-9d97-\
7f6cab128c23"],

Cell[CellGroupData[{

Cell["Module 4: Trigonometry", "Subsection",
 CellChangeTimes->{{3.931407451531397*^9, 3.9314074633409*^9}, {
  3.93141243522612*^9, 
  3.931412452336342*^9}},ExpressionUUID->"4b3e98ed-6b77-9c4f-a9f2-\
9b1648ab791b"],

Cell["Enter text here", "Text",
 CellChangeTimes->{{3.931412154361902*^9, 
  3.9314121727933636`*^9}},ExpressionUUID->"37d8e12f-4749-e24e-b7b5-\
7326f6810e28"],

Cell["Enter bulleted item text here.", "Item",
 CellChangeTimes->{{3.931412149769417*^9, 
  3.931412149769417*^9}},ExpressionUUID->"7cd6e70f-44e6-f949-9417-\
1ed6bafba807"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{"x", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   SqrtBox["z"]}], TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->\
"292f817f-ac73-b045-b9bb-6b4472f66589"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", " ", "=", " ", 
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "2"]}], " ", "+", " ", 
    RowBox[{"8", "x"}], " ", "+", " ", "4"}]}], " "}], "\n", 
 RowBox[{"NSolve", "[", 
  RowBox[{"f", ",", " ", "x"}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{"f", " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.931407550976351*^9, 3.931407591591724*^9}, {
   3.931407626333452*^9, 3.9314076445363464`*^9}, {3.931408400780186*^9, 
   3.931408512024429*^9}, {3.931412011746212*^9, 3.931412062480038*^9}, 
   3.931412198789852*^9, {3.931412230488808*^9, 3.931412323129978*^9}, {
   3.931412553335655*^9, 3.931412685784553*^9}, {3.931412753685856*^9, 
   3.931412865377777*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c05d3e8c-a2ba-5949-a2a7-f1c658d46de0"],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", "x"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.931412050952461*^9, 3.931412063854587*^9}, 
   3.931412200026531*^9, 3.931412232412405*^9, 3.931412302893543*^9, 
   3.9314125207353725`*^9, {3.931412589420679*^9, 3.931412670753811*^9}, {
   3.931412807540485*^9, 3.931412867661318*^9}, 3.93148375942028*^9, 
   3.931577447373827*^9, 3.93163818408159*^9, 3.931832635250236*^9, 
   3.9325278515646706`*^9, 3.932616121413965*^9, 3.9359875809741116`*^9, 
   3.937101548434895*^9, 3.938058897543585*^9, 3.9381930163362617`*^9, 
   3.938277774735548*^9, 3.938278336059288*^9, 3.93866509268444*^9, 
   3.938804465568134*^9, 3.938836759962597*^9, 3.941078087644495*^9, 
   3.9418403158134727`*^9, 3.942022489834627*^9, 3.942605227579782*^9, 
   3.942617985149839*^9, 3.94279828907764*^9, 3.945193775745276*^9, 
   3.945716262001999*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4c491895-d911-f148-83e0-6b4304503471"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.414213562373095`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.585786437626905`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.931412050952461*^9, 3.931412063854587*^9}, 
   3.931412200026531*^9, 3.931412232412405*^9, 3.931412302893543*^9, 
   3.9314125207353725`*^9, {3.931412589420679*^9, 3.931412670753811*^9}, {
   3.931412807540485*^9, 3.931412867661318*^9}, 3.93148375942028*^9, 
   3.931577447373827*^9, 3.93163818408159*^9, 3.931832635250236*^9, 
   3.9325278515646706`*^9, 3.932616121413965*^9, 3.9359875809741116`*^9, 
   3.937101548434895*^9, 3.938058897543585*^9, 3.9381930163362617`*^9, 
   3.938277774735548*^9, 3.938278336059288*^9, 3.93866509268444*^9, 
   3.938804465568134*^9, 3.938836759962597*^9, 3.941078087644495*^9, 
   3.9418403158134727`*^9, 3.942022489834627*^9, 3.942605227579782*^9, 
   3.942617985149839*^9, 3.94279828907764*^9, 3.945193775745276*^9, 
   3.945716262064554*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"c8c1cfb8-a889-7140-bcc8-7c0e3ee14970"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
mhkmBbOhuWU8LvX/3zsoqi1wQCDgUv8HRzdmtg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
mhkmBbOhuWU8LvX/3zsoqi1wQCDgUv8HRzdmtg==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {-3.9999984693273554`, 
             45.99999755102044}}, "Frame" -> {{False, False}, {False, False}},
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {-3.9999984693273554`, 45.99999755102044}},
           "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
mhkmBbOhuWU8LvX/3zsoqi1wQCDgUv8HRzdmtg==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {-3.9999984693273554`, 45.99999755102044}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-3.9999984693273554`, 45.99999755102044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.931412050952461*^9, 3.931412063854587*^9}, 
   3.931412200026531*^9, 3.931412232412405*^9, 3.931412302893543*^9, 
   3.9314125207353725`*^9, {3.931412589420679*^9, 3.931412670753811*^9}, {
   3.931412807540485*^9, 3.931412867661318*^9}, 3.93148375942028*^9, 
   3.931577447373827*^9, 3.93163818408159*^9, 3.931832635250236*^9, 
   3.9325278515646706`*^9, 3.932616121413965*^9, 3.9359875809741116`*^9, 
   3.937101548434895*^9, 3.938058897543585*^9, 3.9381930163362617`*^9, 
   3.938277774735548*^9, 3.938278336059288*^9, 3.93866509268444*^9, 
   3.938804465568134*^9, 3.938836759962597*^9, 3.941078087644495*^9, 
   3.9418403158134727`*^9, 3.942022489834627*^9, 3.942605227579782*^9, 
   3.942617985149839*^9, 3.94279828907764*^9, 3.945193775745276*^9, 
   3.945716262603327*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"95688022-ff5a-0948-9acb-034eaa7b0a2d"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Year 13 - C2", "Section",
 CellChangeTimes->{{3.931407414930475*^9, 
  3.9314074461105785`*^9}},ExpressionUUID->"4a7226d4-de2a-8842-b064-\
eaf926c35d2a"],

Cell[CellGroupData[{

Cell["Module 3: Statistics Normal Distribution", "Subsection",
 CellChangeTimes->{{3.931407451531397*^9, 3.9314074633409*^9}, {
  3.9314123673267384`*^9, 
  3.931412390390148*^9}},ExpressionUUID->"d485f1d2-7778-8242-8fea-\
c02a320cf8f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", " ", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", "-", " ", 
    RowBox[{"2", "x"}], " ", "-", " ", 
    RowBox[{"(", 
     RowBox[{"5", "/", "4.9"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"NSolve", "[", 
  RowBox[{"f", ",", " ", "x"}], "]"}]}], "Code",
 CellChangeTimes->{{3.931407550976351*^9, 3.931407591591724*^9}, {
   3.931407626333452*^9, 3.9314076445363464`*^9}, {3.931408400780186*^9, 
   3.931408512024429*^9}, {3.931412011746212*^9, 3.931412062480038*^9}, 
   3.931412198789852*^9, {3.931412230488808*^9, 3.931412323129978*^9}, {
   3.931494693913206*^9, 3.931494697599806*^9}, {3.93183261135391*^9, 
   3.931832643884021*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"411a8c7d-b7b6-9849-8513-317152c092ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.42141062443802846`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.4214106244380282`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.931483760280054*^9, 3.931494699255699*^9, 3.931577448312123*^9, 
   3.9316381850513*^9, {3.931832636407881*^9, 3.931832644994325*^9}, 
   3.93252785250195*^9, 3.932616122523063*^9, 3.9359875820416*^9, 
   3.937101549372202*^9, 3.938058898748277*^9, 3.938193017570311*^9, 
   3.938277775860317*^9, 3.938278336387367*^9, 3.938665093746687*^9, 
   3.938804466755369*^9, 3.938836760993639*^9, 3.9410780887539024`*^9, 
   3.941840316868841*^9, 3.942022490881504*^9, 3.942605228534073*^9, 
   3.942617986217886*^9, 3.942798290390093*^9, 3.94519377741145*^9, 
   3.9457162633732567`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0689a37e-794e-ac48-b24b-5657139140fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "phi(0.4)", Typeset`newq$$ = "phi(0.4)", 
   Typeset`chosen$$ = "CDF[NormalDistribution[0, 1], 0.4]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse["phi(0.4)", 
               Defer[
                CDF[
                 NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{8.8, {3., 5.800000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{8.8, {3., 5.800000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["phi(0.4)", 
                  Defer[
                   CDF[
                    NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"CDF", "[", 
                  RowBox[{
                   RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"CDF", "[", 
                  RowBox[{
                   RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse["phi(0.4)", 
                   Defer[
                    CDF[
                    NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "phi(0.4)", 
                    Defer[
                    CDF[
                    NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[6]:=",ExpressionUUID->"fb910e91-3ea5-ed4f-8d42-705b84a6c4b7"],

Cell[BoxData["0.6554217416103242`"], "Output",
 CellChangeTimes->{3.9314837650660152`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"45ea58af-6bdd-b340-b873-4461ac9375f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "1.9"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", 
     RowBox[{"-", "2.7"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.931483864909727*^9, 3.9314839998837423`*^9}, {
  3.93148431977222*^9, 3.931484321946144*^9}, {3.9318357667181053`*^9, 
  3.931835795584793*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"5ba3a521-07bc-fd4a-80ac-8f1f55729b10"],

Cell[BoxData["0.9678164663809575`"], "Output",
 CellChangeTimes->{3.9318357963506203`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"436a3a03-fd62-9647-9835-da71f43ff48f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", " ", "9"}], "]"}], ",", " ", "26"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.931484367869171*^9, 3.931484459652298*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"47180540-f3ee-074f-9224-37888d4d1563"],

Cell[BoxData["0.4120704478709426`"], "Output",
 CellChangeTimes->{{3.931484443308756*^9, 3.931484460136944*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"f9a98922-b563-7446-8cfc-2ed68b84e9c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"2", "\[Pi]"}]]], 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "2"]]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"f", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.93148527725733*^9, 3.9314853100068226`*^9}, {
  3.931485600687801*^9, 3.931485690853111*^9}, {3.9314857228455257`*^9, 
  3.931485810292425*^9}, {3.931485913908673*^9, 3.931485954858908*^9}, {
  3.931494610578575*^9, 3.931494625851477*^9}, {3.9318346899962025`*^9, 
  3.9318346922013264`*^9}},ExpressionUUID->"f8b2926f-5c2a-1d4a-9aef-\
eb9f2655adb0"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"]}]], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{{3.931485672591816*^9, 3.9314856913373756`*^9}, 
   3.9314858143227158`*^9, {3.931485916938999*^9, 3.931485945563999*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"df63be18-9261-7b4e-ac2c-aa68ab0b6964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", "9"}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "12", ",", "36"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.931484886439274*^9, 3.93148490314954*^9}, {
  3.9314849699390526`*^9, 3.9314850636832476`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"9375fa44-ad92-bb4d-9bdb-5b5e51ca57b4"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{12, 36}, {0.018223342952994617`, 
             0.04432691911100661}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {12.000000000000027`, 0.01822334295299466}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{12, 36}, {0.018223342952994617`, 
            0.04432691911100661}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {12.000000000000027`, 0.01822334295299466}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{12, 36}, {0.018223342952994617`, 
         0.04432691911100661}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {12.000000000000027`, 0.01822334295299466}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{12.000000000000027`, 0.01822334295299466},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{12, 36}, {0.018223342952994617`, 0.04432691911100661}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9314845741833344`*^9, {3.931484896697771*^9, 3.931484904664631*^9}, {
   3.9314849759917736`*^9, 3.931485064214882*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"b58c46b7-fdaf-5d4f-97c1-1f4ef4918db8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", "9"}], "]"}], ",", " ", "24.69"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", " ", "9"}], "]"}], ",", " ", "24.48"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9314850873922825`*^9, 3.931485137789118*^9}, {
  3.931485200248461*^9, 3.9314852053464375`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"61a27ee9-5c57-b240-9b00-268302e45f9d"],

Cell[BoxData["0.009288799607174325`"], "Output",
 CellChangeTimes->{3.9314851388781624`*^9, 3.9314852060569763`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"517a0a04-3c96-a04d-8b36-ec2c9133a9b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"100", ",", "16"}], "]"}], ",", " ", "80"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.93157740295763*^9, 3.9315774434106445`*^9}, {
  3.9315775226684837`*^9, 3.9315775233203335`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"76bd3627-3400-0940-afd2-dfca3eb35c5d"],

Cell[BoxData["0.10564977366685527`"], "Output",
 CellChangeTimes->{3.931577448358988*^9, 3.9315775240243015`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6aef5863-996f-f34b-a8b4-997d2208ff0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "11.2"}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"100", ",", "16"}], "]"}], ",", " ", 
     RowBox[{"100", "+", "n"}]}], "]"}], "]"}], "-", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"100", ",", "16"}], "]"}], ",", " ", 
     RowBox[{"100", "-", "n"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9315775443560066`*^9, 3.9315775550376472`*^9}, {
  3.9315775907431927`*^9, 3.931577637958788*^9}, {3.931577731068029*^9, 
  3.931577811621311*^9}, {3.9318346751701336`*^9, 
  3.931834676842846*^9}},ExpressionUUID->"c89168fd-fde0-2a4a-acdb-\
2842c8ef6a09"],

Cell[BoxData["11.2`"], "Output",
 CellChangeTimes->{{3.9315776011113873`*^9, 3.9315776385373287`*^9}, {
  3.9315777562567673`*^9, 3.931577812043577*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"563435e7-bb63-f54b-8b04-7b61114c58db"],

Cell[BoxData["0.5160726955538539`"], "Output",
 CellChangeTimes->{{3.9315776011113873`*^9, 3.9315776385373287`*^9}, {
  3.9315777562567673`*^9, 3.9315778120591984`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"08735c3c-dc00-0c40-bfae-bcbe85c3a476"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"3.38", ",", " ", "2.04"}], "]"}], ",", " ", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9316381561029053`*^9, 3.931638253662567*^9}, {
  3.931638433220768*^9, 3.9316384354687576`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"4aaec76d-ccd9-224f-b679-a9a047a3978f"],

Cell[BoxData["0.24937095680007335`"], "Output",
 CellChangeTimes->{{3.9316381851293736`*^9, 3.9316382539711475`*^9}, 
   3.931638435879591*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"0a61f594-3046-a24c-9748-4c0166b4654d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"3.38", ",", " ", "2.04"}], "]"}], ",", " ", "6"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9316382132087383`*^9, 3.9316382626558*^9}, {
  3.931638420834305*^9, 3.931638429030075*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"5123d7ec-9025-e847-b3a9-d049e54be341"],

Cell[BoxData["0.9004838968805465`"], "Output",
 CellChangeTimes->{{3.9316382255273075`*^9, 3.93163826303141*^9}, 
   3.9316384294738617`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"bef4f2b9-54d6-7443-82e7-ebbc6160c39c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3.38", "-", "1.34"}]], "Input",
 CellChangeTimes->{{3.931638364548004*^9, 3.931638426105644*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e0608a8f-3d0e-c648-9430-a421b2279379"],

Cell[BoxData["2.04`"], "Output",
 CellChangeTimes->{{3.9316384158771973`*^9, 3.931638426470627*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"48b1ee6c-b356-6448-a9fe-1d3494be15d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5.08", ",", " ", 
       RowBox[{"0.0025", "^", "0.5"}]}], "]"}], ",", "5"}], "]"}], "^", "3"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.9316385605122967`*^9, 3.9316386204439926`*^9}, {
  3.931638808711811*^9, 3.9316389066486015`*^9}, {3.931638959667101*^9, 
  3.9316390084156837`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"917232f2-35cf-f245-9cb3-b48e0530993a"],

Cell[BoxData["0.000164560210918798`"], "Output",
 CellChangeTimes->{{3.931638591290554*^9, 3.93163862080241*^9}, {
  3.9316388207871876`*^9, 3.9316389071179047`*^9}, {3.931638964561596*^9, 
  3.9316390087912903`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"2330f572-8438-6940-a2be-8c05635ae594"]
}, Open  ]],

Cell["\<\
Quantile[dist, area] is calculating to the left of x,  in which the dist \
percentage == area size\
\>", "Text",
 CellChangeTimes->{{3.931644458277422*^9, 3.93164454193964*^9}, {
  3.931644583882593*^9, 3.9316446241177177`*^9}, {3.9316446885106106`*^9, 
  3.9316447986958294`*^9}, {3.931644963979294*^9, 3.9316450858028927`*^9}, {
  3.9316451321219864`*^9, 3.9316451363866024`*^9}, {3.931645178771366*^9, 
  3.93164517920681*^9}, {3.9316452177851086`*^9, 3.9316452377818527`*^9}, {
  3.9316453223091297`*^9, 3.9316454193525257`*^9}, {3.931645450283676*^9, 
  3.9316454831318645`*^9}, {3.931669968687599*^9, 
  3.9316700104088535`*^9}},ExpressionUUID->"c4e8f823-74d7-b34f-afd7-\
886476dc1421"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"NormalDistribution", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"quantile", "=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"dist", ",", " ", "0.25"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.93164382831908*^9, 3.9316438831362104`*^9}, {
   3.931644039266237*^9, 3.931644096919729*^9}, {3.931644243792963*^9, 
   3.9316443365290346`*^9}, {3.931644397093797*^9, 3.931644423212799*^9}, {
   3.931644638005043*^9, 3.9316446731082525`*^9}, {3.9316490836098394`*^9, 
   3.9316490843298388`*^9}, 
   3.9318346508028126`*^9},ExpressionUUID->"522c8616-a9fe-6d4c-8986-\
331e1a3010a8"],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"0", ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{{3.931643866760502*^9, 3.931643877067768*^9}, 
   3.9316440411251698`*^9, {3.9316440751952133`*^9, 3.9316440974195805`*^9}, {
   3.931644273129751*^9, 3.931644337013315*^9}, {3.931644399124523*^9, 
   3.9316444235406723`*^9}, {3.9316446400201893`*^9, 3.931644673451679*^9}, 
   3.931649084829376*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"4da79497-6300-c94d-aa43-6cb549034c57"],

Cell[BoxData[
 RowBox[{"-", "0.6744897501960818`"}]], "Output",
 CellChangeTimes->{{3.931643866760502*^9, 3.931643877067768*^9}, 
   3.9316440411251698`*^9, {3.9316440751952133`*^9, 3.9316440974195805`*^9}, {
   3.931644273129751*^9, 3.931644337013315*^9}, {3.931644399124523*^9, 
   3.9316444235406723`*^9}, {3.9316446400201893`*^9, 3.931644673451679*^9}, 
   3.931649084845024*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"f2a46130-32e5-194e-bc0d-42562e9a05c0"]
}, Open  ]],

Cell["\<\
mean=np
sd=sqrt(np(1-p))\
\>", "Text",
 CellChangeTimes->{{3.9316487893038883`*^9, 3.9316488264874477`*^9}, {
  3.9316488635346584`*^9, 
  3.9316488729850445`*^9}},ExpressionUUID->"a1b0f35f-eb9a-f64e-9887-\
45d66bf89862"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"20", ",", " ", "4"}], "]"}], ",", " ", "20.5"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"20", ",", " ", "4"}], "]"}], ",", " ", "19.5"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.931645680506954*^9, 3.9316457534615135`*^9}, {
  3.9316464184431114`*^9, 3.931646449612438*^9}, {3.931647821624031*^9, 
  3.931647822530775*^9}, {3.9316488971969566`*^9, 3.9316489828588314`*^9}, {
  3.9316490554428368`*^9, 3.9316490734006233`*^9}, {3.9316493041814156`*^9, 
  3.9316493072466946`*^9}, {3.931649478326332*^9, 
  3.931649534896715*^9}},ExpressionUUID->"37683469-154f-744c-a951-\
de350cc0bef7"],

Cell[BoxData["0.09947644966022584`"], "Output",
 CellChangeTimes->{
  3.931647827942621*^9, {3.9316488979467373`*^9, 3.9316489871603966`*^9}, 
   3.9316490588048096`*^9, 3.93164909031995*^9, 3.9316493075985985`*^9, 
   3.931649479083496*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"4574c946-d214-8844-bf49-e5734d4eca07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"200", ",", " ", 
       RowBox[{"160", "^", "0.5"}]}], "]"}], ",", " ", "200.5"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9316494180315113`*^9, 3.9316494307623367`*^9}, {
  3.9316495334577274`*^9, 3.9316495539773903`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"2db098c7-1cbc-2741-a9d1-d2d6302bc04a"],

Cell[BoxData["0.4842345274360602`"], "Output",
 CellChangeTimes->{3.9316494317393856`*^9, 3.931649555120825*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"e799acc7-3e62-e847-a330-8d0e8f7a5cae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"100", "*", "0.025", "*", "0.975"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"2.5", ",", " ", 
      RowBox[{"n", "^", "0.5"}]}], "]"}], ",", " ", "3.5"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.931657120776731*^9, 3.931657123057401*^9}, {
  3.9316571980334673`*^9, 3.931657221869125*^9}, {3.931657273354646*^9, 
  3.931657396406574*^9}, {3.931834661406351*^9, 3.9318346643461285`*^9}},
 NumberMarks->False,ExpressionUUID->"1f2ef2fb-2a00-cb4c-a947-b1ba821cd646"],

Cell[BoxData["2.4375`"], "Output",
 CellChangeTimes->{{3.931657111278944*^9, 3.931657128134321*^9}, {
  3.9316573906202145`*^9, 3.931657396928631*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"2d5d7884-ad37-c148-b071-ec88d38c7e47"],

Cell[BoxData["0.7390803048331923`"], "Output",
 CellChangeTimes->{{3.931657111278944*^9, 3.931657128134321*^9}, {
  3.9316573906202145`*^9, 3.93165739693359*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"3ec55cdb-3da8-ae4b-bedb-6ef998da3509"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"1", "-", "0.6", "-", "0.025"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{
      RowBox[{"100", " ", "p"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"100", " ", "p", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}]}], ")"}], "^", "0.5"}]}], "]"}], ",",
     " ", "40"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9316575668627663`*^9, 3.931657567738659*^9}, {
  3.931657604383545*^9, 3.931657623490595*^9}, {3.931657663938535*^9, 
  3.9316577140469284`*^9}, {3.931657760216444*^9, 3.931657760480646*^9}, {
  3.931669630101288*^9, 3.931669636588108*^9}, {3.931834666176676*^9, 
  3.931834667106226*^9}},ExpressionUUID->"f2805759-f423-f245-b9be-\
30eca8918678"],

Cell[BoxData["0.375`"], "Output",
 CellChangeTimes->{3.931669661583889*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"447bf402-fd3f-064d-ae8c-0dc9e510b178"],

Cell[BoxData["0.07211880009499753`"], "Output",
 CellChangeTimes->{3.9316696615913315`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"ed251043-03dd-6948-92d7-c381e15814b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", " ", "=", " ", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"x", "^", "2"}]}]}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"f", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9325278413384438`*^9, 3.9325280092391357`*^9}, {
  3.9325280394384594`*^9, 3.9325280684043903`*^9}, {3.9325281151488743`*^9, 
  3.932528115555025*^9}, {3.9325282513452168`*^9, 3.9325282893673973`*^9}, {
  3.9325283357782803`*^9, 3.932528380684305*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"ffdd8ba7-6a94-da43-83b0-55901b1cac23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "x"}], "+", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.9325278526581936`*^9, 3.932527934629652*^9}, {
   3.932527965796118*^9, 3.9325280038652115`*^9}, 3.9325280421252823`*^9, 
   3.9325282631859417`*^9, 3.9325282932100735`*^9, {3.932528339761532*^9, 
   3.9325283671404247`*^9}, 3.93252854448831*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"34df04b0-ac0d-7942-830a-54fe58874f28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.932616117883545*^9, 
  3.9326161737881355`*^9}},ExpressionUUID->"884a8e5b-5e58-9b41-aaf0-\
ec1e72e59427"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    GraphicsBox[
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[
           {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
            Opacity[1.], LineBox[CompressedData["
1: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
79hk
             "]]},
           Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1: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
79hk
                 "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{(-2) Pi, 2 Pi}, {-36.13614985689592, 
                39.28049566026931}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{(-2) Pi, 2 Pi}, {-36.13614985689592, 
               39.28049566026931}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJwUV3c8l98Xt/f4LB+yCVnJXvG5jxGRyKikpIVCxdceSRKyZbREmRWVyijJ
c0q2smVGRFIhe/v5/fW8zut9z33f9znnnudciTOXbZwZ6Ojo3Fjp6P7/NTfj
MVqT2AEW3GOGjVZG2N7SkBk20R2g5sU8HOZnhClK/H5AFdwBT4J1tC8lG2Ei
8ccOSFF3AC3tA2/iQyOMZ6VuWYW0A85X79z/M8cI2zqnmY94dkClTWbbtftG
2Exrru1Bjh0w8NjrjmeUETasR6Y/zrIDfC2ol5pdjbC2x9een2fYAcWBflMl
ekbYR8rMcb9NAeBoMj59iMUIexV2kj1iVQCUM2JvN30yxHL+NJclLwrA+9Zb
NccCDLFU+73nsmYFwClt7zF1CUPsxqcnxGdTAsAePdd8DzfA/JQF8IpJATjr
fsa/3dYAc82I9KgfF4AuhaWjMt8wzJ5tYUf3iACcvxo0PH4Sw8x8ztaNfhOA
T3kP/DuKEKY73Obzr08Asli5pcgxNEz4zfMWrg4BuL5XMNmYpIdxS4lcEWwR
gBDHqONfqnSxzcRYedkmATh2+rPYhxM62LDr+RtG1QIgsumU4uKpibV1dKta
4wJQ3e+g+uenOvYR7Rs++U4AiqT5r121U8Ny+SX3Br0WgP0npquKCcqYa13/
THGOAJRpvsu9ekYSs1czz6zKEoBLZaNqGiUi2P6sNwea7wsAV8u5G/O3qZi8
f1r+zxQBwG8Lb9nep8OmZKxOiEZs6200THonSIGhW+/ZFcME4F0we/0qWQha
NxXKdUIE4BxBnZ+6Lg6vutlIh30E4NVjTieut7vAL/JjXey57XgIDnF7qaiC
66yy791TAvDsphrjfKEa2J/Mkiw4se1v0sItJ6gBupohVz7aCYDLxiDHsy9a
oJA9Kd96SAAWNRLcUsg6IMxzrGfQQgD6Ik6eP26mCxtjGmorxgJwyqFKV/qG
HkxZ5w6zGAgASePiXo4Yffj2npRA0d+2HycV375Cgxa5a3sldbb1hPVO2Tsh
gLTpiT0aAqAkZbHixY/BS/qT6foqAvDEbN+nP74YZF9sNjqwWwBesgu+mW3E
IKVX95+9nADIPxva60Q1gIh9TzJdpAVAg/n1frK9AUBs0CExCQEIrA8P10g1
gPW2Aww9wgJwWtr7YMknA9AWEClJEhCAgOTh4NBfBuB9csrZjCIAomffZsUw
GMLzXJyfgbBdv0XP6L/yGsLkZFJDBacArJg7pVwgGoKMyplgb1YBGLn0eMCK
1RDO+KvtVmQUgNRG4o/MfwaQ+Z5p6McmP5AfpZK8Ww2gl7E76cEqP9Rm1ZFm
cgyAYl5geGSRH7Lk7xRiHgZwKClgnmeWH8QsS9LT5Qwgrtssv+4vP3StNNnI
D2BQLyxkH/aLH/h82v/pRmDAdPYPu84YP3hIuI9yS2KAnrx/92+YH0KuOfoP
uiMImk64+HRgm99g5o9jGA3KNE6Jne3hh/f87ZcOhOuD0keG650t/NBe+Zn/
hPVecGPrVI9v4getutwoXnFdyLPMG99Xxw+jroMXrYa0Qbjf1Ly8ih8kn+Q9
XVTVBHuJHeuXK/ihExy4VRvUIdV18plsGT/k/jdR9tBWDTjn44j3nvHD7aNe
JcxmyrDK1d4TksEPdCc7y4dyd4KmbU6Mxp1tf11tmspBcfjvro/eVAo/vJIV
cWoe2AG/pPkfOsXyQ8faRXaeJDbooZ1wNQziB98Erz7TbG6McmP3jjVfftgi
BFvmBfNhh5o2G1978UMeg0fAMEkYqzv6SEn6Aj/86ntpOxQshZV5ji+w2vPD
pdEK18sWythsWXkB2PJD5VTSCk+ZCqa0EX0s0IofrvSPPcwiq2F5NxXeT5rw
A3tScGpUgQY23LJ+KceQHyJbIkovD2hiwtQv4ido/KCjGW7tzqCNpWZ7RnzW
4IeEMOBVFNPFWicMNCNV+Lf7H0W+g7IX49xDnqDt5gd3bQc1m5W9mInvj7tL
svxg0/yjWKNZDwt/V3qgWIofdmZ+i+aL18eq6KM2zovzw4mAWPm0vTRs1dT+
hYTwNv5z54uzX2mYZoLc6T5+frheZDq39xTCvDpXSSlkfngpzfXkRxfC0m2s
HFJ5+SGs46/vzh0YVtma8yiNkx94MoK7u2gY9t1yeSKdlR8G99XL0Z3AMJbP
Fsp3GLfrRccq54EnhikeeOR/d4sKQZVeM89CMMy6YaHq3hoVQuMUlTXCMMzP
1JwlY4kKxK2bE3uDMSyjJvPggzkq9BIHVr5cxLCPRnOpmdNUOPWlMXHrKIb9
/GA6kPWbCmd8jAmjOhjGhWXsfPSTCvSdjmwpZAxTrZpxyx6lQuDpc0oOjQiz
19v3KmeICoPtec/yHBF2peLuSm4/FQLmX0Tafqdh2dpTWP5XKhR7m2Blh2lY
fZlhdEEHFbJ+tJXteqePTanfbnncQoWYI5LDbCR9jPz6N/VpExXuG3PGfXDQ
w06+SM0rqqaCtvmv44HVutj13b/+PMOpoC+lvun6Qwd7XKiv/uIdFd5LJcRz
rWhjcwXjH1++psLDHMXA1C1NTEBmL8frF1TAr8eN3prVwGi5idYlhdt8LCuv
Q/rVseiH2sNlOVR423t9KCBZFRO9G7PxLoUKca3pK6ZIATPmHzJ+n0iF0n+t
EwP5stiFNLW4qlgqaDT6h11nksFKkgcEP1ynQsizgSTfAnHMLEZJu9abCsg5
Wkm1gQW7xHb9at1lKuTLZK4W3lhCqZFfa+vdqSDXpn1GhvAGfQsPO9x0lgqF
8/Gu8ZLM4BPc/l+rLRVYdcqXo36Kwb0VmYo2q22bgMa8oiUB9w+m7zhAhXW+
Q9adRGng8JFK6jKiQsdRRkW2TTnYMxvwtRtRgS1QoD79pCLYeX4W7dlLBckd
rLTDL5Qgy8PvWZ8aFfQCE1UfJqjAp8nG+f49VDj5MPe9boYqTJ4X0xtUoEIJ
RxP9YpYaqDvXNw7tpEJqpa4XKVoDHEaFSd/FqHCdR78vx10Trp72OjYiRIWD
etM1ZUZa0OgoOPGDTIX57IesTK3aYJWlh1Z5qUDRp73VDtOBzuGT6bxcVBA4
VH5YRUoX7CWv/ZVi267PkAziq3e6MHg2x1iXiQrLcld0bpjshTN5Nfet6Khg
wjxJC/60F8bHf86eW+eDXVmhH9009MBdlsM8aJkPbuxfuKd8Vw9mLig+Spzn
A8U4s94X03rgW2i5nDvDB2S26YY2bX1Y/eNpVfGHD/zLds7d8NGHq0op+S0T
fNC65Uz4mK0PTJ6lGz9+8EH0bgHO8Gp9uPnyq93qMB/I8ZyYqevWB565lULe
QT641KD64/6APtxSF2aU7uWDWtYpIleXPvD70Rx0u/gAL6S7pwj6kFF+6qVV
Gx9wedCu8Gfqg/hKOJvzZz5gyLl3488lfcjTzXMKauCDvTn+im2q+iAfUleW
WMMHwS13Qmd+6cGL97+48z5s899t3AhK1QP1LU7nivd84OVkF5avqgdvMaXK
lrd8cHB+P8/z7fjQwg+Rx0r5YOlgU2Wb+V6orv7PbfUlH+jed4w6UqML+5m3
B8nnfOBz13pXpLouWEf3XtbN5wPX4NVrO2e1obthrdYqmw9e2G1+0zXQBgdO
UVHnTD5o4zFfsYrUgnMJZ5oT0/ng6+YBh9k5DfjVErEz7xYfXMj24N4vogGX
iAVBFQl8oM6YOa1AUwf/1N+yY5F84L5lR7I5rwox93xu6PrzQeR8ULN8lyIU
50fSxo5u69PQy2o23r5XE4/TVm35YMyNjsu4kAgVck1/eA/xgcxaq3a3MAdU
F/He193PB8wznbyf06bw7ld3lhK1t/PN9sA07zcXdny+wjJPnQ8enLZ3pZ8j
YcMag3kVynxwdeG+HfEcPzb5RsJuTHY7Xtbfv1pwi2MbVU+LdXfwAUXbLPqc
nSzW3LeHa43CB7StK7H8PvJYxmKJ6zsCH5hyRh98FaGI6Snhonps23jaQyl/
XWWMy9w4aJ2RD74Eq7x3lVPB+p0buiq3KBAhHhvJxauKBT3oiNNfokChNP/Q
70o1zPyt/cTGLAWOtJs2e0aoYzu6Bo2qpihQHFv6k2aggU3MnMkKnaTA0XNu
r9jnNLA3XBOrtHEK8Li8ux1zVxOLlr14ZOs7BUyuTjFcU9fCjhrPvsQHKWDH
9cLrVbUWJnPKnzuslwKZ2tbXJ020scXg9fNYFwXqecaZ1t5rY7W3r32ia6PA
Uv7O1XeyOljaaxbxD80U+HpRJoczSgc71xIbfK2eAnrspKtfenQw9d+Erwaf
KJDXe/fAtIguxsSarsoAFNCID6J3OqKLdUoKJXx8R4HTD6c/U8J1sVzaw1/h
5RQoY1dh53mki3k7SO8zek2Bl1ks8pavdTFDv6cPGV9QYIU3rOzbG12MdGvP
evVTCpQHfVdpeamLjTwrORqRTwGluS5WjUxd7FWDzmvjbAoc3L/qoxCqi4WP
VfEwZ1LAJq7Do8NaF7OmN3aruUuBPT37rtju0MXERRpqbqRR4Co8fPG1Uweb
0baUMEmmgGjfUdfkCB0M7DpCWOIp8DY6lFa+rT/R076nNpoCMyJiwxEftLGT
cYNqUREUkOSKHNa10saUHp9JNA2jgETmvRTRdi1ss/rnJGsIBWqMnb4Hmmth
X4Y8TOr9KXBZsETg/htN7CK//8b+yxSY4BByveKvgemprduzu1Og4FOP53S9
OsZlda2kwYUC/bSYH9FEdawoMtbd/CQFXE7Y8r+7qYpNLmT1HjhIgenFhQ02
IyWsgiitwWVGgeHRDlG6y4rYzd1Pk5qNKdCpxJu9kiiPyTqXmB7Uo0A8993q
rBIZzKWzvtRSgQL25Qvsv/eJYKOv/iVbs1NgnGhu+qN8Bs9gWQ13YKZA5YPs
3iOCdHDEgcHnLD0FTlXr7vzeyAr19OQjvitkEI0i3/YIJsPzQ+qCd3+RwaP0
H/BySoBrrh5n9hgZ7vGlsjs2SYL4svH60+9kMInbl1obLgUpWYe/VfaSwe0H
MN/o3AUBU37Zww1k0L+20DM8txtUDK+m/Kohg5ZVxpSk4x6YTIuKmP1Ahq5M
z7K7J5TBUf+OC1MFGeI3Di/S5aoANfnhUe4yMrD/2s+zrKcKrT8e76e+IkO4
Qk5O5BdVMIx7Ky/7lAyGaO1+ZZ8arA19EFLJJ0N+710JvsPqUKLWyKWbTYb7
3fRBrnXqcCmqfcMwkwxR/i6HUlU0YFd/39SBe2TQ1bh0+2qKBgwrjQ7ZpZMh
8frjOMJfDbgX/rvV8RYZLiSXV6jQNMG2e+6DS8L2fuvKq62RmsAlv/7qcsy2
/09tr6FaTai5wpQbEEmGELv+ZOtNTQht40q7Fk6GWnFZfrHdWqAtzRcZE0qG
sWNUeiNbLfgXIOKfErQdL2n1xHeeWvC0Wfp8hh8ZZhtldWNubPdbcaVjef+R
QW6Ap+h1shaI+GiaP79EhtX2onKUpgXddbS95W5koOu/ZamTpAVJQqaK4EIG
hg4pv+fhWmB22Uqk4QwZmsdv7y320AKG6qM87SfJsOT1O9/GUgsqqae2+hzI
sCEzVlS0Swt83c7PjB4hw+h7AfGeZU1QqvL8/seGDD+KGR/9+6AJE8TA9gXL
7Xg37YsXuK4Jj5yvVW+ak+HLza2/l/Q0weHtzRJWUzJ8C3dy3jGlARTuW3kE
IzJU7j0vhO5owOdT99J3oO38bC09Yd+rAZEl2VGSe8mQ6yfMltetDhhbYYCC
Fhnm+9/5IHd1WDn++oK6Ghksuh+cYl9RAw/GTwdMFMjw6WP75BKdGkgfbdaz
2kWGtSte6VHBqvDtaedu+51kGLymVyQ8owLWNmO8bkJkWGfEp7F6ZdB8xNIZ
z0kGCr1B7zE/RdBt8WowYCWDvYe5a/KaPNA2BqoWGMhwNrsqzcNfDkyOvX7i
uEqCcHmJ5frDMnCUeOrq7l8kMGgl25tcE4OAa2/lP9eSQP7FvryU0Sk85IWU
+LWPJGgUq6Hfx/gWDxtM5NOoIkFgaWylacQEitZxoXtQSoKHvh/kKtsYsTv/
SN0euaRt/ZVtASr8WIZYaJP4QxK4vuZISHURxB4e/AWd90ngyyxDeBwvgj1+
ghfqpZDA/dfTU0ndEtjb0x7XuMJJYO0+YZB+cxdWlfjVD66Q4Azi+tc2IIt9
fG/o4RNIgt2HjX5OSsljjTt2HB3wJMHTNmUdpluK2BfTCIskDxLMZ5kx65bt
xtp9pw2Mz5NA/CJJ6c1nJayvrUaxyIkEZteIR+67KWPftpQlTx0nwX31Eq6D
I8rYyO4MfspREkifGdvBYquCjR9n5a63IUGOh2VRfqUKNnnzP4YQSxLYSl2c
I4qpYlPlg0t7zEmQKLdvp1KQKjY7tv/v6D4SrF7o8PvxWRVbJJeM3DbY1v/H
REVCUA1bNRDrOaBPgo4UhsyOk2rY5uWYz1va2/vNu/NO3VfDGDIXPr5W315f
HTvg3KaGsTSfeuOqTAKurxGOaltqGMdq0zMhRRI84/k5bi2tjvHIauW07CKB
1uhoNW6kjpGOZN+5vpMEsu/c9oQ6qGPUCO4ELTEStAaqWSRfUMeEXgVc/y1I
AjaBKiE6L3VMfHg0IIu6fR4XS59OT3VMisfqki2JBAluvxcEt9fL6lWcZeUh
gQmr2+bIMXVM0U362Dt2EmyuxWTQtvmU7yRZXmbePo+7erjh9nnUa9eMdtKT
4PjllgVmOnVMe95F5+s6EXLPtX/M7lDD9CTblWKXieA/FCan8VANe0jmVLed
J8Kxq1ujay5qGCOzsY7QDBGaawx5NXepYS6LIbTR30T4I2M2xfRdFWv8WWpU
+JMIk55dDbGpqphS79R+71EikP5Ffps2UMWSG3dZ7h0iwtG8S+b2v1Qw+2d3
7Zu6icD0Ki6tX0YFq8xsd0xpJ4L0+JD7wffKmFgS59njX4hw+ma1k5elMjb+
35WLv2uIoG6SLS5SrYT5aJ8O5ywlwr48a2/DR/JYj9y9qI7ibf4Lt4W1I+Sw
vUIdcfeLiBBtV7L22UkWY9g0vq2QS4TimwfzMhlksKRq2aIDKUQYUeh4FcQo
gRVZznTFehGhq72g0sKVHSNgcv22F4kgdrZFMmWREfNWOTMsdIEIDzOTN7M4
N5AupXOy8BQR9hwI/nby+CCq7y3farIiwtm8lnDtd/Sg2DTDlHqACFO6j0Ri
V1kgsVKO44QpEWpSBUc2FLjgSNZ9yh8aEQ5zWu1w37Pd985dleNSIoIPnppf
8EcY9h95o9QpR4SqJ2N96kgMCk3/qWVIE0Ft/auH50dx+E/+LE1RhAhf+U1e
hs1JQrdQhtG8ABECa3e6itBLgQ531/5KChF4hiqieVilgW7GxNaCiwjHpy9s
dK7KwLnvV+0pbERobebtlJ7YBXXtbxwHGImAR5hqf2yWhYRS+fMeawSIMGhV
XAmSh9n8sxfVlwhA1FPckjNWgMN3Mv5bnyXA16etc+2MiiAczHMlbpIAl6/e
7Bpy3g0Xchv5H4xvr2ex5DmzsRvKPke+ejZCgAuHs+LJcUrAtGR4sOobATKy
J+P6iXvAWnzr55c+Avz38Pe/nIQ9kGn2LnyomwAKlSIFivTK8Oc/f5GZdgJc
ZOG57KupDDoZam/oWgiwoWZgJO2qDJE10zbEJgJol6hc0ExRho6pwr8SdQTY
t5ztn1uhDOIC56NVqwngQZ9o5zGoDBcNpHYa4QRIVK1QjVtThgq34fe27whg
aDydwMinAqypGfbnygngZzWm2CGnAnbv7ed8XhMAzbeRN3RUIHucknDjBQHI
JU9iIvapwDRvm2x6IQESCgiUSxYqoKcTX51fQADbuo0LuKUKxJwxO1meQ4AA
HnLg1W38ayzzSl0WAd40Fh0v2/aXKv2Q0nOfAGHBT+0u6qqA17crSr9uE2Cz
aK7hubwKVLHqNqykEEDP9B0tkqoCnCqLZzmSCPC04/pBuk1lsHd4tSkYR4CD
xj8fyX9Xhrzrl+4qRBPgWqvULBmUYbZIXl0vYts/3H+56Z4yYN3jXyzCCGDD
p+1x1ksZ4reyLziGEGCkpXn1t5Ey9Mk6MV0KIEDt1gUsgKQMsjZCWaE+2/ad
A9e0KvbAx9yUziwPAoi3ijxb+KwEvF+sLhefJ0BaZLJLtYUSnFji5PhwjgDr
nE+SPT7thiWzCDRyggAS7DnmvFmKYOyN9c3aE2Ag55GzO4Mi3MpY92E8vF0P
+K9JVycFUJz2eSp1kAAnBl6c5WOVh0ABlX0aZgQIJ682qtrIQa3B36F9+wgg
Oet/uuG2LJxKdeZz1SfAuNt1CRPyLkjTORL2ZDcBbnk+Tp5o2wkjZ0hCFXIE
COyu7FJdkgTluC+ljdIEuD3T09cmIAmN30x+/xYhwGqoRTmLjThsXtc6osRD
gNLFS3pWJjugNUPF3mWQF6Tl8qNSBhmBLvdy+mAnL0w/4fTLt93ClQufddo1
88KpzBPVEVOLeNJbOWujd7xQvG5hktLRgx/qljAXv8sLC7VnQpoqVlHYoFP0
7SReeMRfuEFxpceKfzyo5YnmhdhrB+4FuTBjhLkdRht+vOBEyMvUMeTGWnlJ
en12vHDc7+RcjSwVo+M/FGRtwQtS8HfEZZEfUxZNeFNvxAtvLxkxML/bgSUp
cmiUq/IC8/eFizG7RDBQ2++tJM8LDYOFXTlfRLEZ3ciXeRK8kNDVcy5RQxw7
ZMaglErghYoXLnTnPkhgYYcwD042Xjj/63ldTqgkVnw09Gn4Fg/M0TM9H9PY
iRFcVmW8pnhgutTn9tdkKQy7qO08McYD5cXCLzBNaczTxy/HaZAHvGLGqaKd
0lhr+KyYZTMPRB1s0sTXZDC6GOWTNdU88I9bf9bixi5MOflSht47HvCO1mYd
ZZXFTt0p6nv9igdIp1pa3K/LYklZkwIKT3mAu7SwoWNJFoN82aPZj3iAtqCb
xu4sh808c0nbcZcH1ir15zca5bBDlSNEtmgeiDcJ5J4Jk8fCqsUPXb3KAxuO
jwZ6W+Wx4saTCYt+PKDCv/uMww4FbLgto/niJR449evGgIeDAkbo7eMYc+aB
95Fl6TypChg2LGB2wpEH0jZJo7RaBczz55GoDjseeHfLiW9rRgF7OJVaY27B
A9nTgSE2FEWsdaGd8aMRD7TGRR+nKStidBsEQ529PJDJWzLSYKyIKTNZhRWr
8oDog0u7Nq0VsVOc8VW75HkgdMdB4fGjilgSqWk9U4IH6s74RSccUcRgB/te
6g4e2JtTtMlsqYjNiJsGxhN4QPrHfMcJmiImLnujnIltWw/fd768XYrYoT3V
C8Fb3PC1Jixsll0RC9OkV59b5IaG7nVvhzEFrFgf/ec2xQ1dl0d+zb3d1m98
pfj7GDesx0q4fY3a1m/xbsp+kBt0vaq3RK229duuKLZ2csNOD8fd47zb+h20
3E2buUFf1vi7WaM81nL+9U+Nd9zgGJvtelpRHmsfWjpEe80NDMeFYk72yWHd
R/QqTAq5QS3Ot1T7uhw2YFwTd/Q+NyQWHru1VCOLDb9jX3RK4YYPHj/5BU7J
YqOqlk7nY7mhW6t5b/zCLmxS/KtKYDA38ArIJi6QdmF/bwvdv+bNDf+aHW/L
35fBZnhOMcW4cwP9kVMDWmIy2NL6RPe949yQfbW41FlIGmPqXQ2u3LutN7HY
e/GnJMZ2CI19UuOGGx52r1ttJDHOuuuWnxW4gbE9iDGvQgIjlXJJfBPiBnMv
dnLnNXFMLFm0dmuNC6zPruxjHhPCdM0MCUaVXJBo7rzqs0nAaBAZeKCEC+pE
Vh5f2MOLGWg1jdgWccEJ4/eD4U5c2H5pu9JzGVwgYzofNVLBgh2md3GIDOGC
PjFzmvfgIvJ8ezO3QY8LasiivccvLeA+yl+429W5IF5bjS7s8yruX0Dy71Pk
Ar7wHtkpXjoITbtv9luYC9RXH9dpHGSGWK9nU1wbnGDJblj02GX7Xk/8O8q3
wAl3fiaYif/e7oNOmh9E/nICEzFzZF6EBHcO4ilKg5ww2mfzZcabAvlybdqH
3nPC/lq1Tv4BATi/6+WHsFJOyD12Rbr9+w6Ql042f/mMEwJ1fpdd/i4Iz8Wt
T5AyOWEk226o/rMweIqqjBmmc8IgA/dlwwoRUBUmXvJO4ITpa7bqQg9FoZy/
7WpnKCe8mcgteqcgDkF8L9mY/Tnhg1xQ/JlUcdAjJydrXN7e72Ox+/UVcQAe
65x0J05gbaoXYHkrAeFcKop1Rznhce6Ro7ZkSTDmIJYuWXGC0+SS178LklDP
3FZrj3GCF9W/YItzJ8QwvrS6qc0JO0SdXE4f3QkW9Mk9b5U5wYd823Qpcyfw
bHmenpTlBGfhepbKkZ3Qtn5oUlCCEyrdD0kUSkpB6qqy94EdnHCwoL8TTkrB
kWXCejCRE97W9YqspktB31wr9yA9J2y4PCG2rElBxr/idO5VDqDevut0XlYa
Tk4nidFmOUA91vyGuLU0iP/1fHxpkgP0lTNFln2lYWTykErWCAdEqHn7zaRL
Q+6EckVLHwfcIZolcJZIg8s4wYiugwPuJjcQLT5Lg+yPmSblJg7QS9c+Vjoi
Db+/t9qdruYAoT1NzgfmpeH5UPFg8jsOSO0e/0ZikAHPwSSXj6+3+RvMeIlc
MqDa7zk9W8gBbedERg6QZGC+51DAzlwOUA2dG2qgyEBZtzK9XQYH7Mt4oXCL
LAMBnYSYiFQO8GVzvFrEIwO67TOk0jgOiMuZlZVgkYH1ltb7YxEccPYSM+vK
ijRUfS6Wol7hAKNStxv6k9IQ1pT0zMSXA442N95d7pYGwwZPTf+LHJBmLg3q
IA3MdYfwAmcOaH9hurSeJw31n5T39zhygPVprfcnoqUh5iOhje0IB3SPJ3Ke
cpUGC5g5pmPJAezW3bZkI2ngqWoduWDCAfDiY/B1IWlofVfsfo/GAYeuhPW+
n5GCW2+T5hs1OUBtZHxP60cpoJYeYlHctR3P9et9pY5S0PNKOfGEGAfUCjm+
zJeRgnvFBIF4fg6QYLgQ+vTPThArapWbYuWAvzW8c3Ke2/PDk+JXonQcIBh4
faJm907ILUjaa7XMDpqP2c6XTkiCbM6hg8UT7DD29+vP9iPb88W9Vs//GthB
46bJzX98EhBt4cewAuzAR7NBhW/EYXhTKPXqG3awkCzSnbAXh8SzruVxBezg
+FvM8raUGEwpbm7k32CHWxrZPtvDPRThCrH9BuzwK59b5cMdCsiOReYZV7DB
kSjMh/7VHB52W1Gr6SUbpK7M8aLYabzHrL3e+gkbTMTXKEZX/MSjnov8OXmH
DQ44fbk77tGKj/uXqAb6sUFI+2k/LZ1xRJN3+LR1kQ3Sf+uZ2z7/i9IHtg5H
OrOBsIPJieboWbTP4EBgih0blKmRRQVbVlAuxwj+TJUNNN4/D0r4w4itV0ZZ
q8uzQcBSmixkMmN2l3ePVkiwwUvdiAfe5qwYY2cASz2BDZhrrP5ciefAzjzg
PTgyxQrvlaq2dp8kYBVWpd/Oj7OC8/RZD2dBIkZiOO45PcgK8oss/6W2E7GP
Lvkp682swGWfNRypScYklPX7qIWsoNFFgVeNfJiFza90pRxWYDq6c+aiAxUL
8EmzNbnPCuIjZld2j1OxL2/+NvvGskJZlt2VxH/82Erf3Zvx11nB5h9LvqiX
ACa1sc8kL5gVBhbS0mL/CGBBBpl4pzsrJPyTJg9378DyzpqH/DnLCseTVtgr
9glirTcWtZlOsEJGfW76kWJBbFej5Ss1C1a4M5T5qzpACLP5s3rpgDErVHzR
fhTXLYSF8hQonNVjBU+Hns+sysJYp81W7i1FVkiU667l6hbGtnwKTz+VYoUk
k+TuFEkRTP72UdGPwqzwMXttsM5NBDv8lrG/l8IKho3XBZ48F8HC+l/c/sfF
Ch1hqae1p0Swwo3jduzMrDCpaaHqLyeKdYuxESU2WGAhd2eW6ylRjMGw5LP2
Agvk0CIOc6WIYrvPnYo59JcFspSs7p7/IIrZR3KZnh9jgQcxhw3DfotiEY/f
MIYNsgDm+fHtUaIY9qLxHNzuYgGHt/5Lc6piWN8fwpUXn1mgaMHxqsMhMYyZ
971OXQ0LDBx9fDL5ghimrHJh8dt7Fsg24JbLChXDjtvyvV4sZQErwfmFmEQx
LNL3w2We5yzwdMddxxMZYtjL2xcVZfJZ4MWLXX5CeWLYwNsdv/QzWUBVubm1
9YkYxjpQk3c4nQUEzr/3u/FUDFPd9DpzMYEFGIA2blgghjmKi4rdiNzmS7jP
S34ohkUbNvZnhLKA5l5hG7o0MazknN+dEj8WePRlIYAvUgwbipQ83HyJBcoS
1d84eothHE++EH+4sMCBfdlPfpwQwzSbgr6snWSBS2WPzcoMxbDTf2ViyUdZ
YGVTef6blBgWx9thqmDFAukWYafdGcWwcpWrTEamLPAljZRz/psoNmKr8MEB
bfv3eYv/KBXFtO9c143Zs72/ogZbvIModrZiz9KjXSwwJHq7o3uXKJYw0P/6
rRgLUGpC0r/+E8F+iKvv/sXLAm2L4sM6ISIYr9HwLzo2FrB/uG/1rZ4Ipusc
ly9AxwK99wIUlVaFseQnP8T2zzDDwNv9yaoewlhlU9KA0wQzvNd+Ij0qLoxN
/NW76z/MDP/KAhPr24UwmmoaqaCVGQ7WfC72URLCJiv2MbO8ZAZrg93uSnU7
sMLk8kbvx8wQ7eFRreu0A/M4L5f0PYsZ9rm3dD6aF8D+8nELvU9ghrTLNSZ9
/ALYjGenso8HM0xKZUp5GlKxRZmzJ0Z2McP988xWCnokjCEl7HVVJhMklZ07
NfOeAau+MBugmM4EoMjbV3KfHovAztHuxTPBS03Wm3mBdBjzlGmDbwgTPHAO
2WdycR2xmfEOKTowQeRb40jZ/+YQz9YDjvt8TLDwJs5eugpHLV28rWzcTNAk
dN8vhfEanlR0Lc2PiQk8l6Y/Huv/gBMdnMVt5hhh+LSBgdDVXpxSqqjJ3sYI
B1yIKortf3Ah93en/eMYgcv3OkXx8AZ+r77ehDuCEU5Ibpa3c27hgjLdCjnB
jLD4XvpzuSMdCH6fWfjixgjdN/yHbzIwgMBRmRgZM0awiewQvC7GDHdK1C5X
YoxgLOIxLz/IDPwkAzsbbUa4oVX0c3y7jqmfj4uG7mKEc/S6BJ9NVqAYJb/q
YmaE6cwbnxa2/8OpDzNvu28wQJHgW1ULXU4gbxaG0C8wQNNGC3NgByeQ3taa
7P7BAA0sUwWGK1xwi9qpUN3PABlCI0e+3uAGos93wrEOBog71CyjysMDhD3r
fREfGSDkMo+eMokXkuLYQbCCAWIvOM60xPMC7yQ1r/glA/BxvLa6zUAAnjyV
ywMPGWDXtZXvKd4ESGBAdv/dYYD+3/8FfX9MAO5TFjpsSQww9zrQjHeAAFxC
rozqVxmA8B8ziVePCHEBPhMNfgxg41HgPnqeCJzd1z47XWKA0juv3makEIEj
OeN2rCMDmM2vxdSMECFm6kmIxGEGkPg3aq7DSgJ2i/LT5RYMcOw+ye+eHAnY
WNsVRvcyQFfH1V97zpMg+twQIVCNAdjKMna6RZCA9eOfBR4FBph5qvn0QSYJ
IsVW+3IlGcC7uHn+cxkJWK6wgq4gA2R5qxVuNm/jfZS8ViIDOApa5qp938a1
JWNc2Blg/HTtD8+5bTxtz+V1OgYA008PKhjJwDynZ3drmR6+eeUp8JHIEHHI
XEd2hh4u3Cyh3BAlA9Pzo6JVP+nhZcUwK6/cNs7pzGg3RA+psb795Srb+IX/
Jn5108MN7Y7YCO1tvPbq56tf6MGubpdukD4ZGKXiX/HV0sO9DVmFTIwM4dfu
3S58Tw9PXFtqFgzIwDBUEGJQSg9J90m3IrftcL3S01+L6KF2JF/rCCID/b2P
Jhdz6aHBuzLEbS8ZwpZaFBgz6GH9LBg3aJCB7vAg4W4KPRQFiCUGKG3jryYX
lGLpwXaDwy9UmgxbvMt9n8LpoaAa7f4uSIbQi8zgEEQPRl4tdAU8ZNhsJOXN
eNGDov4f2246MljfkSnld6MHuatVJ2JnSZDrrFtDO0MPDC2y9b9GSLCkatnl
7EAPHuthC4ttJDCnOzMWZ0MP7MfkbN7gJHjw2XfhtTk9mDSAvVoRCWbu3WTu
N6SHiB92SRdvkyBd46W0nBo9uBTwTGi4keAXQ43GIQV6IOo4HGyxJoFea88+
/53b+Zg77UHTJsGIG51LDZkeSFX6NSX0JNj90Cr/9DwdiMSb/smJIkLYxbNl
0X/oYMhufiLOhQjtuv61L37QwZqcoXCQMRECujLHNzrpIPGSYnnABgE+cUzJ
3Culg+SmOKaicwQ44RtX0O5HB96z8jMygjzwwvBh+colOtDRPRXIXLX9ziWU
1Im70sG1B7oKj09xw+On/T8vHaUDNvKzUddsLpgfkpfl1KaDU129Djzb7wpq
2i3rqNktPNdL1evpACt4Iy67C0ubeJHwSCuVhR6MjfAbZ8c38ZCQd2bt8XRA
Nf2v3LFrE3cIcdO/y0cHbyx7BG1eb+LX9i0//Gm+ia875n7XvbyJa9doG84m
rOIRIXqXuX5u4Omd8y7yunP44bDphyzdG/iRlBszanazuExEdjtdzQY+sH+X
W/Dlf3h9LJvmQvYGvlc5JZTebhrnvt+5PnhyA79O7vacPjWBp7/1iHnRvY5r
1Na9rdHpxl3fi1U+qVnHWyXZXJ9zdODaH9r/5pSs436pfoft6lrwvnpt6zu3
1vHg+U6+wRPVuGgPk8A1y3Vc8GVZSvfjbDTdX24WrL+OF7N/vWG7VYJgyC3Y
V3EdxwsWc/4ZAjrzs/XbBY51nDO0SXP3rSZUsJiRZ1O7hl9VXIwTLuhBAatW
Xy1K1/B/8nprCSb9yHyTgd00dw1vKAvW0R8YRH+YL3jsDV/DPT5vDLP4fkfK
fBpqUrQ1/JpISwGD6Th6o/YZFkpXcU2pFKW7S1NImT9+Pyl/FX+sT2fePjaN
Hq9atCqlr+Jnc9mpja4z6M6H5iFXv1V8Uad9q9f8H/K3at7s1VzF74wLZxgs
zqIp1bjIRZlVfH7685PE43PIhWrBQ+Zfxbf2Pld9XDWHjgw2iVgsreCtbwvq
aKHzSNO9Sa+qfAUf+bOSrT66gJ5bxn7qK1jBZR2tBdi0FpGM6gGLpdsrePce
j8HS6EVEXWk8rhywgjdaWzY+lV5CCQMxoxbnV3DNsbXAJc+l7UnD3P2C/Qr+
rCcrSq5iCS1ENgZla6/gVmkBZHOTZeThFsOAy67gMnv3M6Kby+jHQfOYfoEV
3FjrtapM4zLqpDTepaws47KcI0d7962gkuyGN5Fvl/GTxauWutKrSDHyJpbz
ZBk3rzMhy9qvotwLZvX43WW8dqAvXubmKkpVbvi6HLiMh2xthLiMrSIuyk0n
PrdlnP/W57hiwhqKWNr/U8VhGQ8lr0YJ664h76r6RTfdZdxuwkvHI2oNTT6K
Do2SX8bTL/2lHCtcQ2du7GfJFVzGe6kNUkGf11DfebYE4FjGHb7rSnT+XUM2
FvV8g6tL+Mtj1q3uXOuocU/0g5XJJdz59wFmE7l1ZEjeL03tX8KFDRayXI3X
kWpfnbrVuyX8eedZSPVdR0/fR1W6Fy7hXWwfaE9j15HkI1Pj6PtLeJktkIQe
rqN7EazNubFLuKJ+oPWfV+uIeL7O9kPwEv5zrEdg56d1FH0gqn/QfZvPjDPx
U8c6ottjenb1+BLO/Gr8e9f3dRRAYv1NtVjCL505ZnJiah3NLNT+p6a3hPv4
9y6dWFlH53sjV60Ul3AN5q9agwwbaLjSJNxDeAnv8FI+OMKxgewfsnDc5FrC
6QlPrnsRN1Dr9drkvPVFXGHttEISdQPtd43c8fHPIl6refiOkeAGAnOTR98G
FnF2UodEsvAG0lZikVtrXsSpbfSSoSIb6AWxtpj//SKuleG0wLtt25wkmg8X
LuLDRuFjVKENtPj0xOjje4s4T8wT+xT+DXR3qSDE6+Yi7o/OysSRNpCe8Ryf
bsAiXtZfI8PGtYGGkmgvGFwXcRiqUeFh2kDhgzf3Nx1exBV/JIjmra4jafmu
7ynGi/gj6+GPHdPrqN5PPPiE2iL+GS7OPhxdR+7V7hRpyUX86JZhKLl7HfEQ
yp/9JSziYWUK6qp16+jlCQbTsq0FfPqF6DfG8nVk9+TgcOjUAv6ppMggMW8d
LS3cCTQdXMDjGbzF+m9t58vwB4nQvIDnWCerToWuo+H+oH2Pnizg+SpVtRG2
6+i6bO23C3cWcNmTMw/49NaRjC8xQDVqAU/1qT0cvXMdefA8flp9bgHPddfE
d0+voWWsi3dcbAG/f0ZmWiloDd2PF3/ynGcB3xf3zO+Gwxqi9bkb+m/M4wZF
hvf/6WzXtzeDL1v/PJ6pHt6xc3EVEfP39Mmnz+OqaUSOB+dWUclskPdcxDzO
UPKi9SBtFdmjWq5K73mcw7dk5z7+VZTZcwIdtJ7Hs1Xn/4jWrSB5zpjcy1zz
eOxmopO42Aoy9PxxqSR8Ds8yzTZWL11C3rp3GWmXZ/HdBw5nSz2YR6mpQgNH
Ts7i8osnUjvc5lHJ1IOSywdncYdRq25X7Xm0mJ3t/EhhFl8/E9lo2TGHAjiL
6pgm/uGMY8H+AWxzKHSgKrbp1D98lCrZS/X+h6JDf5CP2czgQ7IvLp6p+IMe
97j88TKYwdmDfEltDn9Qg+qvTzHKM3g19fF/5Wu/EcfPv76VPDPbff/05RXa
bySYNfUCpU/jJV1RI8+bfiFpA4r256gp3Lnn5StPup9I94bT/gm3P/jMxo4r
9D+/o4blK3knD2zP4e2iZd4PvyN7jwyGLoU/OO+fU4+iHb4jX9veyg9/fuMf
XeJ5HrQOo2IJW5X7l37jiQG9fzaih9CuKhNBy/8mce/LGnG/0vtRmYqz/yeb
SfyOep1jlGg/Ms673qmrNol7vIx95V3Qh87EQcKu+V/4J9IjFa33vSjTQZeR
3u8Xbrx0wOPU8ldEWdr953XgBP6fW87pN0WdKMfNwkzeYQLXjXr+gtGsE6l+
c8t/qDuB5zDVvbw13oEO1RScil/7ib8NhRU/6Q4UmyLR5XLlJ754dLlO7VUb
EmTFVAcdf+JTmm5mAfZt6HHQyURb2k88xOLe1YWtVlR7+r4ZtjWOXzSczU+x
aUUMynxVO66N4zoTO545cX1ByTlqQkmnx/HqqqUoqsdnJM5vE8BiOI7f/yEv
u/NLM9LfTFCdYxjHx2QcQpXuNqGAZraC5ogxvPb8zoNZ5g1o+vx64tXoH3iq
X9ZZU/4a1PlchWDp8gP/kfg7jjXpE6qYd0kSNv6Bq1j45mlyfkIRYW1Jb7dG
ca+3PdRGtmokeCc/ec5vFGfU684UFf+Atgb7iR/tRnHCULXRi0JAP3YSbyWp
juJHVfMeh+oAevEi+NbuqRG88Y/Y6LXyKmRcdyjF1XkE/zBEKTbzeYfkuCPJ
mkYj+LdoLcHVZxWIx/ZdCpPECL7WKNRX/fst6v0mnfpo4Dse/s+6wNP7Dbq0
uJrab/sdn3mu96LpZSmy1VPme6ryHc8PytozylGKtMOd0wJ4v+Np5RV2z11L
ECNPaxpf0zB+TPrlC0XF1+iOdF66leEwfhz77OgyVIyuuPdRRcWH8R2w71W5
XTGqOSOm1Ls2hMt8Ya1/fu8FcgiaVyJ7D+G/t5q8spKeoRtPMpWjTn/D645T
AhLqnqBDGuwqUiLf8HvsP1+e+PEYCX7wVvnQM4jH1j3aQ8/6GBX37FddsxrE
2f3VEt0d81Ef65zaZdoAfuuoTLykRQ7KTXFU51rtx+e+rvZvpmajy2L16k9K
+/FEDb+6fyOPEJPWA41RxX7ce1+qTFX8Q/TlI6tm2EQfTv1Vkt3emYXuWv6n
KZLbh9e/GiQ+uJ2JlFxMtY4K9eEz6YQrPdoZaPnfS6357l7c9jTNdZp6H1Vf
EdZOvtWLt/cWmNdu3EX2af+0m9h78cKJv1GMY7fR9U/3ddHyV/y2IclsnZKK
Jr7opDi/+Yrv+lSis2GYgix7v/6ODfiKf9TTKPD1v4UEp8gPepa7cSmi9VuT
uSQUtvxyYfNNNz4VNL56QjcJjTEcspQO7MaVG4Z+NfEkomL+uC2vlS781LKI
9gPnOESVlLe/87YL7+/kyBuQiEXBivXFVYFdONaHFdL/uolMDJjOcK524re/
r0cz3o5Cg24hn3JXO/DOg82ee92vI0NfQZGmig48bNZJedk/HD2++sb3X1AH
vn850Ppt/DXkkzovQ1trx6s8uaUa8q+ivsxbV8+9a8dP7i9Or2QOReiJck9M
cDv+zSdda8knBHFUedz8utaGC0fQbBLDA5FnPcfIxrs23E795TeqeADqan+s
KxXShjM4L3/QafZDD3/++O253opXG68Ol1j6IJbZcOPbla14zdZZA0Mpb+Sx
Lv7gfUgrPjny0riL5T90SbIig7Lagg/k17dxjl5GOlqLB08HteCMitjXun8X
EZOF6taz1S/4Lw6n50n8Hui+79PTpmuf8e584/QLeeeRS8w4KTX4M6567eBu
IpcrUs2S/DS81oyb/dDLn490RvX192SC1ptwXcxj4H3ZGZQy2P21NqQJX0uw
ErVxO41OzpJukjca8Z4Vd8ure06hBaHY30UbDfjrz7tKDHuOI1Cuy1i50oA/
y99oL/90DMXtY7Q02azHiWFPs31bjiLJy8HFQ5t1+KLjuqHkXjv093r5acWr
dTjB4Kps010b9ObOHClwqxa3LvL9o0yyRhHP9nyquVqLs7z/FxpqYoWsPrr7
kuhqcZ3+tDMtty2Q4NcCGaewGryhu/6cEdUcjf8e/VpIV4MPLbbKd+GmKITv
hO4++k94wnXsin+cETKVv/M7+Vo1/u3KeYM3hQaIhDozvtFX49cLJoKmBhD6
ZkuwVAj/iOeFUHd25umhJ+cttvwZPuJHu2uccp/rIJ8r0cWfwj/g9tZrlStz
mgi79ek0kfEDbjMW6xX5nzriLKAjn7wOOIsH6Qxllyrqfqf36Skj4HbyBTtv
8Cgj4cAz32a5cJwkln9ozlERxQUdUE8iVeERSR247YIsWg9Wj9kt8B4/9jj9
VcugNHK/IjLcKFKJE+3uCmqRdqK+UBbN8zvf4ceDo+FGvDgyD5uOZZarwL9T
PsbXpgmjims937OV3uJ3t37bm8QKIPnrH7Qw9Te4e9H5BzdnKdvz6NP4QZ1y
PHfG5uv4RyLiiEwZDUJleOq6YaLABDcKigrREdhXis8bvZzaWmNDk9HOiaXm
JXi7XJkPesWEHGIsx2wOvcanKqvPGq7TocZYrb0zh1/hhrmxuqZ31mi68eLJ
8cdf4s32ZebH5RZpTxLYf8qfLsYVqUSL0lv/aKriY4FJn5/jR4431VkH/qaR
dpZLN/UU4TVdrwXbJcZos9I325h/PMWlp2R9xSeHaG2yx69g049x+ZxxvqHb
X2nFCrvlglfz8YO2xSekmNpoSUpbnaXMeThP4Kzcua91NE+VtrAZQg5+NN1L
KVECaIfUcxQVhB/hteK62lF/SmhOlyaLmywz8a0Tum29+BOaqE8Cm4HzPdxZ
Fazxhw9o3wJVT5UFp+N1n+5f1lRJpD242l2ucOsWrn4uLv4f+xXaG44FUUPr
eJwt2ftdfKwLTYuq/0Ux9AZ+R+OubyiXOc3diGNN6UgwvsRdWzTAIUFrLVF/
zXbKFWduYtvo0m7X7/Qpoqm+tEKPFpl/HWy4pP/Af9+vQxneqNQuvqCLm4F2
qNihRv/RNVRSfNzifZoWrS2XRLX1uYn8D6WshWUdoz2xcFYryUlCD1mP9IiX
/0ebNPnQT4tPRUa1YfGbtTdo8gYiEQ1+d1AB45ut5wNpNPe9gYp2pzKQwV+6
kNMNObTue25u01IPkV8BVRrSimmLt+9UlezIRpiJyftH6hU0alotKYgnF/Ua
nuxvgGqa1q15F8SYj476bFo5P2mm2SdKvmNaLkDHnISOCEt30gLiDvE2/nmC
fKLSkfytftqdm6FnE78XIk/zGcF/niO0N5FF5Xbdz9CJGefa0T0TtJ7rfZyC
TS9Qx6nb0ReVpmkhGFPx9PZ/NPLkYXy8aY7GhYQcbPpeoqZvlRV0n5dpD/RV
mUo7X6G7DokzI682aUp6Zs/5W14jbO2tT14TA6rSPWUf1FCCBqVOvXvayIIs
dfwZBqtLUcvf2sP4OU70TSuhCFWVob2nd/uetyOgS5p5R7LflKNHXGPHabZk
tKleScf8+g3Sa/xWx1pORQlqHU9dn71FnRLuE4bRgkhUddKusaAC1fbNvKhp
EUXPlem3FLPfobtlXBMnmyQQbY/Ak8SMSsQeXu1g7y2FvuzeYzub/h7d8bzx
4f25XchJ0WTDLrkKzR2Ui3ySK4/07uQnLD7EkQrL83/CMUqIK5yRYGEP2/Vg
GJ3ioYJWy1/3CA8Dutz6xe1Ksxr69ffso7+uH9C1W55/r5/XRD07KW5V0x/Q
4bM2u68Y66DaY59UE/0/IqbHaqmO5/RQdo3UJ+WoarTuZf+fKBigpLXOOHre
T+hT/a0Nx49GKFTlxuH29E/ompWWMXF6H/Jw1RDNEa1BMZwMO0L370fHH4yN
e+fXoPwj/C4rrebIvCPthbFSLfr08YPcz5iDSJvdJICvrBapn/PXcdQ7hCi+
+ezlNXVohGsoknLFFjEUHmmPOliPAhRCuoPMDqOZYZb79l316PnCtAqzxlH0
jVp+Vs6xAfkcYyokGRxDny1cFVd/NCDBPNoX9svHUWU4/0KjRyPaoLA/tAdH
9PRN3fv7841otLTbQlfoFIqUkrXSZ2pGv3DTxKimM8jHoYefJ64Z6e13G7U0
PIfOJEUPfyN/Rv1GdT/ivjgjtD7hFbbzC+pR3vU2T/4CUlK9q2td+AVdoc1K
yay7IeHzZoySai1IyH/Y7fy4B1r/Zdd4WqIV5XsY09lGeKI5pmdK5s6tyHLH
YYrqIy80KcacovqkFXF20v9Wb/4P9RwuPc6o0oYaq90fhlj6ohZPbvjt04bu
h+x3fJnvh2pjnaU637ShJNOotF88Aaj0A9/fXKwd+Tylaz9KDEZFAxet4yPa
kVNXxlRsUQjKXaop9a1vR3ec1V/jx0LRrd1+oSaHOtCZxOpOwcUwdOluN++E
Uyf6+XpUhEJ3AzmXKPm05nQiB8N2EW6RSHSiJbLnzc9OpG+eVaKwLwodYNZ6
dPNyF7J9KJywXn4TGYonMv/3ugvRtxfbGDLGIt29Py84LHUhJ86Y550OcUjW
67aqwtVuxF4oROVVTkRicdPp5OpulHKs4Kbs0SRELTBdW2P5ilZWLlSziyQj
psGl6uaEr4iOd1Oy8P0t9H2//eFLmT3I+hvFqf1IOqKNhZz+PNiD/BMaNDzR
bXTv2qOLiiK9KECVr5Btzx1kUzF5Y/J+L8o+k3L+9c576KPClTKXu33Iupvj
5CeXTCRa/+hjTU8fMkku8WGPzUJB52q/SAn0o0ji1a6X/6vpvOOx/t7Hb+9x
L7ebZG+y9zoXIqUoFRKhREuJUhqK3lmV7JUkyYqMMso6FFFSQlT2SkjIXn3v
z+Px+/15Pc65rnOu53W9zrmu1z/ncDrSeMj/c4jepx1V0c66EPcYZfBlCLrG
9aDDDJIHH+tnos28Rqma9h5UKmOoIjKdiZx2TKpuJfei1F8MRjrZTxHpppbV
j+he9FY2XCNOLhvdmm287HC/D83WfFUnHctDA/cm/ytr7UM7ea5kpZs8Q0aK
hGgBvn50TbSL8aRYPpo/eii3/W4/2mcca7A4U4A0Jham5CwGUP6D1nHqZBFy
0+Pw6/IYQKe0F7h+nC1GkSHCKyH/DaB6OULhnYViNCGJWMfeDKDy3rHy79wv
UMbhsK2ZZoMourUbdrmUos+5KU/2Hx1EW71347srpWhzKV+BOXgQlRox3eFJ
LkNOcW3aR+sGERbgDpkaLEfkj8I24jCE3AwyLu9MfY3Mtmzr+OQ6hHYI9RVF
769EPieR040bQ+gpow//Cb4q1MLq4dlXM4R8xf1P/oysRv+ZFASmGg8jASYj
KekjGM0XokKa4QhSvv7ePHn8DWpRMiT5uIygjwZHy5y836In2ToX392gyyFu
S5Hzb5Hdo22G/m9HkBtHyU0vrkZUHLnlXfueUdT0S6PryoEmFMYlqKjkM4p0
JbJ0L/5uQm4hpHvBMaOo2TFCgBDejAiBnPvVu0YRYfrBd6Om9+is91JfpNsY
stTLY2b1+ogsf82ZjgWPoW9sTjsSBFrR1uPTmcZPx1B2wJ21mcZW1OI8emrq
1xiyXjEp5RL6jBR3ty/u9PuJpi/UZlvHt6GfioV8rCHjyKZ3vxhjRweqyco7
75wzjvgeGs1HmnWiBMmsjhfvxxE/h3PXo5JOZCn8MOUo/y8kV8vZa5v4FWVy
3pHFSb8QPLXMZ/frRm7jniZXn02g7pOfXwRe6EF6Hkcff/k4gdJM3dKfrvUg
/gEXFsWZCRREuMd06L9eVNN14H231iTSPXa16VhKH9r6zsxep2YSpUpEnL92
ZgB9fyp6dvbzFLrC7c2S9GkIlbHl2+XMTSGi6YrQ0NZhFOulr+tK+Y0ckpKN
B88Mo90KBxg+Ovym1w972ld4RlBNfnhMTh9dFjuy5n1wFD1+MV/mOjWNXt4Y
evubdRy9dBv9N3ZrBjn9DUsV7fyNJInKvvVxM+inlucvUZ1pFFXnO/Lw6QxC
jxLP3EqcRt6SDM0H3s2grXeFz544/AfJjgjH1HPNIl5x0dZYvxmU5LVXOi16
FrVcnpqUZJ1DV89WWh18NIduN3p/TlZaQGZowYOvcA59LNkt/OvQAuIiqAa9
q5lDL8kXg4hhCyipOOOVft8cikhLfDUwvIDK5sMVRbf+Rc/0fjzfkryI5q44
8vxM+YuWA6OD/y4uodfWMfLpeX+RVIMYp57EMgoSadl+6PVfdKbJLFbEehkR
atD1D9/+0vt6zc7Sh8tIhVFuupA2j9KsiPHlxivoVOjCp8sJ82juKdcnq+Or
SMNRdUo9ax61ugQqPwhdRSvyJzkmS+eRQupP0525qyjsfQ+4dM6jWkY1mayJ
VZTF+7bYlLKAJHsy2vs91tDZvo2Pq1ILyOtEm969oDWkXag78UJzAZHSJxN9
Hq6ht3ufScruX0CVIbil4csaGoyNieWKWUD2X3wsxDXXUY5HS+GbxwsoLHzb
6F+rdeSjzdZyrXgB+WU2DHa6rKPNrwEsfz7TuahZFhf9t44as1+I5wwsoPHN
QodHCevo3uXfRu4zC6heK5kpLHsdiQi7X2znX0QJwid6NRrX0chESvRdsUWk
pjFXO9G+jp5VdhRYqC4id5VFnrCBdeR7l+/9pskiejlrksA6tY4MXKzGym0W
ESXDUOnI4jpiUglmOn9kET1qcU2++28dNW9WiiqeXUQGmbfz77BvoKhPCwbD
1xdRlbOdqj3f//43qzqk3ltE8pmpk2PkDTTP3ueem7aI7FM5d4TS6PPP3T1T
VriIztqvduVu2UDKXQaX3uBFdFB8y8qOrRuo2eRX0Oc2ur7VSbbDdNkzK/Fu
79Ai+nWx16WHPp+JzzJx4u8iUr8h5NZAt5d2cf7xEssSmn0pdJ6fsoEMejPy
WahLqD3v1/IL3g30dfu+cqLcEnK75OyRz7qBfPP/1YnqLaGTp5tk5tbWER/l
eYvSziXEgRpLA2fofK46d+k5LaFnxX9jrYfXkdUw15DF6SXkm/Jqh10Hneeu
V1N215aQx3EB97tv1tHNEq8l13tLKGnleMDfov/xpzJ5py2hb8xGWkGp66gi
6C3PlcIlVJe+DVRD1tGBX76CoXgJlbgVOCx5r6OZvRKScW1L6MajEdP2/fR4
VnxSfjy0hFgUoturdNeRonig7vO/S8hOauxPgRA9/qHKZvQCHF3U8QlPX1lD
m/bhDp2yy8hN4fZe3xdrKKVG9+iQ7jJ6uChcYXFvDenIjp35Y7WMUqS+k5iP
0/N1wSyY8/QyCv6uMinNt4a4XGbvUq8tI5pTq1lgPz2/3z5KlLq3jOQjH5s/
e76K+mPX840LlxF7A2XhlOUquraWV74LL6Mn+pLoL98qoh07VO/Qtow+LO3y
MuhcQXs1yrrO/11GMo+KimedVtBUssdQIMsK+rAQssdReAWFMZJ/3xFYQeIO
LVWnupYR/nyOKUt3BfFw7PYI2rWMnPVEeV9YraAVggPtOsMyWn7UIogPraBF
w6fJ5JdLSP2cwrbvV1cQbc04lJGyhDJ4hx348ApK3myRu162gEwuRh/d0raC
VltaPCccF9D3HuQtP7SCxmqN73ctzyNyfmqwGcsq0tPb5i6nPo/+22Vf4G+1
irJdjGZcb80h8RKWiluHVtG2yjsKkcQ5VCX0oj7q1Co6kBb5Q/nhLFoY5+/O
u7uK5pXrusvzZ5BnaDNT/+dVpOIpLT916Ddy5j9d3jywijIjcJy+6xTal8hz
5uXMKmLfpxPL6zaJjLJtO8MJa0jQtE3b9sAvRHrXma21dw19y7CovMw+iqrZ
hnZHfFpDkRnhZ6/pdqGSyFuMF/vXkMntHAaGsg6UQ5Upc/1Dj3OShK6E8hcU
I3tCTJt/HdlagRvDv2Z0wnJ6tt9mHRHmvUeYZDMQJWQ1Qbt1HanUZJeNZXTU
cvGlWov3raM7+ElHeHpX7b94Ywbu6XUUndCnw/30e+3E05snB+jfTZGciA3R
faAWN7AZ3dmzgaxOH9FwyRyrPcNKHhxo2UBjMuMSUt9ma9/8p6R098Mm2nvn
4J749H+1Bv/i02V/bKKZplIjXxMGXBLAQK2b2ES7SHZHcvMZcMbZToZFzn9o
ghi9VyacEQc73vjqavUP9fxVsfM0ZcZmyu1Bmg3/kGCa1aJBNht+nWW89LHj
H+Jmt0w2IbFjdYmcMydG/qHfBuaq+Bo7JtypedbKyAAK//LnKXs5MMPN2ARm
CQaYsqE1jU5z4oGTxme8XRmgKncb2xAzLxbJnssy8GIADoG6mV53Xuw4kj3I
fo4B9rw4O5Rfw4s/HyE5ZAQywJF41eKEC3wY7/9p2vWQAVSbS00Pf+bH61Gp
1zKfMgDBXiS8m0jAeq37ys8XMMBxmwKoNSDgIqsqZZ5qBpjUEl+RjyDgR8bR
gqY9DKDPP6H5QZSIv1+xtOMbYYDgIv79JaZETK1Yu/tjkgHqzL/1Zx0j4kgN
Tyb/NQbQk24QfZxJxO/PbTE2Z2aEcYWblg/eEDFbwedLBG5GYJn2aLozSMSB
coa/84QZwWN7+7yeMAm/9piRuyzJCDUfUg0mtEh48fHToxaKjMBVfpl01YaE
z4oQuvv1GcHhQ8K6dCAJ5x1qIBWYMsK68q4xjTgSHku4sufKTkbwlj1L4sol
4SPE0XrKIUboGl2x2WwlYZaUjvk77ozQd5Vd5eIgXV/yrSzzKUbYZXFZ2mOO
hPc+e+F4xZcR9L83+L5lJOMlzScRs1cYwUoxwvs+PxmnVcVUnbjFCEYCpYE1
W8h4u0XwdP8dRuiZeitrLUvGEx/PizvEMcL5WsZNFVUyjrJ3t2tNZQSznZWl
x3TIWKd/738WTxnB/FS40LAhGfd6QVlVAV1/LZKQjcj4vxnVcc0yRrgxWJOW
a0rGigFiws9qGKFim9TYCF3+zMi/W/IdIwxpysrvBzL2j9i8nvyJEbBLb+O0
ERmLkKcLCd2M0Jly0LJEl4zfPOgdDB1gBE2TwT1JamR8Svoj+d84I1iKeuU+
kCNjQkGVhf8snUdTya5yETIu086/9HuFEeJTG3aN0f11rnmQ68HEBJcS5Sel
6DyYdtz58YOLCTJyTRJPz5Bw7qcrvPvJTOB6KHG0opfOz/EUer+FCai3TZPZ
m+nxGzh03lSaCYBP9Mn+EhJOPbnzSYUyExzU1ZBKTiZhszm9TlVtJii7vnKy
gx7P8Svy7NnGTKBWXrbCeJSE7zPT9EUtmSBf/22oqDkJ69xlPx1vwwSfvgxt
yEqScA9lKZXHgQnC94depf0jYnnZrwxrXkww1BIoll9CxK3PGzR8fZggvWwg
dWc4EV/ULfX4dZkJdpf6fWl0IeJ6q7imrnAm0Om+m36IgYhPtN1atYlhgjtH
B3zOtBIwn5OfcmMKEwh8u3j6UAoBHz5tF/XyGRPcflJJrFUiYKZ503qll0yQ
Xf9g1XuIH+dcU5/PqGKCLXaXFflP8uP5ewTH6I9MUMrPG3TiJB+OLGoVO/uH
vp5p3VKeDg/W0q/ZN7rEBI7r/fjgI278va7gljMDMzTxByQ0MnNjufa7P3cR
mUHnFpGFgDkxXthVKKfJDL9maaLrbOzYM9BgMM2QGfY4uFjes2HDvOyKZOp2
ZmDf2ioiHsOKnWicl1gOMgPTI/LcBV4W/NfgncmgPzMcqiy4J/eVATfuL7J4
F8gMhcwnHWJ5GXDSmeTdBSHMsPcN2+tXtzZrTdJOOwUk0Pfj8OdCgNlabQQj
wZ9YxgxFqgoS3gHztZJNjgWmC8xgvL5aqJjZVbvv4MSWDD8WOJznIV4vvIqk
z7ZLhl1lgW4ez+bnKutoMaRK4ewtFnhZGambb76JUisidQ1iWcDnsgf7ii79
nNiiuf9LCQuMXtxpG3ecFW4OXY1gmmOBFi/r9oE8Xti/5hE9vsICYU33DrIU
8oEsxSaplZEVqvpbZsqK+aHFQjwrhcgKUzFSSPwbAWi5b+s01Flh35rHdt5W
EhSe41056sMKZreiFDmvUGGqXW1p7jIrPNyrUhM9SwVFvQMLwUGs4O4++/ev
pyBkMjyYzYhhBZdqR6OJXTQY8qj5o/GAFcorqib2vqKBWPPg7/onrKBQ1HBF
R0YIUqLlJ4ZessKMo5+L9IIQdC1Yj/tWs4JKnykHwyFhoDidG2NqZIVvLwP2
ML4WhvuSZUOSXaygEfFpQcRvC7SEfBso6WcFLx7/ee4PW4Brcr3PbJwVzlA8
PzaLicB/L8x/HF1hhZ5QYqZLrQjUC3p9m2Nkg2Ma93i5uLbCv6sRXcFcbHBm
elJdY99WMBoo6CSR2UCW3Xm9Lm4rXNne1p6xhQ1U933PedqxFcpz5ts0pNlg
NLqzqZkgCvM8tM/1ymywNfPrji07ReFc55GWIWM22Hb1wZ+1AlH6dxj83teS
DRIO8/V4fheFiYdPm5hs2WDAaGdFGZMYyDE1N8Y4sMGv66mXv8uKgYfn1FtJ
NzYAu8TQOksxyHjP/6bkBBu4dVe8P3xUDPpVNOvMzrOBV4NodnKAGIjE2td+
CWCD18/U2M7cFQOnpYDqo8FsoNtr6fQ2RQwSDz+snItgg7ej1k/iMsWgoxa/
Co5lg+AEB79PuWJAkh4pJ6XS1483++uVJwa2YexlGZlsIH9c/ee+LDG4O6X4
UqOADc69E3gR9FAM3u+1KakvZQOWCzKuU/fFgL30fJFdDRuUL29PDb0uBtuF
4p8PNbLB0PPjTTs9xSD4ekW+7yc2UM7onFPYJQa1gz/ymLrZwNDi5oCYghis
W/zLiRlgg9aPogRpZjEwyJPMlvzFBrv5HWpUu0XhEp/l05JZNojLeffLKEcU
XvqefGK2yga2DgwOln6iMPf17uMvTOwwYHo8boe+KKgaFj06ys0OM2zrG0ar
W+HMo/aHc2R2WHWVqJMq2wp5zEsPgkXY4a2U7MDKma0g3WKclLGNHfYOf7zs
80EEjqq5J2josEO8/aQJ0U8EHsX9F1dvwg61AQ4MGQIiIOzyIWrIlh2UJVrb
H1pvAYe66UhfR3aQsBhwJvQLQ5wM6R6TOzu8qPzQEeQtDPzTjuGSvuzQNLql
7spVIWC5MRZ0NI4dTkuxnctzFoSzfswH3VPZoSQu987gFyp0e4nLu2WyQ+/9
h4Xr26mQv9ep1eUlO/jC9jSerQJwQLJV+FAHO3x/1fVm/SEJaqiTvx166Pp6
Vlcr5okgz81RZz/CDoWBycbvdhBh/a+p14F5dsj1eDe7o5EfnjSUvrClcIDt
UFVg/yAn8Lz+EmIjwgGt5X2l2Y4c4P/8z6E90hwglG69ebCZDXYlKjBYa3GA
ud0PV4lkZpg78XC35QEOkFBXO/3jzwoy47k9ahTHAc/jv5Gav9TV5jNkVBim
ckCebDpjwaWuWupCzR2DTA6omfDE/LzDtRO9y+p6LzlgpW/Uu2pkpjam8Eyg
ZgcHwBnRWykN/2qH7A4IKlI4oXs/Lr32gQ/v3nF+Ql6EE/KcFqNK9hFwmWFk
tZw0J6h792zeMyLiCOmmYzJanBBRTBy35yNjjUXDIvEDnEB0OH48/yEVByVL
7RSM4wSuJjunQcutWJn96frvB5zgkGq5sMQpirsvyBa9fcIJ2xW+dQc1i2KV
vQqCvi84YS5Z7kieqDj+Vp333qqSE1CY4ZWcy+L4PyXlQLE3nNC7eOtK7Gdx
/J1NdbTlCydYG81vjgRI4NsXipKefOeE2/zNbrIfJLDakPruK0OckG7LeIpL
WBKHVmu9kJvjBKn0yMu+RZJYQ6nMc3OFE8TlbIXblyRxX5KucCcjF3SLG2fe
N5LCWhcMgoKJXFDXEpXRXS2F+wcrtQ4JcYHDb81Z81UpHGFrPK4qwQVMcZdH
mjSlsXZ1zQM2BS4gvCyucjgljQcUwbZXjQt+d3cIDD6UxneS6phe6nFB7PLZ
yYOt0liHzbwsArhgt3h8avaaNB7ye3vS3YoLRMQ+/3knI4PvDVps1dvLBW/2
MAnm7pbBerbvPvM5coFtjOULYx8ZPFJl9d+oKxdwvn7XfTlKBt9XfK9b5cUF
hWb3STYFMtggyXoy5hwX1Ofu8ixulMGjrB/TTl7iAmF7NsfEHhkc5WdjBze4
oEOl9/f8tAw2HPzEKhjKBWdnHryo3ZDBYzb7Xv2O5IJGW4ea3xyyOLrqy5m3
CVzAvfK38CJBFhspHhB/kEbndenRaxuKLP6Z2Nl+PosLwij6mT50OYbVIdTq
ORfoleQ2t9PnG/t1G4iVcYFlhYLkeU5ZPD5waHqhmgt+EC+YmW3K4DibH49b
GrhgbM+oq+kfGYyqnA8++UjnO3F7/0n6ficU+jiudHIBS/tmammDDE5IdK3a
28sFj2QvHZd8JoNNWQfPyY1ygZKZU3D+XRk85XtUanOKC24rsV7ed0oGJw4M
f+2Y54L4o07X+LfLYDOb4xHP1rlgQdEwYFRIBv+uHDMOZuEGP9dRvvZJaZyk
cGLWkYcbcoa0ErpfSWPzxF+ZqhRuCKl/J7l0SxpPs5x2ZBPhhvuyLLfVdklj
iwHv2hdK3LA13vzd5nspPLPnj2+EJjc4CFzmeHBbCqdW+si6G3JDgcXwiBs9
v+YS/O7xWXPDLb3atJtpkvghywKM2nHDFcYHLOM7JbGVr/98pRM3HG6JocXN
SuC0PQGHT57iBvOggZVebQlszXJD4W04N6wnF+2plhXDbtUGHdtjuEGbuX8y
Xk0U+/svBjakcEObnuKnII2tOGPcu6PxGTekxw8iNbEteLnF+UbzR244vYPz
X146FfOF0BR3feUG7/ILd9vOCWAp1NHxvo8bXNte/rmmR8E2xdaKLX+4IbFz
YdqsnIgz4w06W4k88Ptr7IrpEAd+bbN4w1aYB8xy7p/4JcOGP7GXKH6W5AEe
tvh7t9yY8WqAws02TR4QVKr/mxCwVrv3CE2p4yAPtOzWcjImtNWuyy7e/JbM
A69TR9vG21mBNFCs5JTBAwoWcvV5XRwgl+z99XseD1hHhIrofOcGO+5RpZ5K
HihvT/X2mCJAzp/2r329PKD5327/ynYq1OTcD3Id4wGPzQr/OEsatLtbKw9M
8wClmgWNlArBZnt90OA/HrjcKvHkdJgIHKwoVh6R4IUKomD04RVxOHXeu8tD
kRfsFNSSfB9JwE1FheBRDV5gf/5qq7WZJOSnpneNmfNCnJG8aNh1Kag/6Bzs
tZuu3+rtEi0gDV18tG3jB3jhKxaveZorDUxB94N/HeeFncNW/KhBBmgG1ttO
neWFCJtSce/dsrDtL1v3hD8vBPayFy23yoLj8cBtU6G8wL0+4xfcIAdnRQ26
z0TRx/3lW1X15eFW10Lw7yRe6GOe4k7OlofnO727p3N54XusXj77BQWYiZF0
7CvmhebJykfFHxRAo6er6+MrXqD9cezZIaoIF2TuOVTX8cLvs0ufnp9WhLKz
Zl35zbxgXr3a9uGFIiyXL9mntvFCajav8u1FRTBgLPh65xsvuO5vk6zXVIJr
u47aXx3kBZXjZzZPnVaC2ljBr6d+8cLGtyXSyYdKwNTbctBplhfiFxubspqV
YLtscOfOFV6wLA7N5J9RgpBzugf1GfmgelnPNoqgDE0VUx3ynHwwZzD/kKqk
DFxMGQdoRD4IjwpNjkbKsNvaoYNdiA/mZ3tvz+5Rhsg4ngNL4nxg2afxS85e
GT731rWPyfNBeh9frJyjMpDkLu3/qsYHPQe4nozsV4YDPsrtDXp8UMlx4P6B
ncqQ8GrQrhT4QHhqWfGsnjJ8Y0r8kmnFB31xE88UJJRBZPduu7i9fKA0V1d0
k1kZjsQzfrnlyAci7w0tz/Yr0dcp2+fnxgev489MTb9UgiG5M21HT/CBrVPu
A4b/lED6vMQ+Ox8+0FeQas7YrQSer79+Nr3MBydWNU5/5VOCHOa7e9Vv8oHh
4/0bD98rwsRu08/iYXyQlvPu1sYNRVBOWLQlRPFByZ/xyFUVRTjb/+zTv0Q+
qP0jZpLapQB/z1M/9WXzgSQf9+CsgALoVH6waaX3GX5x9+Yrn8nDZZag1upy
PlCXkftjbygP6wmTH1Pf8UHUFR4XYys5MBlI33P3Ex+EPXcsftYgCzcV7D9e
7aLru7AWqhnLAksVbnH6yQcxZ25sdArLgCWr/+5df+j6H1vmZYKkIcxGqUV/
iQ9evrrUPzkoBbyD8R9o7PyglqZvsCtWEqhsp99/leWH53/MlAPOi4Gjrfiu
RhV+uPN+Vkx/aiukJHU2l+rwA5O/0NklFxEQVYLmOEt+2JY38r1ITgjk9go0
2XnyA/kGMeKGCwn0UmobWp/yw9GfzgqvNH6jEZVCoxPP+SFwZAe/lto3FP0m
7QVjOT+4hc8r9fni2omp64+1mvghfvb+ktDgXG0qMrqeMsEP/m6l1edduLBV
h9K85l9+qGOr3/UngQ8vnNhy+uMaP8ze7q5I9SRiuZ3XlW+yEWBmo5LxfrwA
vunrLPxCkAB6caeHpN5uxV+NOjr/bSFAW1R+4LZ6MXp9szt6tzgB7nCf31XT
Q69fHhhyjMkT4HmSl+3zJnq90SC8SDMggLr6vof6p2Rx2P2Y4uMmBEizXa27
YiGH+w9xeZeYESDG0/huv7A8vju9MmxtTYCofQ/QaIkCHqo4/yjJlgDbFTnG
Zi8oYr1bv5xG9xPg5PUdwyuqSnhU8FtboDMBYktH/xu+r4yNhvbe++BGAG73
LWrGWttwTH6TFe04AfYqKl8M/rwNj/sDy/GTBBCpymC54KGCTUwraou9CTDy
eCm1448KjuNWu7p5ngB5B3WkT/qq4snObB1rfwJ0j6C65UlVbJYuNpd4hQA7
7+29IquihpNOJRaMBBJAiS+gO8ldDU9r8Z9Uv0WAI8VOrwyi1PD2fyHSgaH0
/Wx2Ppt/pYZTmjf7398hgFno+5SiPjU8G+v/QDCKAJ675boPbaphqyPT9h5x
dP61WXK9NHWcJu9JKk4iwPh/6s3yKup4fq7340YqAbw3h4KVTdTxruqD4bse
EyDuW17eNyt1nB76cXviUzr/5hBVKRt1vLjPgmEklwBhtbYZG3vU8W6R6kq1
5wToWRIwcaXPfzKmdel6CQH07dhnkLE6Xi3K13hfRu/LA34cSVZWx3uvSk9T
Kwkgdb1u1pOqjrMsUnOP1RKA8vj916eranidn3K86A0BfNRbOQ5+U8N23++I
b7yjy0frD1wsUcM5mcw9O1sIcHpvyBHOEDW8efZqYsJnAjw9KvRU4IAaPqj/
1264gwCs/kYh6SJqOJ/5NJ/aNwKEv54L9qhVxUytQ83Xegmw+U14IddAFT8/
+gWoYwRIv/1gfJOggp+evDZlM0EAhVMqp46e24ZTfWSTQqcJUPJjT3TNG2Uc
EXjlz/IiAfzue5Ut2yjhoNvSD9TXCNDV+u68Uogivny31fLUPwIcM/PdzvBS
AR9PkUz7wU4ESgrHuOu8HHZ+3LKTwkOELulK8cPsctgux39hN4EI74c1tn0j
ymIoe7+7hkaEQkFVm2N80ljki+9augIRmG4PyFEOi2HyN5Hsb9uIQFRmFavm
2Iq5BhrtSBpEkGQt/iydJ4yXfwvn3TIg0usF+ar19wK4nfONo6c1EWY9S9b4
NNlxhCm5TMmbCJ0WQSPv65khyKra3eM8EQrczxmep/chl229eB9eJEIPQ8jI
zkw+8HSp9OALJELuNPVffCUFTAOOkWcjiRCcVfiowkkM9G7y1irEEmFjwI4k
Qb/vVULLTx1NJIIXf9b+MpAEkXju+vZHRJiz+MzsXycNy0UvfMqKiGAy/Zvd
55oC/Cl3Efnzkgg1vBMNPcmKMFbD3iT3is5n4iLz1UIl6Gg5LJZcR4QEGT+G
pLpt8KGd9UNbAxGemrb8NK1Wgfrvhf5c74lwQ+L1gl+hKhSOM7de/UKEPvm/
sTOv1SDrT0HAy69E6H5y5lWBtDqkLjrI/P5O95/cYzYdpg6xG4xtMv1E4O+8
W3/7pzpEsORfOzJMBN7ZKd+doAFB3PbyiT+J0MbsuosQqwGXSQwdnyaJcGcz
g+9FvwacE8q7wTFDhDWmj148sprgKX5AyZTex/Kk1c0tH9cEvz9XTNWXiUAa
tBcteaAJN2seO0isEyGtWjfk4QdNiLzX5E1kIMF1VbLzkwVNeOD85xYjCwnu
RvPdKBDSghwlasosOwn4Y3pCsnW1oGzVqGiQmwSM7MdaA2214E3zscY2fhKI
Fkxcl3TXgs9JET11ZBLI/m2Pu3VGC3q9iueKBUngxdUyF3deCyZ0ujkytpCg
Mfq6m7WPFiyx/hONESPRz4uKxIcntIClU0Y7WIoEYhe4rf9z0gJi5m5rXzkS
jDi2Kq9aaIGon5/7USUS8ErELqwpaoGyWcolO1USaD/5dzKMUwv0iXX3zDRJ
8DaAwy19UBMsB34+0dAlwVJixBvLF5pwoJDvtaQhCXw6UMrNQE1wD9T+TEIk
WOPgZj9orgln9ziPMZmTIDI+afdHRk24KnJrfc6SBOcs936af6UBYZO5pOFd
JLj9MZ767bQGZIQvmbyxI0HZcHcdrVodCh1FD76wJ0Eb18+RZGd1qJKzOP3E
ic7vhrSV1KIadDXEJN46SgLxa+bPigXVYCTuVYGfJwlulH978R2pwtyxgTfH
TpFg28E2Q2MLFeBhUpkx96XzYixa+aCqDEJtB9i0/Elwx7P6SIiAEsimXxWR
vkKCweA2VatZBTA1abZiCSbB5puj8Qp35cD/isfjt9EkkNyi0Ch/SBL651Ls
LIpJ4FEkmyhO7/Om6upOaJeS4N8HPxe3iyywGjUeKPOKBLFfpdYjz64jiqrO
M9Y6Ol/ndy0vSpqR1ek25sbPJJh4kcZgN8SOS4bZSy1nSCCyVVuz45YkvtD9
ofHOPAmOnWXxY5KVxrof73d/Xqbnk7jW2u86GVxVJrjuxEiGkXtHSQYj8jjw
2Q/edFYySKtpKBqfVMSQ/khslJMMWyRjtc1HlXBDuJz5ORIZpIL38JfWquCw
wMkDL6lkIFjFSdBPVrzLr9BzRZgMegwsPzXK1XCrs27ELSkyCF4N6lBdVMdR
+9YeNMmRYZbhet/HOxp4v2VtAa8yGYoyXSQuCmvibtUdbYlaZNBy6JhsltDC
KdLcwz16ZIh6YSr8N1kLuwh9mpcwJkOB6RR5K5c2FueLZfMyJcPBnRqPeHy1
8RCTAy3fggxuYcv/hbdp48wlYcXZnWQgaq0XHpHXwZ5TfYY6NmQQ7pSwdvLX
wfKDGXuu2pFh5/6ivj2VOvT72NMV29PH33id4VvSwc/fK55nPUyGfZ+ORVxQ
0MU+tdPBu1zJ4D3x6pqznS7WeFkSd/8YGZg+vNmTdV4Xz+f4Z3V40fdPYx/V
DtXFZQ8NKoTOkKEu/pnI3xhdHBCz2XzEhwzZUec7m+N0sVFo/Y8nF8iQ1STM
mXdXF29eDfk9fpkM7+L1foRe0cXYZ9e/bdfp/OLscg4f0cW3jvMR/YLIEPDi
EFlSTxdbOn2RrLhNBldpZ2IPuy7msE3Q2ggnwwnjc38jP+rg9+ZOlmaRZNgl
3nB2e7gOvqsn6hgaQwbbxJEMLkMdbLNt6GRLAhnkXFa3zg9pY6Jk1lXiAzL4
1Bn2CwZp4w7qqXv2j8gAHvsdogW0cQK3yqMHT8hgcL/N82a6FnZkmCsayCaD
RWiKE6ekFhZeKK2XySfDMV6bsQMpmrjnV0DHqSIylEhkikRxauJHfcZjhS/J
IMpUdXzqnAaWbmrgNKgmw9q/LZrDkup4rCp8y406uuwcXrNwTg3nFu/Z9raB
zm/DIUbjlCpWedC516aVDIobFA+3fcpY9+xo4tF+MlBOxBy4dlUGrx7Nzc0e
JkOTWk5vRbYUrnLwrpz6SYbGav8u62YJDKYLff4zZNBOi48S79+Cd1FYZe8w
UiBjRd1ZPZAdS7VZZISyUiDii9GO1f/+1a7fCxH9j5MCDaNWjjnDf2oL2DkE
rxMpsLHjgJ1H/zQirHFxnJOggNayndlGKhnGy63/Oy1DgVLidpOoUEGou3CX
4YQCBcYEKXJlZ7aA7zTvips6BVwDsp5pRklA5yBhws6UAk/l27nTGBTgedo+
T1sLCnyZTtaTpfcvIYdjhqx3UsBexaK+LEIZ9DrJP7bvo8C026nr079VgRBz
wMH0IAWiVyoL7r1Tg1828e3GhyjwwKvIWiVGHVKaqC067hToyJQ6L0uh3z+3
Haw0j1NgZH+83qf3mrDbLOmt6kkKFBkwMMhc0YKNSqFq+fMUSPu5pz62Thu+
XnbSl7lIgWfHtvsTD+nAc+0HpRIBFHAmnhtnHdcBt0KR58JBFEDBms1Gk7qg
f8ZFUfA2BeLzDsuvH9EDkkJaFjmcAoKzEaeVm/VgYrRPknCPAneuOr2IU9CH
Nxlij3iiKdA19OHzvxv6kOrqtoUzngJJvLePGbXowwWRx4msyRTwbC1fFOEz
gD3fBslMDymwuJQpctnCAGQTJKM20ykQxvwsTN7XADbtjvGsZdJ5f/0sxxtn
AF38mWFLOfR4Flbrcj4zgKKWEZb5fApEvuJ3Zik3gLBwmaCZIgqc92AumaDL
7paeG1Mv/xevI0P5BQZgwJwd8KuCArW376tDkgGQ8M+F0SoKFFzauJd2yQAm
r8n7DmEKvEo/m9pobQBv9U9O972lwNKz8PpKigG9vsg99aOJzjPgiGrIF324
+GJirKuFAiqGM4Mat/XBxkfpWMdnCrwfKy9oV9YH2W1n+j93UODKdkHjG3Re
/37lH/7YTYGJ/FLivsN60J31u6u5hwK+p3HwySFdKDqmcqBxgAKJUZyvfh/R
hXDxc5/rRyhgPcGQy96mA0d7C3fXjlPADN/iGtPTAbKDukXFDAXmvM7F1E9o
wRTZt+7lPAU8VhOjtbW14O3nEuPiZQoo+6jF2ftrgv8uLZ08BgHIqk0n1PSq
wx/z7IwYFgE4FG6jt8ihTj9nhPmvcghAoCvjJ2dlNTisxjBuTRCAsVe3fm6+
UgagtiT/FhMAzWjdJ1/6pIF76NiGGhKASKHB4btCa+i/H19PCpkLAOH6Ed7C
J4Nos2PnV8YdAqC/W3/rd8pw7cw71cIvNgIQ6xf8+ocaO/5asOZ24YgA8Jbb
Ph+Z3Ipts89+dD4qAEechnSpehK4KX1Q38JTAIwDK55MXZDClbHvSNSzAlD2
jxpa9V0OpwfEvi2/LgA+nwSvvNuqhoX82NTTgwTg29X7PItb1HHMmYCHYbcF
oD7MnS2TrIFvu7r6H7onAOQSIkfRb0286fhlyDRaAL4oLawof9LCl+0sbBXj
BSCsLirOK0cbn7JQkl9LFYCv/92N8AVdPGySFjecLgCGeb6uAZu62FmPyNiS
KQCORxp1npXo4a/q/3m/zBEAe4d4q3xnfWyrtPQtNV8Asn9yV0uv6+Mm6VOW
t4sEgJkY+QNHGWAz0d4S75f0/bG666kLG+JKwb1i9hUCcNq9ZUAxyRBrEd/c
MakSAKWPKbe9uIxwAZfOsiwWgDX9oSdPfYywLEuuB/9bAeA/uv4s570RTt/Y
0rb0TgCOdyTJ6tOMsdBSpPHABwFYPfmlS/qQMY6ZYcxr+iQAScUaAyb3jDHP
xAVqcbsAPI2N/OH60hjfHv4ZnNwlAAlaORvHW43xZo/Tn6AfAvB2MlhZ+4cx
vvz14+FT/QLgumlPK/9ujGc/QZPdsADsLyPv+9FijE81v9Ay/EmP5xHXQ4nF
xnikXvax1KQAsGezlo+FGWOXqmRenj8CQORsZPhgZ4y/lvJcmZ8TAIVXF35Z
8xvjvYU3xnoWBeDeX3erSzVGuDlnzq5hVQA+BayLursZ4eV3TJVM/wQgnn2r
vfekIZb9SZICZipcj96IkfMyxAfYpO5cZ6fCmlI1e327AQ6W0fz7mpsKxEsi
XpfUDXDRdvPDy/xUkPW89jXipj7uP7b/jTaFCnLHBX7sqNPDRhl+sUUiVFjd
1sRKFdLFp+purf0Wp8KDU24KP9V0cPJA7DElGbr9TqGEQUNtvCj6UjNrGxXc
A3iOym/TxEUP5tsfmFDh8eU3b0ep23Dfaxajb2ZUeGhokJAQr4h5v1MyqTuo
9Hxss3FnlsenaNoXom2pwEh2aUoulsTS8RcpoW5UOPcHVyQz8OGkyMUDvsF0
+SUl2CdMDBoL2KoLQ6jQ2WksnpEhCQstVJnfEVTgL/dLtg+QATtu3QWvWCqM
FgiF0TiV4KbiDpeniVRQm/Fu+1WzDQp3OjQMPaDCDqno9B2aasATdineJZMK
bFxSZuH1GmCQHbqRkkOFfr+UG+fWNeFkY+Lx7nwqUO5991RV1oZGlgrt/aVU
uH1YLOnQKV2Yl2p6GPWKCrNabCGul/RAyrybtbWaClFJnlaXLunDzaDlTqtG
KowHXts4aGMIz9M5TELeU6F3oJ59UsoIemtpWW9aqdAYd3pYZcIIePrl+Rjb
qZCvffPJg3RjMNjU8zfpoo+3pmS+sDSBE1t39l39QYVkO9afjD0mkGh0yPJV
PxW28z/0EHZD0Hj45PPFYSogP8OjKV8QzF8JoGqNU4FaonkkTghAMiU88PwU
FdZRhGAlAOx7lTz2fIYe77ktLWlHAG5259pMzVOheGegsKQfwPOlV2UKK1Tw
WyueUg4E6KG+F/XaoEI1LzE6/wYAt873kExGQfD8bv459hKAwcGJ6UFWQaAV
yzH8OA5w4sKqvRiXICQ4xJJv7gIoOByqQOEThI3V5T275QHmzCjrHCRBGNyp
4XtjDYGO4uPWDQH6uHSLXEs8gqtElcdzQoJA2JI4mSaGAC+/9vu5VRC49rM+
FE82AZaBHZY9EoLwpcDkXTCTCex810FrkxEEt9SsxH+HjSHyuftkg4Ig+DA1
fvr21Aja46erX28ThNn+uBLnAUOgXb8aVaguCLa/JX7/4DaEDOt47WR9ur3x
3Fs7dPXhp4YkR6SxIOx/fkifRU8PlIULvwebCsIfHfTMRUkXSsebbpzZKQjM
yvXQO6kFq58O2rnvEYTj+9JliK81waR8SNp+nyC8To38un5NA5purzejQ4Jw
sy6C+q5RFXok1Sjkk4IQ9yXsiGW4NDC5JOa8ChMEdwsppduSDHjHdumrz+8K
glzu3nGvVzz4rlLxnidRghBu/ren9SkFC6y+n7ubJAiWTzxk30aLY/nETSO3
HEGIUhC96VCujL0D7/AfzKfLh178Tc1UxSXHaUM7iwSBwefAlWem6thQSyNU
s0IQcgLVPjmza2GbtuNtbE2CYLH+bNswTR/HVsw9WfsgCP3NiomRyAB3P7rh
P/NJEIKzdH/OOBpikVCenaPtggBtAtbuHkbY/Wzylu9dgvDLLivR2N0YZx2U
nW79Qc+H1pXnEzYmeMLoBX7TLwhSAW1DHcoIq0pDbMUw3d+Az/t9VhG+wP3x
eMFPQXjOEpWVehjwq7lDehmTdPtCMjZOxYA3v41xJf4RhItKYXO6m4DN6/x6
7/wVhO36wcsMZqY4LIeh6OaSIBwYtL9++5op/nj/XvDFNbr/rxivpBSYYtIl
4YOn/gmCPyPriFCnKbY/ki3nykwDM9niD0NzpviBhdbqfnYanKn8eOkbmxnO
K3BIrOGmwT3nd4e9iWa4QuCqlgKBBnvDv22L5jfD766ntcVSaKDnTtPRYTTD
X0frzm7SaNClfdrJfswUj+wZ5T65lQajjBpa8zWm+G8pR267BA0qq5bEttwx
xUyiypYmsjTYIULd0b/LFBNCbIdzFGlg7qz5xIXun9i0702yKg1imkPWKp8C
VrFP2BqoSYOPhM4f8qaAjWpevR7XpcHUQU2u8scIW8v2Ouw3ooHQyeeFcnkm
2CmSYaEaaBDEJuyjlWqMTyxKxchb0MCyPrcz8LIRDmk81bKxhwY8N2TuZ87p
43iVyJMn7GhQoX4mmxyjhzMTitna7Wmw+3gez09RXVznuQw5rjQodHxsEsqi
hdfZQkrtztPgUMl2M18DRcx9Lteu+iINxqOq1tvDZbFwV8sfuSs0KP0o3tDQ
IIl1s8mKG8E06L73leHZFir23fE4LTuO7u87mzzJ/cwQVPjWkJRMA0e2lxff
5hIhSnC8+9pDGpytL4nyzBSCgp8qZLssGiT91FL8XiENVbZ2RVV5NMh3+PHT
NVUe3pdf3CNXSAPm33aGQeeVYTy0KnS9nAbS1f3scXPqsPSnX9qrigatKcqm
bLWawObIXN+GaXBsyx3n7EBtkJLftZ7VTAN38h2VrV/0QCPKO5nYSoNcWxbh
w8cMAJajdK59odvTOu6aOmQIR5q6fPb9oAG6kDHvk2UC3mprvFX9dP8i1Zbe
jSO4liT6THaEBmSpifcHIwAiGMysosdp8J/BPhxFMYXkE8dH16Zo0HzOPetR
jCnkfA4L9pylgUT63ccCLGZQppcv1rZAA/tWwZjIE2bQkP6pynCVBsk7HH0K
a82gg+PvoaxNGvBdHM6Q5TSHYR/qEoFZCOJKXW3yt5vDXLd+3FV2ISCE5aQx
+ZoDg6mL+hi3EKjeW+dYjDIH/tybrXsJQrDsNRPi8tgcRImZpyspQrDLeqxZ
+Ik5KAe845AVEgJf7k+ewgnmYDg48TRqqxDMfd5c2X/FHP7fe7Tw/9+j/T8H
79hk
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{(-2) Pi, 2 Pi}, {-36.13614985689592, 
            39.28049566026931}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     BaseStyle->{FontFamily -> "Arial"},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->
      NCache[{{(-2) Pi, 2 Pi}, {-36.13614985689592, 
        39.28049566026931}}, {{-6.283185307179586, 
       6.283185307179586}, {-36.13614985689592, 39.28049566026931}}],
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}], "}"}], ",", 
   RowBox[{"{", "\[Placeholder]", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.932616122804229*^9, 3.932616163493452*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"d47280b7-67ea-ce42-a2fd-f3f9aadf7620"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{807.75, 531.75},
WindowMargins->{{12.75, Automatic}, {Automatic, 12.75}},
WindowStatusArea->"",
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.8 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"c7a71f3f-3948-ac42-a61b-00895376dba5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 680, 21, 31, "Input",ExpressionUUID->"99bbf292-5305-014d-8363-5168c94fc499"],
Cell[1263, 45, 284, 7, 31, "Output",ExpressionUUID->"5c5e0241-97b4-5f4a-a7ad-40b5ef8a7ab5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1584, 57, 721, 20, 47, "Input",ExpressionUUID->"38aadc8d-8029-0a49-812e-da7c75e5c141"],
Cell[2308, 79, 282, 7, 31, "Output",ExpressionUUID->"b7fe3355-3eef-1546-b7e0-96480c5b3f8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2627, 91, 585, 16, 62, "Input",ExpressionUUID->"31f549c5-2168-604c-a0ba-c4fc3da9c14a"],
Cell[3215, 109, 715, 22, 55, "Output",ExpressionUUID->"8010726f-f8c7-9c4d-9a3f-df2e2e845ec3"],
Cell[3933, 133, 262, 6, 31, "Output",ExpressionUUID->"8969e799-1a60-9446-b10a-6fce0f38925a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4232, 144, 287, 6, 62, "Input",ExpressionUUID->"55430c88-6bec-d142-9fd3-c9913d799ea6"],
Cell[4522, 152, 157, 2, 31, "Output",ExpressionUUID->"dce97ba1-94de-4a4b-ac40-9844094ca047"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4716, 159, 368, 8, 31, "Input",ExpressionUUID->"f5dcb1d6-aa3f-3047-a473-d1ddea6a2732"],
Cell[5087, 169, 677, 19, 48, "Output",ExpressionUUID->"53a36821-c8bb-0147-99f4-6107e6778df3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5801, 193, 800, 19, 47, "Input",ExpressionUUID->"4f3ae16d-172c-2f4c-9832-a9a1b6f22595"],
Cell[6604, 214, 308515, 5081, 355, 191665, 3165, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"8154249a-3575-8648-803b-504c18399b32"]
}, Closed]],
Cell[CellGroupData[{
Cell[315156, 5300, 285, 6, 29, "Input",ExpressionUUID->"b88f0256-8d0c-4b4f-ba66-12079cae8986"],
Cell[315444, 5308, 252, 7, 50, "Output",ExpressionUUID->"b42ecd6b-c0b5-7148-92ea-0896ed6e2cf5"]
}, Open  ]],
Cell[315711, 5318, 713, 18, 82, "Input",ExpressionUUID->"5e9f784d-672a-e141-bb0b-7bcd03362cb1"],
Cell[CellGroupData[{
Cell[316449, 5340, 961, 21, 62, "Input",ExpressionUUID->"e1d20a06-e90b-5b4c-a93b-5125497e51b2"],
Cell[317413, 5363, 17592, 308, 139, "Output",ExpressionUUID->"30101ff4-cca6-404b-8e99-7738e20ef546"]
}, Closed]],
Cell[CellGroupData[{
Cell[335042, 5676, 566, 16, 29, "Input",ExpressionUUID->"7a625512-ec6e-ba43-a908-eb5ce80b0a42"],
Cell[335611, 5694, 60199, 1030, 240, "Output",ExpressionUUID->"018c7743-0fd3-bb41-bbab-e04d3581f00d"]
}, Closed]],
Cell[395825, 6727, 153, 3, 25, "Text",ExpressionUUID->"4693c3a8-e07f-1044-be97-5fbe8ba07670"],
Cell[395981, 6732, 1799, 46, 93, "Input",ExpressionUUID->"e6936b17-e969-3d4e-98f9-0c605b1372b2"],
Cell[CellGroupData[{
Cell[397805, 6782, 1617, 43, 93, "Input",ExpressionUUID->"a34b8e4f-181b-9b4a-99bc-df93d9d94eb7"],
Cell[399425, 6827, 2031, 39, 392, "Output",ExpressionUUID->"56edc849-421a-c845-90d6-bc5579bc0c53"]
}, Closed]],
Cell[CellGroupData[{
Cell[401493, 6871, 2781, 71, 137, "Input",ExpressionUUID->"49ed4761-e414-0844-bb9b-0b447d03611f"],
Cell[404277, 6944, 2244, 43, 297, "Output",ExpressionUUID->"78f44f53-7395-a447-a307-a5c0d9bbe338"]
}, Closed]],
Cell[406536, 6990, 3474, 90, 182, "Input",ExpressionUUID->"d5772b6d-946d-7d47-a90b-f6cc1814bee0"],
Cell[CellGroupData[{
Cell[410035, 7084, 191, 3, 56, "Section",ExpressionUUID->"fe546ddc-304a-d14e-83ae-f923d883f19a"],
Cell[CellGroupData[{
Cell[410251, 7091, 3379, 77, 230, "Input",ExpressionUUID->"25c9498f-4174-e247-b16e-00529d7a28e9"],
Cell[413633, 7170, 810, 15, 47, "Output",ExpressionUUID->"f56f6041-aa13-0f43-9b21-2b0dfb7fe4ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414480, 7190, 1490, 47, 187, "Input",ExpressionUUID->"61e57f94-c5a2-ef42-b729-e0fec96fe7d0"],
Cell[415973, 7239, 10699, 268, 145, "Print",ExpressionUUID->"ff43c8a7-4880-cf4e-9138-36f984944432"],
Cell[426675, 7509, 496, 12, 59, "Output",ExpressionUUID->"33002637-4d1f-6e40-999e-9fd91f293b42"],
Cell[427174, 7523, 362, 5, 31, "Output",ExpressionUUID->"92d5710e-901b-0041-a901-75b13785dbfb"],
Cell[427539, 7530, 25268, 437, 50, "Output",ExpressionUUID->"60e3e30f-3b3d-4645-a155-4e0ffb7da1c5"],
Cell[452810, 7969, 362, 5, 31, "Output",ExpressionUUID->"26a26c17-2224-2e44-baa2-4d7cd3b9ae2e"]
}, Closed]],
Cell[CellGroupData[{
Cell[453209, 7979, 839, 26, 102, "Input",ExpressionUUID->"d2e6dcc2-125f-2247-b435-445f9d713d0a"],
Cell[454051, 8007, 729, 22, 48, "Output",ExpressionUUID->"e6f7cf9a-eb1c-2d4b-ace2-f5aef1960d98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454817, 8034, 953, 31, 98, "Input",ExpressionUUID->"2c93dca3-bc37-bd4a-ab83-bff6ad54b1d3"],
Cell[455773, 8067, 20789, 518, 211, "Print",ExpressionUUID->"c6321a38-c0b1-4347-83e6-3518fe5b90e7"],
Cell[476565, 8587, 369, 11, 48, "Output",ExpressionUUID->"4ddc897c-4fd0-244b-b74c-7e56793739f7"],
Cell[476937, 8600, 48909, 839, 97, "Output",ExpressionUUID->"bc462831-15f4-eb45-a9ad-a2cb9a1c2673"]
}, Closed]],
Cell[CellGroupData[{
Cell[525883, 9444, 2094, 52, 143, "Input",ExpressionUUID->"1ad251e7-0ac7-ab4f-b034-142e3383ad4d"],
Cell[527980, 9498, 952, 20, 48, "Output",ExpressionUUID->"e5a9272b-1830-0b4e-860e-b7c8f18614b8"],
Cell[528935, 9520, 1847, 43, 48, "Output",ExpressionUUID->"9f2cebf1-665f-774f-a851-07300e66000a"],
Cell[530785, 9565, 970, 20, 48, "Output",ExpressionUUID->"4488a13e-212f-3d49-810a-84dc2ecf14bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531792, 9590, 3972, 106, 169, "Input",ExpressionUUID->"83d302dd-a69b-ec41-911d-8dd5173dd5fd"],
Cell[535767, 9698, 2401, 48, 381, "Output",ExpressionUUID->"03eb30ac-6639-5e46-ac54-3d79eeb18336"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538205, 9751, 216, 2, 32, "WolframAlphaLong",ExpressionUUID->"82a54a90-274c-534a-9e18-c3bb9beb84f6"],
Cell[538424, 9755, 112826, 2400, 2716, "Print",ExpressionUUID->"843b1ccb-33ff-da45-9fe8-9018bb8e27df"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[651299, 12161, 155, 3, 76, "Title",ExpressionUUID->"3f82800e-aff7-7147-8f3b-0c72b943a643"],
Cell[CellGroupData[{
Cell[651479, 12168, 157, 3, 56, "Section",ExpressionUUID->"e98c8819-7aef-d64b-9d97-7f6cab128c23"],
Cell[CellGroupData[{
Cell[651661, 12175, 216, 4, 27, "Subsection",ExpressionUUID->"4b3e98ed-6b77-9c4f-a9f2-9b1648ab791b"],
Cell[651880, 12181, 159, 3, 27, "Text",ExpressionUUID->"37d8e12f-4749-e24e-b7b5-7326f6810e28"],
Cell[652042, 12186, 172, 3, 22, "Item",ExpressionUUID->"7cd6e70f-44e6-f949-9417-1ed6bafba807"],
Cell[652217, 12191, 250, 7, 31, "DisplayFormulaNumbered",ExpressionUUID->"292f817f-ac73-b045-b9bb-6b4472f66589"],
Cell[CellGroupData[{
Cell[652492, 12202, 893, 20, 66, "Code",ExpressionUUID->"c05d3e8c-a2ba-5949-a2a7-f1c658d46de0"],
Cell[653388, 12224, 1011, 17, 70, "Output",ExpressionUUID->"4c491895-d911-f148-83e0-6b4304503471"],
Cell[654402, 12243, 1139, 21, 70, "Output",ExpressionUUID->"c8c1cfb8-a889-7140-bcc8-7c0e3ee14970"],
Cell[655544, 12266, 23905, 435, 70, "Output",ExpressionUUID->"95688022-ff5a-0948-9acb-034eaa7b0a2d"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[679510, 12708, 159, 3, 46, "Section",ExpressionUUID->"4a7226d4-de2a-8842-b064-eaf926c35d2a"],
Cell[CellGroupData[{
Cell[679694, 12715, 237, 4, 27, "Subsection",ExpressionUUID->"d485f1d2-7778-8242-8fea-c02a320cf8f5"],
Cell[CellGroupData[{
Cell[679956, 12723, 760, 16, 52, "Code",ExpressionUUID->"411a8c7d-b7b6-9849-8513-317152c092ae"],
Cell[680719, 12741, 924, 18, 70, "Output",ExpressionUUID->"0689a37e-794e-ac48-b24b-5657139140fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[681680, 12764, 16413, 401, 55, "WolframAlphaShortInput",ExpressionUUID->"fb910e91-3ea5-ed4f-8d42-705b84a6c4b7"],
Cell[698096, 13167, 168, 2, 31, "Output",ExpressionUUID->"45ea58af-6bdd-b340-b873-4461ac9375f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698301, 13174, 630, 15, 31, "Input",ExpressionUUID->"5ba3a521-07bc-fd4a-80ac-8f1f55729b10"],
Cell[698934, 13191, 169, 2, 31, "Output",ExpressionUUID->"436a3a03-fd62-9647-9835-da71f43ff48f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699140, 13198, 369, 9, 31, "Input",ExpressionUUID->"47180540-f3ee-074f-9224-37888d4d1563"],
Cell[699512, 13209, 191, 2, 31, "Output",ExpressionUUID->"f9a98922-b563-7446-8cfc-2ed68b84e9c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699740, 13216, 813, 22, 71, "Input",ExpressionUUID->"f8b2926f-5c2a-1d4a-9aef-eb9f2655adb0"],
Cell[700556, 13240, 416, 10, 60, "Output",ExpressionUUID->"df63be18-9261-7b4e-ac2c-aa68ab0b6964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701009, 13255, 470, 11, 31, "Input",ExpressionUUID->"9375fa44-ad92-bb4d-9bdb-5b5e51ca57b4"],
Cell[701482, 13268, 21883, 407, 189, "Output",ExpressionUUID->"b58c46b7-fdaf-5d4f-97c1-1f4ef4918db8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723402, 13680, 565, 14, 31, "Input",ExpressionUUID->"61a27ee9-5c57-b240-9b00-268302e45f9d"],
Cell[723970, 13696, 195, 2, 31, "Output",ExpressionUUID->"517a0a04-3c96-a04d-8b36-ec2c9133a9b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724202, 13703, 391, 9, 31, "Input",ExpressionUUID->"76bd3627-3400-0940-afd2-dfca3eb35c5d"],
Cell[724596, 13714, 191, 2, 31, "Output",ExpressionUUID->"6aef5863-996f-f34b-a8b4-997d2208ff0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[724824, 13721, 814, 21, 47, "Input",ExpressionUUID->"c89168fd-fde0-2a4a-acdb-2842c8ef6a09"],
Cell[725641, 13744, 232, 3, 31, "Output",ExpressionUUID->"563435e7-bb63-f54b-8b04-7b61114c58db"],
Cell[725876, 13749, 248, 3, 31, "Output",ExpressionUUID->"08735c3c-dc00-0c40-bfae-bcbe85c3a476"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726161, 13757, 398, 9, 31, "Input",ExpressionUUID->"4aaec76d-ccd9-224f-b679-a9a047a3978f"],
Cell[726562, 13768, 222, 3, 31, "Output",ExpressionUUID->"0a61f594-3046-a24c-9748-4c0166b4654d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726821, 13776, 394, 9, 31, "Input",ExpressionUUID->"5123d7ec-9025-e847-b3a9-d049e54be341"],
Cell[727218, 13787, 220, 3, 31, "Output",ExpressionUUID->"bef4f2b9-54d6-7443-82e7-ebbc6160c39c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[727475, 13795, 200, 3, 31, "Input",ExpressionUUID->"e0608a8f-3d0e-c648-9430-a421b2279379"],
Cell[727678, 13800, 179, 2, 31, "Output",ExpressionUUID->"48b1ee6c-b356-6448-a9fe-1d3494be15d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[727894, 13807, 505, 12, 31, "Input",ExpressionUUID->"917232f2-35cf-f245-9cb3-b48e0530993a"],
Cell[728402, 13821, 296, 4, 31, "Output",ExpressionUUID->"2330f572-8438-6940-a2be-8c05635ae594"]
}, Open  ]],
Cell[728713, 13828, 702, 12, 27, "Text",ExpressionUUID->"c4e8f823-74d7-b34f-afd7-886476dc1421"],
Cell[CellGroupData[{
Cell[729440, 13844, 646, 13, 47, "Input",ExpressionUUID->"522c8616-a9fe-6d4c-8986-331e1a3010a8"],
Cell[730089, 13859, 498, 9, 31, "Output",ExpressionUUID->"4da79497-6300-c94d-aa43-6cb549034c57"],
Cell[730590, 13870, 466, 8, 31, "Output",ExpressionUUID->"f2a46130-32e5-194e-bc0d-42562e9a05c0"]
}, Open  ]],
Cell[731071, 13881, 231, 7, 45, "Text",ExpressionUUID->"a1b0f35f-eb9a-f64e-9887-45d66bf89862"],
Cell[CellGroupData[{
Cell[731327, 13892, 800, 18, 31, "Input",ExpressionUUID->"37683469-154f-744c-a951-de350cc0bef7"],
Cell[732130, 13912, 324, 6, 31, "Output",ExpressionUUID->"4574c946-d214-8844-bf49-e5734d4eca07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[732491, 13923, 466, 12, 31, "Input",ExpressionUUID->"2db098c7-1cbc-2741-a9d1-d2d6302bc04a"],
Cell[732960, 13937, 195, 3, 31, "Output",ExpressionUUID->"e799acc7-3e62-e847-a330-8d0e8f7a5cae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[733192, 13945, 639, 15, 47, "Input",ExpressionUUID->"1f2ef2fb-2a00-cb4c-a947-b1ba821cd646"],
Cell[733834, 13962, 234, 4, 31, "Output",ExpressionUUID->"2d5d7884-ad37-c148-b071-ec88d38c7e47"],
Cell[734071, 13968, 245, 4, 31, "Output",ExpressionUUID->"3ec55cdb-3da8-ae4b-bedb-6ef998da3509"]
}, Open  ]],
Cell[CellGroupData[{
Cell[734353, 13977, 872, 22, 47, "Input",ExpressionUUID->"f2805759-f423-f245-b9be-30eca8918678"],
Cell[735228, 14001, 158, 3, 31, "Output",ExpressionUUID->"447bf402-fd3f-064d-ae8c-0dc9e510b178"],
Cell[735389, 14006, 174, 3, 31, "Output",ExpressionUUID->"ed251043-03dd-6948-92d7-c381e15814b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[735600, 14014, 629, 13, 47, "Input",ExpressionUUID->"ffdd8ba7-6a94-da43-83b0-55901b1cac23"],
Cell[736232, 14029, 451, 8, 31, "Output",ExpressionUUID->"34df04b0-ac0d-7942-830a-54fe58874f28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[736720, 14042, 154, 3, 31, "Input",ExpressionUUID->"884a8e5b-5e58-9b41-aaf0-ec1e72e59427"],
Cell[736877, 14047, 126096, 2112, 114, "Output",ExpressionUUID->"d47280b7-67ea-ce42-a2fd-f3f9aadf7620"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

