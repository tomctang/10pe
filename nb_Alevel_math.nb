(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    556823,      11260]
NotebookOptionsPosition[    547136,      11092]
NotebookOutlinePosition[    547712,      11112]
CellTagsIndexPosition[    547669,      11109]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Automatic Integration", "Section",
 CellChangeTimes->{{3.938278504910383*^9, 3.938278546620672*^9}, 
   3.9410779676307125`*^9},ExpressionUUID->"fe546ddc-304a-d14e-83ae-\
f923d883f19a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Pre", "-", 
    RowBox[{"running", " ", "check"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<<", "Rubi`"}], "\[IndentingNewLine]", 
   RowBox[{"<<", "MaTeX`"}], "\[IndentingNewLine]", 
   RowBox[{"ConfigureMaTeX", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "\"\<pdfLaTeX\>\"", "\[Rule]", 
      "\"\<C:\\\\Program \
Files\\\\MiKTeX\\\\miktex\\\\bin\\\\x64\\\\pdflatex.exe\>\""}], ",", 
     RowBox[{
     "\"\<Ghostscript\>\"", "\[Rule]", 
      "\"\<C:\\\\Program Files\\\\gs\\\\gs10\\\\bin\\\\gswin64c.exe\>\""}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{"expr_", ",", "var_"}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"TeX2Str", "=", "Convert`TeX`ExpressionToTeX"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Steps", "[", 
             RowBox[{
              RowBox[{"Int", "[", 
               RowBox[{"expr", ",", "var"}], "]"}], ",", 
              RowBox[{"RubiPrintInformation", "->", "False"}]}], "]"}], "//", 
            "Flatten"}], "//", "Most"}], "//", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"RubiIntermediateResult", "[", "x_", "]"}], ":>", 
            RowBox[{"\"\<=&\>\"", "<>", 
             RowBox[{"(", 
              RowBox[{"TeX2Str", "[", 
               RowBox[{"HoldForm", "@@", "x"}], "]"}], ")"}], "<>", 
             "\"\<\\\\\\\\\>\""}]}], "]"}]}], "//", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<\\\\begin{aligned}\>\"", ",", 
            RowBox[{"TeX2Str", "@", 
             RowBox[{"HoldForm", "@", 
              RowBox[{"Int", "[", 
               RowBox[{"expr", ",", "var"}], "]"}]}]}], ",", 
            RowBox[{"Sequence", "@@", "#"}], ",", 
            "\"\<\\\\end{aligned}\>\""}], "}"}], "&"}]}], "//", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\"\<\\\\, d\>\"", "<>", 
             RowBox[{"ToString", "[", "var", "]"}]}], "->", 
            RowBox[{"\"\<\\\\, \\\\mathrm{d}\>\"", "<>", 
             RowBox[{"ToString", "[", "var", "]"}]}]}], ",", 
           RowBox[{
           "\"\<\\\\int\>\"", "->", "\"\<\\\\displaystyle \\\\int\>\""}]}], 
          "}"}], "]"}]}], "//", "StringRiffle"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.938059158634596*^9, 3.938059187871776*^9}, {
   3.938059445202175*^9, 3.938059448217097*^9}, {3.938059694787599*^9, 
   3.938059696365534*^9}, {3.9380597954575653`*^9, 3.938059802732033*^9}, 
   3.938061508128525*^9, 3.938061962853916*^9, {3.9381932263333015`*^9, 
   3.938193227598425*^9}, {3.938193263262894*^9, 3.938193273236141*^9}, {
   3.938193369430638*^9, 3.938193429871331*^9}, {3.938193931457819*^9, 
   3.938193932097988*^9}, {3.938277792762482*^9, 3.938277793949974*^9}, {
   3.9382779037143764`*^9, 3.9382779074791183`*^9}, {3.938277957405105*^9, 
   3.938277964871979*^9}, {3.938278243529209*^9, 3.9382782578383675`*^9}, 
   3.938665411339363*^9, {3.93866552691683*^9, 3.938665527416912*^9}, {
   3.941077971302576*^9, 
   3.9410779850682087`*^9}},ExpressionUUID->"25c9498f-4174-e247-b16e-\
00529d7a28e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"CacheSize\"\>", "\[Rule]", "100"}], ",", 
   RowBox[{"\<\"WorkingDirectory\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"pdfLaTeX\"\>", 
    "\[Rule]", "\<\"C:\\\\Program \
Files\\\\MiKTeX\\\\miktex\\\\bin\\\\x64\\\\pdflatex.exe\"\>"}], ",", 
   RowBox[{"\<\"Ghostscript\"\>", 
    "\[Rule]", "\<\"C:\\\\Program \
Files\\\\gs\\\\gs10\\\\bin\\\\gswin64c.exe\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.938277775907175*^9, 3.938277852429537*^9}, 
   3.938278336855976*^9, 3.938278661976431*^9, 3.938665093902872*^9, {
   3.9386653889383545`*^9, 3.938665414338625*^9}, 3.938665447747917*^9, {
   3.938665512685789*^9, 3.938665532337435*^9}, 3.9388045220557156`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f56f6041-aa13-0f43-9b21-2b0dfb7fe4ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Input", " ", "integral", " ", "formulas"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"F", "=", 
    RowBox[{
     RowBox[{"Int", "[", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"3", "+", 
         RowBox[{"4", 
          SuperscriptBox["x", "2"]}]}]], ",", "x"}], "]"}], "//", "Steps"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"F", "/.", " ", 
     RowBox[{"x", "->", 
      RowBox[{"b", "-", "F"}]}]}], "/.", " ", 
    RowBox[{"x", "->", "a"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"3", "+", 
        RowBox[{"4", 
         SuperscriptBox["x", "2"]}]}]], ",", "x"}], "]"}], "//", "MaTeX"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "0.5"], 
    RowBox[{
     FractionBox["1", 
      RowBox[{"3", "+", 
       RowBox[{"4", 
        SuperscriptBox["x", "2"]}]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{
  3.93866526997843*^9, {3.9388045375209446`*^9, 3.938804588649533*^9}, {
   3.941077998130926*^9, 
   3.941078013974476*^9}},ExpressionUUID->"61e57f94-c5a2-ef42-b729-\
e0fec96fe7d0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["209", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"PosQ\\\", \
\\\"[\\\", FractionBox[\\\"a\\\", \\\"b\\\"], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GtQ\\\", \\\"[\\\", RowBox[{\\\"a\\\", \
\\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"||\\\", RowBox[{\\\"GtQ\\\", \\\"[\\\
\", RowBox[{\\\"b\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}], \
\\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               FractionBox[
                RowBox[{"ArcTan", "[", 
                 FractionBox[
                  RowBox[{"2", " ", "x"}], 
                  SqrtBox["3"]], "]"}], 
                RowBox[{"2", " ", 
                 SqrtBox["3"]}]],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
           Rational[1, 2] 3^Rational[-1, 2] 
            ArcTan[2 3^Rational[-1, 2] $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"PosQ\", \"[\", FractionBox[\"a\", \
\"b\"], \"]\"}], \"&&\", RowBox[{\"(\", RowBox[{RowBox[{\"GtQ\", \"[\", \
RowBox[{\"a\", \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"GtQ\", \"[\", \
RowBox[{\"b\", \",\", \"0\"}], \"]\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + $CellContext`b $CellContext`x^2)^(-1), \
$CellContext`x]], 
          
          HoldComplete[(1/(Sqrt[$CellContext`a] Sqrt[$CellContext`b])) 
           ArcTan[Sqrt[$CellContext`b] ($CellContext`x/
              Sqrt[$CellContext`a])]], 209], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
          Rational[1, 2] 3^Rational[-1, 2] 
           ArcTan[2 3^Rational[-1, 2] $CellContext`x]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.938665501297855*^9, 3.9386655366177063`*^9, 3.9388045265702763`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.93882430801293*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"ff43c8a7-4880-cf4e-9138-36f984944432"],

Cell[BoxData[
 FractionBox[
  RowBox[{"ArcTan", "[", 
   FractionBox[
    RowBox[{"2", " ", "x"}], 
    SqrtBox["3"]], "]"}], 
  RowBox[{"2", " ", 
   SqrtBox["3"]}]]], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.9388243080249386`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"33002637-4d1f-6e40-999e-9fd91f293b42"],

Cell[BoxData["0.1511499470195182`"], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.938824308033001*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"92d5710e-901b-0041-a901-75b13785dbfb"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.006942515967786726], 
   {Thickness[0.0033185226326020553`], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v6Ibn/GD4wO9iWOtadlmB0YwIDV4QwI+DA7
yGwUm8+0gM0hDQxY4XyNTyovZ51kh/NNjIHgM5dDjGqEzDkbFoetXhss5lTy
OKiD1HEywfnbwfR/exgfrG/zL3uweZzccD6EZofz/Z94XjK9zORwuHtfk4ky
k8OMmSDw1/4G722x1G/scP5aIR2+dDthON9jzdHlDD9EHb7s+7g1fZqQQzTI
fTGSDu8XrVc4a6HgUHH/xy1jblmHVJD3jqk7gKwzFlZwaOH1Xz8lVd+h9PA2
15mxig71v60KznUYO/wHAXslhwO1shbpImYOnTaeu9KUlB2SY++4MVdYOHSD
+J+UHY60LQ8/xWTlsEEvbzGjjYoDD8i4GVYOb4q3iv7mVoX4S9nGoebThoDs
Xwh+CsicHWpwvtS8OM3TAeoQ+19YOySEBKkvyFSHxM8dawfZ5S889OarOVwX
+uR4/pq1QwPL0X5Dc6j+yQg+WN4NwQdp+//QyuHErh29bBfUHCRA9mywcpjS
3hp1OUYdzj8Gkv+A4NeCw0HDoQTojdP3EHwON9VSJi9rOP954sJrJu+tHU4d
dlqbaacOCd80Gwcmzi755HeqcD7YPhkVOB8SD0oQ/0pYO6SD+GWKDupvefcZ
rLRwuKMpu+Z/sqJDI8gf7RYOO4KtIv67y0DCv8PIQaRyUslZFnGHJyD781Uh
8sdFHfhjA+4bHVeEyKeIQMNH2uGBa7zjrItCDgq7FuxLfSfi0KrArnrmi6AD
OF8UCDosubX8sWEzvwO3I5/XjJcMDi3itayZx9jh/ABQugxmgfNh6R2Wn9Dz
FwDb4V2k
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4t8xuUf/FTk5mBiDgIkDjL9RL28xY4+Jg33T
o+MznBF8lsWTrBj3OsL5PP7rp6TucHSQmReneXoDgl+yVfT3aTlTOH8DSP0d
azhfYuoVzgwlGzj/hnRNopGqjcPF/Hj2czMR/NsgutTR4UDb8vBTl6wd6n9b
FZzTcHT48630wZxEawews7sdMPhgdRzWDulpQLAOwVd90jzv7C8Ef0337QwG
f0eIOyIQfJj7YXyY/8RB7vZC+L8iYoXp2cMOcP7+WlmL9CmYfFj4ep9gt529
18FB4y3vPgNLE4flLzz0/gc6wvlg9S0I/mqQ/dsRfHD4eDrB+ejxBwAL/Lsf

     "]]}, 
   {Thickness[0.0033185226326020553`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.1391, 15.103099999999998`}, {
     53.647999999999996`, 15.103099999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJXIGYCYr+LE2P+FZs6pIHAMXEHGL/m/o9bxtoyDn+/
lT6YM9HEIUY1QubcHHmHDXp5ixlzjB3SQerNFBy+7LzV9bfUxCGcU6zd+LyC
Q4/XKxYTRVOH8sPbXGf2KsH5MybwV5llq8D5LJxd8sl+ahB71UwcZObFaZ7e
oO4QKb79IsM/Izh/I8i+M4Zw/kwQeGkAcYeNGpz/Ikv72/RaFTj/w6L1Cmc7
lB34/ddPSfUwdBCIDbhvFK4McXcZGn8bgv8fDAwdTIyBYDOCD3M/jA92v54q
XL8vKNyaVR1A2oyLEXxpkLsTEHzVJ83zzkYh+ODwDTR0OHXYaW1mnSokPI9C
+XLqDrelaxKNnhrB+fpaK4UvfEHwwf6NNIbzC9Z0385QMHGQmHqFM+OQGpwP
cz+MD3b3N2WHRpaj/YbiJhB/zVdyOA0yZ58xJPxmKDocblsefirJ2EH52qNg
hh4FiPt/GTnMANlbqeCQHHvHjXmFEdTfCg7RCo4fk32MHFZ+e1lxJkHBgRcU
/hJGDtWg9BStAIlPHiMH4cpJJWdDEPxSUHqRRfBD3l7+OOOgvIND06PjM6QR
fHGQv4IQ/MeJC6+Z3EfwwfH22BjO/7IhIHtWuInDjmCriP/pMnD+A9d4x1kX
xeH8/ohuf8YJgg6fQfx2Y4cW8VrWzGP8kPj5aATnF28V/X06DsH3B8VjsqFD
NCh//BFwmA4KZ25DhwPd+5pMlEUcbCsjVpjmGkLC+5kwPH4PguQPi8D5b9py
u42qxeD8tUI6fOn3xB28T7Dbzm41hITvZQlIPOkj+BBzDeB8cHxON4D4Vx3B
/7Lv49b0MDFUvpgQhL/c0KEH5H8DXnj8wvg3hD45nk8zgfNh5cN9UPh9FHJA
Lz8AwRLhGA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4gjx7RcZ2hwc/oNAvbQDjL8j2Crif7qMwwa9
vMWMOQj+bemaRKNQBB+sPs4Wg38GDFTgfImpVzgzlFThfKl5cZqnJ6g6XBX6
5HheDcEHa3tjg8Fv+G1VcE4DwYeZD+PD7JcA6VtgCed/2Xmr628pgl+8VfT3
aTtMPticHmk4/0D3viaTxVIOh9qWh58qQvBh5sP4MPvR+elpQPCMC84vXF6y
4V8/J5z/Zd/HrenX2B18Lk6M+adsC+fDwgedf533tlhqGSecDzMfxofZD4sf
GP8N7z6DmVkIPix+0fmw+AcAcX/7ug==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAGIw7fgx+cxXF4dWBXbVM1PEHWB89zVHlzP8kHDI4fy5
ID0ak3/hatgb/Wh1OP9p4sJrJucRfCbOLvnkd+oQ81wR/JkgYIngsy6eZMVo
iuDX/bYqOKfh4mCgtVL4whJ1h/21shbpMU5w+2F8mHtLtor+Pv3OGYP/pi23
28haGM7/su/j1vQyQQeHpkfHZ7x2dohWjZA590fAYaNe3mLGGgRf+JPj+bRY
TL6JMQjwO7irljLNanB2ONC9r8kkmd8h4fBl7dSfCH7b8vBTRioucP6a7tsZ
DP4uqOpPIvhTvrHFz3jjAjcfxofZHyG+/SLDOQT/hKbVpNPxCD4svGH+g/Fh
/ofx0eMXxgcA+2XUpw==
      "], {{39.925000000000004`, 6.24219}, {37.021899999999995`, 6.24219}, {
      39.925000000000004`, 10.7469}, {39.925000000000004`, 6.24219}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lG1IU2EUx+/KklH5sumScnpnSkQqtS0Qszp+uPeuCMwXcsHCLOaMMqUM
BlkfFJSaipmRmsnI0AJfsBdMiSXESHROxJcP0/CF0hQtFRJLdPncZ3seCDrw
fPhd7nPvOf/zP0d1OTfFuJ1hGMnWSd8627ZO1erOjGofHZTrLUmSPAV42YGi
WQFZKDYFMETpQ53jCnDtL8hU/6Lc6XqwYZylrN/bMcjMCMCgsCog89PQYeOU
AC2yaD/TSQV+/l6AgyuRc7VSGb6fIYAGhTwAFvbYjtTso+zTUBkv+cYTFu/3
8DDFZSTWJgcS7kyN17sFOeFi1jfKkRaE83HyoGu2NzEhwVCfED1cO8Pj9yAE
2mNvNEhCBdhwb8XHMPhjyLFvqgVIlypKNAMsNFvGshmTAAdGp1OZcRUErSQO
ZLX8n7UozzHK16W/raZ1AetZqoKQx8PS7F4BBJRPtoro8SG3YLFmhCX8anXO
7LhEWdS3Lhx2ID1GBFgozrGoj4djveYp705qqzKG6AhzUbe31cbpcD4JLOFJ
pN8UZUvC6a6saRWu96cAJtT38xGQ/y54va+Vcg2KZMpne3xPPFUK4H/x3IR6
loWeQ/GVff6e/t1isZ8WeE//I4BNXL7iKOPJ/UmbX53mJuWYCuva0VGOMBRO
f64u4qBgYs2luRZGWNTDoCTcj/SNVsJgboav8z4Hyi6rzfgjFP+/ivK99fg8
p5WyWf/yWH8Dh/sRp8T1NnLYn1eVEPW1qL7fxWH9DCrs50Se9FesP4ey2I/X
lONG7Tnabh7uoPzHWMJLz9vYfh3lboutUFsUjvXv4Em9om9eePQL8+Sfx2Of
PQrG9V7goQT5/a0M+zGGzkv3XWWcaZwjLH5vmLIVzUMrZXHeyz38JgBk6Ht2
Ds+XbyDu/6BHL7OMsFjfLjlh0bdMENavi8N+exiE9XpGOS0/8onbTLn0zLyP
NtnLcsLefeFlnE8A5hoO0Pi6T/mRfnm5uCm9Vx3JExb11vNQhvbdUgCeF7PH
fzMyrG8F1U+s/wu9L+4ThUC48bsu1t1O2bs/UxaHlqszg+Hf/foXOLQ3dw==

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4hkzgSDSy4E/NuC+0XJFh+UvPPT+WyL4JVtF
f58283LYk1/zdmYolK/n5QDSNrNTwUFi6hXODCUvB+Vrj4IZbBQc9tfKWqTL
eDlU3/9xy1haAaL+nCecP99G58qsfQh+cInK9P8cCL7qk+Z5Zyd5OpwBAR4l
hz8xuUf/LfJ0mA2yz1PJQcHxY/KZs54OK769rDhzQclBZ8KCH4b3PCHu4VR2
EPnkeD5N1suh28ZzV9onZQeY/wJuSdckXlKB81t4/ddPcVWD86dP4K8y09Zw
sG96dHzGZ08HA62VwhdSNB3aloefMipB8C/mx7Of++kB53d7vWIxWenh8Pdb
6YM5H9XhfA9QQLSrwflyoIDdrwrx7wUPSLgtUnV4nLjwmsl9BH/KN7b4GV8Q
fLD9Ip4OsiD99xH8mk8bArKr1OB8Fs4u+WQ/dYfEw5e1Ux96wPmsiydZMV5F
8N/w7jOY+cnDITn2jhtzhYbD6u7bGQzmng6nDjutzbynAXFfBoJ/XNNq0unj
CL6LainTrB+eDpv08hYzzlGH82HhCeO/yNL+Nn2uioM+KH7WeToIgNJTurJD
hPj2iwxmnpBwr1R0EAbF11YPh96Ibn/GC3Lw8Pqy7+PW9DIEX6RyUsnZFAQf
rH+mrMMWkDtsvOB89PQMAN65PhU=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQvfSFh97/Sn8HYzDQcIDxDbRWCl94AuULIvjyjh+T
z7D6OzxNXHjNhF8Tzj9/NeyNvrUWnH+gVtYiPcXEocfrFYuJoZ/Dwbbl4aec
EHxuN9VSplfGEP5MBF/gk+P5tKV+EPuuIPglW0V/n7ZD8FWfNM87O8sAwm/1
c1h8fx/fnM8GDg5Nj47PcPZzOH3YaW1mnKGD7oQFPwyf+cL5Z0DABMHfope3
mHGOj8NhkPuMDOB8XUX5LzlhunD+epCFvloON6RrEo10fSHy39QdRED2X0Xw
Z8wEAk8/OJ9l8SQrxl4/hzmLlHf+Udd0kJh6hTNjkZ/DBrC5CD5MPXp8AAD5
ga5F
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQLTH1CmfGIj8H+eUvPPT+aznA+DLz4jRPT0DwTxx2
WptZp+XAsniSFWOvn0NK7B035h+aDubXjuaaZPg5mNrsDZqmqOkwYyYQaPo5
HNu1o5etQMPhjnRNotFdXzhf5JPj+bStCD5Yv4Cvw3rVJ83z1iL4R0HyAbpw
fu1vq4JzHPoOb3n3GcxU8nV4nqX9bfpffYfW5eGnjFx8HZbc38c3J9nAAWTM
2SRfB3GQuw8ZOPwHgfm+Dt1er1hMFA0d9tbKWqS/QfBNjIHA2w/OB9vT4Ofw
eUNA9qzpUP39fg7XhUAON4CHx+E2kMUI/hkQ0EHwp07grzJ7re+AHr4A48Sh
eA==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlGlIVFEUx2dUsiTbLMecrIykmXk68yZNI4pOQdAyMvdZaIUtai6pZVBG
i5FhVrSQReLaYE3khxbFSa0Ii8Q010RNNFpsc0qh0igjy959d+Yd6MD98Hu8
+945//M/xz82LSLeVaFQKMUTJR4X8aw5nGUwrRSgoXblrZ0WDpx86WT25o4H
HATTWC5AUtrX7KedHAx61vAFS5C37Kr7WxGMfOPMiySFyIH+c76nVnFQ3vcp
t4IX4LinuexSNgdjNNQC5OVMPhSaooVoev8LgSf3754bt0cDP8dtyze1IGcJ
ay5nViBL960EPsRceR4yWSvznbCRxzs8dDLPsmzVNuXo4CbNp5SAuVedETOk
A/Ns7+RwG4H4BDFOBMImVXW7otXBTwxw5HZV7NEeAgHvsywthTx01e0KyRwm
cGbtZ7cQfyOM/1WSaPMWZHb/jwtoBCFXHs94ZlsmsOe/ePY8QIBjbnXnjf28
rMdGmocF+drrmknFcchSfb4800MnQKl9tX5MyTO9FiGfLI1qXGhCtl5cogyP
duQjIJvbL0T/tSI/POK3OHG+EbppvWECNFE/bDXCvd7Tf+JVyM007ERmSSdR
v+5pQyvarvPwbrrf0w/1hL2XysM66qcqAqrczglJEUbIKRkxfjyB99O2ubfO
PIisWk1GfTjkuSu+xTUrCZTrd1uVxQaZJb9NR5b8OqoHe3WZa78bAXsy9yPv
pZ793wNZqnMK8tLAzsKPUx35uRhYvV4E2roiBw1qA3iJZSUEOfrfxzM/b0c/
SPXvR5b6UYCsHngb6ltCQE39WMLLPFxOUgqjkKV+ePFM/yKsN5H68iIBU4P7
sqJ0R/4HCNTTeeA5Vm8qgTfUQI+0zJ+ROC/URsF6ZOl7OmRpHlTI0ry7E+a7
hxr2vXkEbNR/nzWsrxqHXle1Mtv3Vs74PYAs/SdBx/TzI9BP57VMx/SahLxh
3/y8sRGzzGepbu0ONiA794WTpXySNbAqIN2lcCKBILpvfiyQ++Xk2g4ufmYE
sqS3qFcj9dcrDZuXDAL5dD57tEzfU6jHBFr/bbwv7ZMm5PU0fx9BZuf+zKTz
rcJ96tyv/wCklGv6
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KF0RscL0bH6IQ39wicp0fQMHGJ/bTbWUKcvAQfVJ
87yzSQj+zltdf1PDEXyQtv9TguB87+pmfZ8uBF/TatLp+hpM/uG25eGnjBD8
P99KH8z5qO9Qu25bUn0ngg8zH8aH2Q/jH7msnSqZhODD3I/OR/ffepDH3mrD
+aY2e4OmJerA/Qvjw+yD8WHugfFh/oXxYf5B54v0eL1i+aIN58svf+GhV68N
9y+MDzMfxofZD+PD/Avjw9yPzof5DwD4W9AI
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4pjco/823Q91mD6Bv8rst6UDjD9jJhCstHKY
sOCH4bNzmPw/30ofzGFE8G9J1yQaqVo6bHj4cuqmHaEOBlorhS8ssYDIz0Lj
p2Hye7xesZgctITzb4DM+4rgP83S/jbd19aB4+eC9M2XMPmpaUCwzBauHp2v
/pZ3n8FNe4cI8e0XGcIQ/G9s8TN8QqH+22nnoOD4MfmMZaiDz8WJMf8m2zq0
LQ8/ZfQlxEHlSfO8s10IPsx+sLtNQzH4sPCE8T9tCMietdwCYn4uNPwSLRy8
qpv1faYh+E2BnnMbjiH4sPh4nLjwmok8In5g5gMA6JLYqg==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQHSAnluVbHu5QsKb7dsYESwcY377p0fEZ1lYOaWCA
yYeph/GXv/DQ+//QwkHm9SMzqZBwh5kgcNLCQeiT4/k0TwR/0SQrRl8dTD7Y
/GxLVPmZCL7EvDjN0xus4fyvO291/Q21gfPB7rlg48D5c0H6Zq5whw8bArJn
uds6PBGRPfn0fZiDxlvefQYrbR1q121Lqj8b5rC3VtYi/QpUfjWC3+P1isUk
F8EPKVGZ/t8mzOFp4sJrJvoIPo//+impGTZwfn8wkMFv43DtaK5Jg3eYg77W
SuELT6wdCuLZz0nGIvggZ6fmI/gHQPbUhDnU/rYqOCdhA+cvBYVnIoLfCzL/
vo3Di+3rmZ8nIPjg8A1F8EHBwJAe5vAfBOJtHWJyj/7b1B3mUM9ytN9wuq2D
V3Wzvs8qBB8WHjD+G2AwzfwV5nCkbXn4KSUEH+Y/GP+GdE2i0VRruHs26OUt
ZuyxdlB90jzvrFqYw5QJ/FVm3VZwPlj/fEs4P0J8+0WGdRbw8P7zrfTBnEQL
h4qIFaZnZyP4YPeeQ/A3PHw5ddOHMAcHUHq5beFgYgwE/8McTh52WpuZZ+ng
CVLPFO5QvFX09+l7FhB7pMIdpEHpp8DCYcKCH4bPrND4Xgg+LP2DzZ+N4MPS
OwDTcmVR
      "], {{91.91559999999998, 26.184400000000007`}, {91.91559999999998, 
      25.014099999999996`}, {91.04379999999999, 24.6188}, {90.52969999999999, 
      24.6188}, {89.94380000000001, 24.6188}, {89.4547, 
      25.049999999999997`}, {89.4547, 25.6234}, {89.4547, 
      27.200000000000003`}, {91.48589999999999, 27.343799999999987`}, {
      91.91559999999998, 27.367199999999997`}, {91.91559999999998, 
      26.184400000000007`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4jQQ4It0+A8C9RYOMH7db6uCczcsHNqXh58y
ehEB5+fHs5+TvIrgL55kxeh7JcJhf62sRbqJJZxfz3K03zDdGs5fcn8f35xm
Gzhf/S3vPoObNg4cPxekbz4U4TB1An+VmbWtg6bVpNP1ayIcxKde4czYZOvg
qlrKNKsjwkFfa6XwhSO2DiBtM/MQfLC9Kgj+zltdf1PZofYft3Ho8XrFYsIY
4cDhBjSoy8ZBC2Q+AyYfph9s/4xwBxNjIFiM4G8x/3EoxQvKP4PgvwG551K4
ww3pmkQjUwT/SeLCaybzbeB8sH+SLOF8WPg9AAaL8SkEH2YfOh8WPwdA/l0T
7vAF5NFWC4eZIHAVwZfwCPgj8RrBh/kfxm8K9JzboIXgg+PbLgI1/u0Q8Vu7
bltSPS9afLNg8mH+g/Gng+JztjWcH6Pg+DH5jg0k/VhGOHzYEJA9qx0anhkI
/mMR2ZNPpyP44PBaFOFg3/To+IzXNnA+2F+GCD5K+C5CuA+U7IxnRaCGZwYm
H+b/RSD31kSghu9SBF8cFL67I1DD9yJa+P5CC1+k/AUAP2qSMA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{106.46299999999997`, 30.890599999999992`}, {
     106.46299999999997`, 31.075000000000003`}, {106.288, 
     31.075000000000003`}, {106.177, 31.075000000000003`}, {
     101.59499999999998`, 31.075000000000003`}, {101.48399999999998`, 
     31.075000000000003`}, {101.309, 31.075000000000003`}, {101.309, 
     30.890599999999992`}, {101.309, 30.70779999999999}, {101.48399999999998`,
      30.70779999999999}, {101.59499999999998`, 30.70779999999999}, {106.177, 
     30.70779999999999}, {106.288, 30.70779999999999}, {106.46299999999997`, 
     30.70779999999999}, {106.46299999999997`, 30.890599999999992`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4gSBCMstG6IdUtOA4JmNA4w/YyYQaNo68AO5
J+Yh+OkgdXkI/vqijIlvc6Idlr7w0PvviOA/zdL+Nr0XwZ/8jS1+xh8HON/8
2tFcEwlHhynO3TnPs6Mdur1esZhIOjqsd39YJRKH4L9ffszb3DPagcd//ZTU
Dw4OE97W2JvqRTv8B4HrDg4sYXy6m/5GYfDB7tzm4PAmcIdcK3c0nP/kgtLt
n2oI/vfgx0tnu0Q7XMyPZz93EcGHuR/Gh/nPv3d6npAzwv9bTpTtmy+E4Lts
+/z3CgMmHxa+YPeJRjvEKDh+TH5j47AdKF3hiOD3AI1vjkDwG6YCAygfwd8w
FxgisxF89PgDAI3Z1eU=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYCYvY1MlEpzHEO3G6qpUyvDBzWF2VMfMsS53Bd
6JPj+WcGDhvmvl9+jDvOgd9//ZTUEwYO34MfL53Ng+D7mHc6Jsgi+O4Pq0TW
ySP4z3+v/HhJNc7BoenR8RmnEXyY+TC+MQh8NnCwNY3b5akS56D+lnefwU8D
hw7HhKcXlOIcxKde4cxgMnQAOdeaPc5Bel6c5ukCQ4fr54AuuhvrUP/bquCc
hJGDBw+Tdvu6WAcNkP5MY4cpzt05z6NjHQy0Vgpf2GIKca9trENy7B035hUW
cH56GhC0WcP59/fxzTHOcnBgCePT3TQ31iHh8GXt1J+ODm8Cd8i1Ksc5/AcB
dme4+yd/Y4ufwYPg93i9YjERRPDbl4efMhJB8O1B4aHs7NAzPU+oWQHBnwMM
bm9xBB/sHl4EHxYfMD4svnbe6vqbKu7sYA8Kvz2xDstfeOj9n+nkcF7p9s+6
rFgHYWBwpx11hPjHNNbhDTB4ZjY5OJwBAZFYhz/fSh/MKbR3MAHFA3Osww3p
mkSjVls4HxyendZw/v5aWYv0LRYOGXtKJkuoxDrIgOKjwdTBN0kgwnJOrIPq
k+Z5Z3cZObhs+/z3yoZYh8WgAHU2cmh5DQzAs9DwPmYI54Pj/7AhxD1XYh1O
H3ZamznP0KEE6L2a+7EOz7O0v03PNXQQaD5wauFTaPxFGDqgp18A0zw6qA==

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4jNgEO/A4aZayrTLzmGB67bPf/cg+OxrZKJS
dsc79Hi9YjGZaOdQP9W5O2d7vMPUCfxVZtp2Dm+XH/M23xjvsL9W1iKdxc5h
wtsae9N18Q4+FyfG/PtsC1HfjuDPeQ/UUI/gi6xzf1ilguAfUdhQlJEZ7wB2
1hs7h62f/16pKIx3mAKyj9ve4QuQ+7It3qFkq+jv0372DsfL9s2X6oe6J9ve
Qbb1deAOoP29wSUq0+/bO8D8d1zTatJpdQc4f8o3tvgZLQh+pPj2iwz/HBxy
hZoPnJoJ9Y+Po4OqIQcwBBD89UUZE9/KIPjfgx8vnf0lzuHzhoDsWe8d4HzW
xZOsGKci+L9jco/+S3Jw6JmeJ9TMEe9QGbHC9Gy0g0Mon+6mufwI/p+VHy/5
SiH4YPu14iH6sxD8i/nx7OcmIvjFoPA45uCQIBBhuUUAwT+vdPtnHReC/6AK
GOKS0PgUdHR4E7hDrtU63kH9SfO8s1qOkPgIQfCnAKPveTOCb28at8tzTrzD
/X18c4xvOcD5sPCE8d/w7jOYKeUAiZ9yaHqaZe8Qu8uThwlon4kxECy2c1gy
Gxjjv+Ictpj/OJQyyxYeXr6g9NCM4IPjsx7BB0ebj63DnpLJEiz74uF89PQM
ABekUqE=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lAlIVFEUhscZt3FJSiuxzBaDbFyy3LLee8eWaRktzWjSsm7RNNpUjqUV
oVlZRLZoZWgqamiEYBQhFS2TGDXSlCQUKRVGFi0WBUNT0Xrve2/mgNCFy+Pj
3XuW/5x7JqzPX2ZQKRQKN7r1dCvpPjv/iv33LgL5bUee5Zp5cHLM1NbARwd4
yLm+yE+5k0D467KGh+U8fD5/T5dYhNwYEvMifBvykc1vf7YWEHjAVjEPt9kB
MwG/pRerDLk8JLV37bCYCBzLLAyv7ufAeOJTsZBD4Jej6GV9AQf6mfTAEuS4
NTQALfLpudSDQKDrzpwLeQ3IqT0nVv+xI4v+x/LA+TxtNqcQEPa/stbo5Pzm
EdCPvtqjsPCgWjEs6nIagd4xxeumPxGkeDII2C+lm2rDACopxmcTMKl/NBl1
IOVnQLb/frzr/UZkJs/hLUP+U336mH0OoOM+jcBI4Py7hdF/YwFmsEW53zKs
foYPclRl0/dYT2RJLwG259IAqX7BDWsibB0C+Co1h0YVIFdvHVHWsQPZq21s
9oZSAi3MwQCyrsuLqwsFF1sjkk/a9AAVnV+nrM4n8JctI0Bv97fMAcMQzkK2
0nRT0gkYN9KlBem7mEDj7MjHteMAnv3Ys+km1bvK4bm2ZjlI8Sfi/VPB7rQC
yKs2zOpfOhyZRlPR6Ubg6OIP7nE9gotJznOtqgY5leVzUNZHReDNJo2jukSQ
6uGBTKM/V+eNLOqnJvCF1fuQIOWnlt9DkwCsHS0BBD76W6adCQGg3cT5hGF9
hXjaoJHIvuxAAjK93RgyiwAzp4hBdtbbyWJ/DgpS3lSflaw/jwtwo5AqlCD3
c6oAWUyfKLlf43kp/wgCpe53K2KtHHjsoy9gPL4XMb+RyKab1GAQsvg+/If8
93b654Cl+zSQwK2S0CRjC3J79NZmt1//59OVAbsTNDyEe9KAAmR9F8jzQY0s
9qsSOfTgYMY1x1oo+Zls7g5GrmL2bJyLxfptkf15yfMliZPmTRAyk2/FRGSq
Rl+3hoC3dnKRspyDSaxBpxGXfafeop5GTpoPKXjfxgZIGrKofx6yc37uZfcT
cZ465+s/U/lnmQ==
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{122.22599999999998`, 
     27.537099999999995`}, {133.51699999999997`, 27.537099999999995`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4vinF5Ru6yY48Pivn5LqYeUA45sYA0GylcPc
98uPeWsnOHzZEJA9q9zK4T8IqCP4yrd/1mWpIPjsa2SiUpQTHG5I1yQapULN
U0xwKNkq+vu0n5UDf4TllhNx8Q6nDzutzYwzdngClP75L85hyf19fHOKzSD6
f8c5SEy9wpkxyczBtNMx4emPOIc0EJhm5vD898qPl74i+E+h/FQovwOo/MIn
hHzpvvlS+m/jHL7svNX1t9XMoTZrT8nkHXEQ/302dTgPtL5uU5zDobbl4ace
Ifhg+y/h5oPN22rqAAoe850Ivm+SQITlHgT/DAjciXP4+630wRxBMweg76zv
u8c7FIPCY56RQ/lLNUMOn3iHSPHtFxnqjBw8eJi02/0QfP/e6XlCwQi+vWnc
Ls8YBB/s/9h4hy3mPw6ldBk5HFHYUJSRGO9wXeiT4/llRg4fLwFdpJPg8Adk
v6KVw0wQAMZvSuwdN2YLRHzHKDh+TLZB8GHpAQBPVwAy
     "]]}, 
   {Thickness[0.0024923632324354347`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{129.283, 26.2809}, {133.51699999999997`, 
     26.2809}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJHIGYCYv27KmyNSxMczoDAHRMHGP/Lzltdf1tNHQps
ua4vnpLgIDMvTvO0gpmDzqa575dXJTi8yNL+Nt3XzKHDMeHphb4EhxtCnxzP
t5k5xD+9oHR7boLD32+lD+YImsP5BlorhS9sQfCTY++4MUdYOHz+e6XiZVuC
w0a9vMWMZywclG//rMvKQfC5mbTbxQIR/NlHFDYU2SQ4eJ9gt50diuCrPmme
d3aXOZz/JHHhNZN8cwdGoPabTgkOJVtFf5/2M3cAeafAE8G/7JskEBGI4Idb
bjlRFpbg4Nj06PiMagQf7L9tCP7yFx56/xktHH6v/HjJ1y/BoRikX87CIVkg
wnKLR4KDNDi8LBzY18hEpQRD+RMsHIC223KlJzg0shztN5xu4RDKp7tpbjaC
zw1SUITgzwSB1gSH6+DwRfBh4QnjfwXFl6o5RH9dgkPBmu7bGRcQ8TUhuERl
+npg/Ozy5GEqTnAoBMkXmDmAgl8tN8EhRsHxY3KOGcS82ASHA7WyFukpZg6g
6NgTkeCwAuTfRDOHpaAABvqfAQQSEHwvUHy4Ivgab3n3GWiaOSx03fb5bwSC
Dw7vWARf3ZBjjUwWgg9zP4yf8xwYwl0JDofaloef2mQK58PSK4wfIb79IsM9
Y4f986X071YkOEhMvcKZMcnYof/QV42YbAQfZj+MD7bPK8Fh+gT+KrPdxg7R
Kdb3/R2h4a9u4gBMrT/rvBB8sPkB0PAORfDB4TYTwQenx1smkPD2hspzmsLT
I4zPD4z+99YIPthfJtD09swEzr8jXZNoNBXBX3J/H9+cy8aQ/OcHlQ81dgAl
r+vZCD7Q9/2HehF8WP4G52cBRH6HhScAVVTM6A==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYCYluu64sLShMdNN7y7jPotHaA8RtYjvYbfrdz
WFwAFIlOdIgQ336Rwc/RoWd6nlCzQKKD7oQFPwyXOTk4Jjy9oMSd6DDfRufK
rH1ODgtdt33++yfB4f4+vjnGv5wg+j8nOIhPvcKZIeXs8PdKxUu1jwkO9k2P
js9QdnZQvv2zLusDgg/k7Sl5jeCH8ulumvscwY/uP/RV4wkmv315+CkjEQRf
H+Q+PmcH5jCgAU8THP6DALuzQ7jllhNlzxIcWBZPsmJkhdoHdN/OW11/U887
OWTvKZkswZHokM35c0F6tZODdrvYzXPyiQ7GIHDZ0YGbCSjimegg/MnxfNpa
B4j7IxIdvmwIyJ6Vbgfnw8ITxudyUy1lijJzuKAEFNBKdHiSuPCaib4x3H39
wSUq0/8bOGjEAD0AdL86SP9PA7h/wO5/j+BfFwI64BmCz++/fkrqCQN4eMH4
sPCE8WHhDePD4gPG/x78eOnsLwkO0vPiNE8/gLpHItHBARTetw0d4oHRfdsx
0cFAa6XwhRZjB5B2w5hEhy3mPw6lcJk5TJZgCePLTXSwrYxYYbrWHJ6ezoDA
HEsH9PQGAH5EJoA=
     "]]}, 
   {Thickness[0.0033185226326020553`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{83.6129, 15.103099999999998`}, {
     141.85199999999998`, 15.103099999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYnVDjjUyp6Ic2hXYVc9cEXJ4v/yYt/lOBP/L
3ysVL7dFOQhXTio5yyLk4LLt898rG6IcWsRrWTOP8UHUr4xyYAABB16HDXOB
IoujHPZ372sySeZxAOpWM6xA8B9UiaxzT0TwweovR8L5PdPzhJpfRDp82fdx
a/o0PofjZfvmS4lHOcwEgUghh/hdnjxM2lD7GoQd1shEpVjPj3Loj+j2ZzSQ
coD55wwIrJGB8+9oyq75v1kBzjcxBoJiZQegax5WtUQ5bDH/cSjFSxXiHm0E
378X6CCg+2B8sHvmRzqcBpn/RgnOD+cUaze+rwDny+9asC/VT94hQSDCcssB
BB/s/sMIPsx8GP/JBaXbP59FOnTbeO5KY1KA81PTgOAYgv/ANd5xVqGiw4qP
l3yTbkQ67M2veTvzqSLcfBg/Y0/JZIk9CP6WE0AH7kLwt8u1vg7cEenwHwTu
KzrwA5174lgkNHyVHZ4snX1E4UOkww6HpkfHZ6g45As1HzilGAXndzgmPL2Q
hOCDze+KcuCPDbhv9FwJzoeFP4zvuubocoYIWYcWoO1yqVEQ/5+TdNgOTF4V
ltD4PSAGD0+Q99OescP54PQwk9Vhwtsae9NtUXA+enoGAFdtTFw=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYC4pKMiW9r6mMdqj9tCMiu0nSA8Z9naX+bvlfT
4YjChqKMyliHjPwPrSe/aDpcqXipZliA4D+5oHT7ZxqC/0LNkGNNSqxDQkiQ
+oKTQPmls48oJMQ6PIoQ336xASovE+PQLF7LmunG5PA9+PHS2VOiHdYI6fCl
35N22P7575WKidEOIW8vf5zhKOPwHwT6ox0q7v+4Zdwt47DlRNm++V0I/na5
1teBHQg+f4TllhNtCL5MVIr1/fpohx3BVhH/1WUcfJIEIixNoh2MQWCyhMOG
ue+XH9OOdhCunFRyVkXCIX6XJw8TkO++5uhyBgkEfydI/3NxOP+Ba7zjrIni
DuvdH1aJ6EU7BIHcmyjusBzo3Q1GCP4C122f/5og+B5A3e1mCL6Peadjgm20
w8HufU0mh8UdWl4H7pBLjYb4e76kg8g6oAV/oh0u/z52fV7kZ3uQdjHGGIcX
tY+zz6/5YA8K3g1MMQ5bvTZYzKn8YO/fOz1PiBvBnwP0nrc4gu8CdM4ViRgH
8yRdO1aHj/YT3tbYm8rFOMyaCQSSX+xrwBbGOgTckq5JFNJ0kAUG7466WAev
E+y2s0MR6WOTXt5ixhgEH5Z+AFOtEMQ=
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{117.714, 12.712099999999998`}, {
     123.56699999999996`, 12.712099999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxd1G1Ik0EcAPA5TS1E0w1nbs69OP2QBGkiouBfynRZrBeIUd0pMl8imxBW
FhMsy2UaRmamflCIMEFHSZoMW5SWfTAzMcowVmjpSClLSole7p7H3YF/uA8/
7rm3///u0eaX7i/wlUgkPqRlkiYlLaBLdcgyiKGZxkoYeN0dFh9chBVgz8j7
NHYZQ7251uQzFglDmrsnijMw/KPRpoTr22tLZqswfMjMzWh5pYKoi1/29Tsw
hKC97oQ4DbPszLWyF3465uyupx2SOb04TymG+8nLTyy7DPB29NeBaQO3sN4k
Yt7R9+PPRDuCgVLbQvNrPbOwnkLHXJNmdBbqtFDXZA2r6kfQ+dNTPvJNA6c9
sVsDh9Z4grugkMRnBCM0dmuZvfv3Oovu/7mOjT852JfZHKWHbYkkBrnT3KYr
TS7uC+T46ofcQn6dq/NF6IFkP9X9BoEFTe307Y+BrI9n5Y5ozDwV43+uUc8t
7DONOztIutluxdCzxXrL5wi3d/9eC3mv18Ke/I3mlBIMN2n9UzQwUNYQ4XcQ
g5x+b1HD8ClXW2Q6Bpt7+V1ijkrcP6mPheYhVgV3FsfJFKvjN6mgl6S/fAWB
XRNgGFlSgtxBTjCPIO57jKfFoxTr6UFgNphVo1Pc0c52V4GVWxwfCWaSDtMC
N3Iag6S/ua8u2NKT1JiZXt/UXO70JOw02jDMVx+vTWhVMIv5kDGfV1SsO1q9
Hh6oyQXNxuCpmD72Mt4fLtH66Li7aUH+IubKRvIAHiFQ3gtvk+YFwteOZznJ
nQhmaX9XMNjoAo+ReC8Sg1l952j/fAizcH5HKLPwnkJlEG8PnxwdRlBM8+0v
h/fkOll7uMV3yC3Usw6J5z0sYxbyXxPKbJoxjic1bICJcnKBxxAsuRZ7i274
svp6PXO7dUhTye39PxjofMYgWPv/+A/e1uVO
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.42393516842275014`],
  ImageSize->{144.04395516811957`, 39.29269240348692},
  PlotRange->{{0., 144.04}, {0., 39.290000000000006`}}]], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.938824308044958*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"60e3e30f-3b3d-4645-a155-4e0ffb7da1c5"],

Cell[BoxData["0.1511499468945182`"], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.938824308176962*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"26a26c17-2224-2e44-baa2-4d7cd3b9ae2e"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "2"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "2"], "-", "1"}], 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}]], ",", "x"}], "]"}], "//", 
    "Steps"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "2"], "-", "1"}], 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}]], ",", "x"}], "]"}], "//", 
    "MaTeX"}]}]}]], "Input",
 CellChangeTimes->{3.9386653090197344`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"d2e6dcc2-125f-2247-b435-445f9d713d0a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"d", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], 
                    RowBox[{"p", "+", "1"}]]}], 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]], 
                    "-", 
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "d"}], "-", 
                    RowBox[{"b", " ", "c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]}], 
                    ")"}], " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]], 
                    HoldForm], TraditionalForm]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["396", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"NeQ\\\", \
\\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"b\\\", \\\" \\\", \\\"c\\\"}], \\\"-\\\
\", RowBox[{\\\"a\\\", \\\" \\\", \\\"d\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"NeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"n\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"p\\\", \\\"+\\\", \\\"1\\\"}], \\\")\\\"}]}], \\\"+\\\", \
\\\"1\\\"}], \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"d", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], 
                    RowBox[{"p", "+", "1"}]]}], 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]], 
                    "-", 
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "d"}], "-", 
                    RowBox[{"b", " ", "c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]}], 
                    ")"}], " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]], 
                    HoldForm], TraditionalForm]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"x", "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Int", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["x", "2"]}]], ",", "x"}], "]"}]}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[$CellContext`x - 2 
            Rubi`Int[(1 + $CellContext`x^2)^(-1), $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["209", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"PosQ\\\", \
\\\"[\\\", FractionBox[\\\"a\\\", \\\"b\\\"], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GtQ\\\", \\\"[\\\", RowBox[{\\\"a\\\", \
\\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"||\\\", RowBox[{\\\"GtQ\\\", \\\"[\\\
\", RowBox[{\\\"b\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}], \
\\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"x", "-", 
                RowBox[{"2", " ", 
                 RowBox[{"ArcTan", "[", "x", "]"}]}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[$CellContext`x - 2 ArcTan[$CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"NeQ\", \"[\", \
RowBox[{RowBox[{RowBox[{\"b\", \" \", \"c\"}], \"-\", RowBox[{\"a\", \" \", \
\"d\"}]}], \",\", \"0\"}], \"]\"}], \"&&\", RowBox[{\"NeQ\", \"[\", \
RowBox[{RowBox[{RowBox[{\"n\", \" \", RowBox[{\"(\", RowBox[{\"p\", \"+\", \
\"1\"}], \")\"}]}], \"+\", \"1\"}], \",\", \"0\"}], \"]\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + $CellContext`b \
$CellContext`x^$CellContext`n)^$CellContext`p ($CellContext`c + \
$CellContext`d $CellContext`x^$CellContext`n), $CellContext`x]], 
          
          HoldComplete[$CellContext`d $CellContext`x (($CellContext`a + \
$CellContext`b $CellContext`x^$CellContext`n)^($CellContext`p + 
               1)/($CellContext`b ($CellContext`n ($CellContext`p + 1) + 1))) - 
           Rubi`Dist[($CellContext`a $CellContext`d - $CellContext`b \
$CellContext`c ($CellContext`n ($CellContext`p + 1) + 
              1))/($CellContext`b ($CellContext`n ($CellContext`p + 1) + 1)), 
            
            Integrate[($CellContext`a + $CellContext`b \
$CellContext`x^$CellContext`n)^$CellContext`p, $CellContext`x], \
$CellContext`x]], 396], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[$CellContext`x - 2 
           Rubi`Int[(1 + $CellContext`x^2)^(-1), $CellContext`x]]], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"PosQ\", \"[\", FractionBox[\"a\", \
\"b\"], \"]\"}], \"&&\", RowBox[{\"(\", RowBox[{RowBox[{\"GtQ\", \"[\", \
RowBox[{\"a\", \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"GtQ\", \"[\", \
RowBox[{\"b\", \",\", \"0\"}], \"]\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + $CellContext`b $CellContext`x^2)^(-1), \
$CellContext`x]], 
          
          HoldComplete[(1/(Sqrt[$CellContext`a] Sqrt[$CellContext`b])) 
           ArcTan[Sqrt[$CellContext`b] ($CellContext`x/
              Sqrt[$CellContext`a])]], 209], 
         Rubi`RubiIntermediateResult[
          HoldComplete[$CellContext`x - 2 ArcTan[$CellContext`x]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.938665467790081*^9, 3.938665599165537*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"059cdaa0-b6d9-8244-9a24-ed26b8b57552"],

Cell[BoxData[
 RowBox[{"x", "-", 
  RowBox[{"2", " ", 
   RowBox[{"ArcTan", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.93866546780567*^9, 3.938665599181183*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"9af22b5c-618d-e047-b504-9939ead8889e"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.005583161185863436], 
   {Thickness[0.002668751046842723], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v6Ibn/GD4wOS+7v45vz2NiBAQxYHWaCwEtj
B5mNYvOZFrA5nAEBHRM4X+Mt7z6DSgT/1GGntZn3TBxiVCNkztmwODxJXHjN
hN/UQf2TystZnExw/navDRZzKv/bw/gmxkCw+Zd9j9crFpOHJnB+GgiUIfhb
zH8cSrll7HC4e1+TiTITxH2Rxg43eG+LpX5jh/PXCunwpdsJw/kea44uZ/gh
6uBzgt12tqqZQzTIfTGSDjEKjh+T51g6VNz/ccuYWxZiT7KtA4gyFlZwSDh8
WTt1poND6eFtrjNjFR3218papLc4OfwHAXslhwfA4DI+5ezQaeO5K01J2WGj
Xt5ixj8uDt0g/idlh0SQ/oOuDhtA4jYqDm3Lw08Z8bg5vCneKvqbWxXivotu
DjWfNgRk/0LwU2LvuDHvUIPzpebFaZ4OUHc4ALJ/i5tDQkiQ+oJMdQdw+Kxz
c5Bd/sJDb76aQw7nzwXpq90cGliO9huaQ/V3Ivhg+WQEP6REZfp/AzeHE7t2
9LJdUHPg8V8/JVXCzWFKe2vU5Rh1OP8YSP4Dgl/726rgXIeGw85bXX9T9RF8
lsWTrBhTEfwvQG/N2u4GSRd26pDw/ezmwMTZJZ/8ThXOB9snowLnp4L8dUwJ
4l8fN4d0cDpQdJjyjS1+hoirwx1N2TX/kxUdHJoeHZ/B7OqwI9gq4r+7DCT8
WZwcRConlZxlEYfYb24DkT8uCknfyVYQ+RQRBwOtlcIXUiwcHrjGO866KOTg
CDJvt5lDqwK76pkvghDz7pg6LLm1/LFhM7+DbWXECtO5xg4t4rWsmcfY4fyA
J56XTINZ4HxYeoflJ/T8BQCN5mii
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{24.3922, 40.6875}, {24.3922, 40.92659999999999}, {
     24.165599999999998`, 40.92659999999999}, {23.998400000000004`, 
     40.92659999999999}, {17.485899999999997`, 40.92659999999999}, {17.3188, 
     40.92659999999999}, {17.092200000000002`, 40.92659999999999}, {
     17.092200000000002`, 40.6875}, {17.092200000000002`, 
     40.44839999999999}, {17.3188, 40.44839999999999}, {17.485899999999997`, 
     40.44839999999999}, {23.998400000000004`, 40.44839999999999}, {
     24.165599999999998`, 40.44839999999999}, {24.3922, 40.44839999999999}, {
     24.3922, 40.6875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4hgFx4/JPnYOM0HgppMDjB8hvv0iA5uzw9Ms
7W/T39rC+flrum9nPLCB8+tZjvYbXrdx4PFfPyVVAsHfeavrb6o/gg9Wv84N
zu/xesVichHBf8O7z2DmJTcHDjfVUqZZCL7MvDjN0wE2DgmHL2unrnRzSIm9
48a8w9qh7rdVwbkCN4czIFBjhcE/UCtrke7i5mBiDASHEfwNenmLGWOs4fz9
IJrFxqFtefgpoxwEH+Z+GB/mv+kT+KvMflvD/R8Oot9ZwflPEhdeM+nH5MPC
98+30gdzHlo5TP7GFj/jjpPDFvMfh1K4bOD8pyD1+Qj+XpD9VxB8cPj8soXz
0eMPAA+Txdo=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4gO1shbpOq4OaSAQ5uIA4+dw/lyQXuziIDH1
CmeGEILv0PTo+IzfLnC+yCfH82mhzhj8mSAg6Qbnr+m+ncGgj+C/4d1nMNPL
zeFifjz7OUsE/wwIyGDyXVVLmWYZIPgw82F8mP3FW0V/ny5zhPMTD1/WTk1E
8OUdPyafccXkM4BABIKv+qR53lkrF4fjmlaTTscj+DDzYXyY/eh8MD3FCc7f
eavrb2o9gl8RscL0bLKTA4//+impFgg+LHzQ+WB31SL4MPNhfJj9sPiB8UNK
VKb/F3CF82Hxi86HxT8A1h/rdQ==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxFlGtIVEEUx1ddEimjpDASy0CJ0Kx0LZGk48693bkVKCWsQaFb7CouPiB7
kRaFhGWZmdHu9tAS0g9hSoUUYS9Ec31kiWF9SCJKKorsgWVpOzN35xy4LL+7
d86c8z+PZbtKtjpCTCZTkP+x+Z9g/9O9Iq3O16HDw4ro1PzbBALcnljcFHSf
gNvjt3YdWsZp4swjAnMyb9Y7WpC/hneu9niRqzd9NFs8Oiw6PxxWcI9A/a9Z
ue56HVbVNk6uaSWQzMylw/e2LJd3OYHP7HyEDkem0koHxq2wNOPb7r5+Knnd
SFeRxY3Mzx+ioMbtDfbOI5Lvvjr5z5GJnF0We2Gm1IjnKIW8Jy/iHScIDJXk
hg54KOQ7/faFwDv71RHLIAWGzk4FVrI431MY65x7KXmxCm/4rw4RExmDzp0q
bGT35iGrBs83mPupwf8b1icMe1t1YDJ6dBU294SmX6zQhY6gSj0O5rSk9Ech
X2HnphXJ15m+owqkMj2qdIjhOilCr8vIG4697Xb7kPczv590WMDi+Ylcdmfh
lG+JKvlG9esCU66R7zWj/uUqNLN77ch9zMzIh1ldnlERV4wKf3YUdU0/pmBh
cYeoop8aKOREdgyZ9qmwjdUFqDzPdYpDFnXSJPM412pCn1uKZK7HWeQ29v0p
BcxNdWlB6Rocb7b1JlUq0MPu15C532xknrdNE/qcVoTf7RoA0/GcIuKu0USc
6aro5x+arC/PP4ZK5vVwILvCfjfm76EwGlVuT4pG5n0zqUjmeYwoQv9CKvOd
YWYz+rHQiD+WQgW7101EvuHUyJuI/hzT5LxMsDk7g2xiVoX8nM2DHZn3aYYm
6vzXKuI8oIn5CiXifaWhVwqy0BmZz5eTCP2KNcMPEXplIfM6JCDzPWQ2OAc5
sC8CzOP5YBW8RYNItm96rbJeAebfvUTmes+m8ID7IWJe4o1+JUToq+C+4XHU
Unme75OnyLyuDl1yYH/yvVaH+zSwX/8DOClSlA==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4hkzgUDSxyGH8+eC9MOuDstfeOj9/+kN55ds
Ff19+pu3w5ru2xkM66H8d94OG/XyFjPWuDpITL3CmfHI28FNtZRpVoarw/5a
WYv0O94OPP7rp6QmQNX3IfjzbXSuzKpD8ENKVKb/P+EF56s8aZ53Nsjb4QwI
3HF1+BOTe/RfkrfDBpB9b1wdFBw/Jp/p9YbQvG4OOhMW/DCcB3WPjJuDyCfH
82l3vR10QeJhbg4w/+mB+H0IPtjcVwj+AZC7U9wd7JseHZ+x2dtBFeSOTe4O
7cvDTxmZIPgX8uPZz+30gvN7vF6xmGR6OUSIb7/IEIbgg8Pvtxucn3D4snbq
STeIfyd4OTzYxzfH+JCbw5PEhddM5iP4U76xxc/YguCD7b/i5ZAI0n8Rwbe4
djTX5AeCf1O6JtFI1x1iz0IEn2XxJCvGqQj+G959BjM3eTl82RCQPavcHRKv
370g7pzoDnGfhjecf1zTatLpdgTfBRTPO6Dx7YDgw8ITxgeb0+DmoA8K9zxo
ejJ2g4TTNy8HBhDY4QqJr1IvBwdQuBu7wsOLF5QeNBB8cHyqIfjg9MHj6rAF
FO9/vOF89PQMAEOIRJA=
     "]]}, 
   {Thickness[0.002668751046842723], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.1391, 32.64099999999999}, {
     57.09299999999999, 32.64099999999999}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4gNty8NPbbJ0YACBBlMHGL/ut1XBuRumDn4X
J8b8C0bwrwt9cjzvZgHnP8/S/jbd1sLhBYj+i+A7ND06PiPbDM6vBanXsIXz
nyYuvGaSj+AvfeGh97/Q1qFgTfftDAYEv5HlaL/hdnOH3uASlenytg6nDjut
zZQzdzgBotfZOJgYA8FjUwy+zwl229mhNg4zQUDTDM6XmHqFM+MQgq/6pHne
2SxzhxvSNYlGSxF8mPthfJj//nwrfTAn0Rzu/wO1shbpIWZwPtjcr6YYfFj4
psTecWP2MHP4svNW199WUweZeXGapwvM4Xyw+qsIPth+Kws4Hxw+CZZwPnr8
AQA+lNP6
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4s8bArJn3XdymAkClRYOMP7i+/v45my2cPA+
wW47+yiCX7xV9PfpdQi+u2op0ywORwz+fzCwhvNVnzTPO6tlA+cvfeGh9z/R
xoFl8SQrxrcOcD5Y23lMfrj49osMegg+zHwYH2a/z8WJMf+C7eB8jbe8+ww0
EXywuR9tMfhnQKAGwRefeoUzw8nC4cvOW11/Ve3gfJj5MD7MfnR+Ggh8M4Hz
HZoeHZ9xGsE/UCtrkT7FxMEeJP4awYeFDzqfz3/9lNQTCD7MfBgfZj8sfmD8
9uXhp4yOIPiw+EXnw+IfADD4Acg=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlGtIFFEUx9fa2rS2D5kkqJGgkVnmY2d2dzQ4azszPbREC40k23LVNLMP
GhVmYlGg0cMMXZVNEVKhJxTaF5NsS3yV+cgUUkKwooeamKlpe+/dvRc6cD/8
ZriXc/7nf47v0axY81KFQuFiP/H2s8R+5hMzbQvpMkS1qrZXcFpwcvDmeve3
Ri10oEiWwdt6OKA9RgtQ8Ol12SHGGwwTxzqiGTef99GlRskwP50zUmnQQmuA
UNwuy7Dpu7opOEALKSjWy/A46GSNizdP7tskaGuJvH/cysH+bL/SxXzGJ1z/
VKXuYYzvB0mQsK6hW/GDMc4rg6ec/dRjrv0BT/LRSHAtzv7wMA/KmmLBJVoC
C4p6LXje7nVNK3DwLj0caekJNFskuLr7q1LjIsDaScOblE4Jxh/FZJRfEeBs
Qh3X6S5TPuPgnw7G7xjY/3dZSaoukwyLKJIEyJsTTnUFyzCWHjhdGi1QPZ6j
PJWMV0j+OUva9JS9kL75eqJHuAzqfQ9LzGl6olcMY1x3HuN7RUNpijsyTKF8
Ghg/0c68SHYTKPuNXrR2FjrqPSDDNtT/lwIMeuWaQj0YK1A0SpRxHy9JEIGE
UQuw9UbVTMhpCTRh9ujRwyzyU6wEF1DdjQJcro1vC50S6X3RXmb5AOOS6eVJ
ZRGM737eGbT4xUj00egpYz3GdZSxX0d1oOu3ZWrGjTCE8u7TET/PMh41Vfdr
VCLlkabVlWFuIkwifcZ08AF9V4uwt/tm4sIvHfGBQST9lAXi51qR9hfX38sY
98OT+cUasaW3fKO9fqXteoiKcTzyb5OeMu7HOT2sQfr7SLRerONKCYpQHtWO
/N+LZB4WeFJvswgD6KLEE3/eEum8+KO+RjLG74UzXobmwYMxnvcpI/HdK474
O1Ak8zXEkf7rHHppecqJaJATGeM5sPBEP18RDuJ6eaKXkvGzwcK/5mEjZeJT
B+cxdu4LJ+N8KjiSx6KR7BsTR/vl5G/2tWMpZIz1bhLJvuvjyLx8FIkucTzR
9zfTA9e/Q6L38T7JZbwKzZmnTNm5P+uQLyd4+H+//gO9ZVbG
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4v8gsN/TYcn9fXxzgq0cePzXT0ldgODfka5J
NJrr6aD+pHneWS0rh1sg/lRPB32tlcIXjlg61P22KjjX4ekQIb79IsM8SwdV
kLomT4fnWdrfpvdaQtSbIvgsiydZMaoi+Dtvdf1NzfeA87u9XrGY/PRwSE8D
gjYrh4TDl7VTOaH2LbFyaFsefsrIxBPizhdWDlO+scXPcIHKs1g7VESsMD3b
DHTvW959BpXWDjD/aYD4LxH8IyCDFtnA+T4n2G1nT7V1WPbCQ+9/pKeD+NQr
nBlGdg5vgNpm3vKA882vHc01SUDwP20IyJ7F7+FQCwqHCls4Hxx+h23g/N7g
EpXp8TYQ/5p7OPSA/Blo4+AFstcVwf8dk3v0XxSCD7a/ysOhH6Q/H8G3qQR6
dC+CX89ytN9Q3dbhuKbVpNPuCH42588F6dYIPsiY/xEeDlv08hYz7rF1EPrk
eD5trofD08SF10ze20Lcdx7B15uw4Iehniecv7r7dgZDPDS+/RB8WHjC+CVb
RX+fPmcNiR8RaHoytnbYXytrkT7Hw+EMCNhYOYC8cVbaw8Hv4sSYf8aW8PAC
pwdZBB8cf5IIPih5pD2zcJAAxcMiTzgfPT0DAOi8S84=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQHVyiMv3/nAAHE2Mg2GzrAONv0MtbzMhjB+FnIPj9
C34YPksKcOjxesVioojgN7Ac7TfcjuCv7r6dwfDfCaLuo7+D/gSgxDsE/3J+
PPu5g04OrqqlTLN0AuB8jp8L0jcbBTg8SVx4zWQ7gt++PPyUUQ6Cf38f3xxj
KUcIXynAYb6NzpVZbo4OCo4fk88wBjhsBLm3xtFBF2TvMn84/wwIfPGD87eA
6Bg/iLpnDnC++NQrnBlKCH7+GqCHDtg53JCuSTR66+egr7VS+MIUWweRT47n
06b6w/lg81kC4PzmQM+5DWoBDk+ztL9N17WD+N8wwOHLhoDsWekIPkw9enwA
AKzWsCU=
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQ3eP1isXEMMBB/S3vPgNJewcYf+kLD73/D+3g/Nrf
VgXnbtg5NAd6zm1QC3DwOcFuO3uqnYP060dmUiIBDlvMfxxK0bJzmDETCF76
O/z5VvpgzkVbhzvSNYlGcxF8kU+O59NKEXzza0dzTS74OeSv6b6d8QHBrwfZ
p+AA54OkGfodHEDOnPnIz6F9efgpozMODq0gmsXfYb6NzpVZ/xwcVJ80zzur
5O8QIb79IoOeo8N/EIj3dxAG2Rvr6LC3VtYifQ2CD3LuTNYAOH8/SF4hwMFV
tZRplgRUv3oAxB0MjvDw0J2w4IfhMwc43xgEHiP4nzcEZM86juDDwhcA+5qk
oA==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlGtIFFEUgFe3crOUyMpSfBT5oxItNQtxZ878SLQU506QCiuitSpCD0oj
S1FaKUjLfFQqVoaEheUTk/5YEJHl+sKyl1CWqZlEFqXhq7n37s6BLgzLN+y5
c893zj0bU44qZr1Op3NQnzj1cVSfqDOWwOhNCuTOhh3rSRfBzocShyL0p0QI
pstHgZj+EtOCRYRJl47tlR7IiYefLrS4IdcXvk/XqRy49a5bX6YITcNfr7Ss
UsDkK00dNImwSNcsgZHkW4MhsQKYaHwvgbk/WR+r+40wvSypIvo+soVEXc8v
RWbxFgJFeyeWhGwUNM5sWzvbdQP59nhkwOKwAPfoec4TeHyuLu7FahFivddl
xJQRsNI1JEKCe3u/roFAWqq6OgByGx6k5D0k8KHDtTrYQ4JXTw+H5A8QcPsp
9aYmSmD4W5PW+gfZ6T+upMtF0bitIKev1Uvh76MkKKTnXqrAytjGcjNImo/s
+Ds7uz2Rb4b7v6xaAI3raD5vgftwVsBH1WntBu5rLfJ5Nc0gf+Ta0jCHmHDb
eX4jn6C+vCWNWd2SJHhN83VXoDngSK1DjgQP312YN08TjZm3TmS/EcuNbtXf
rkE10FeCz2u8nn+pI7xv9BLso/10lUA89XxSgss1MztGUzH+aJJTz4YEZPdI
eW79CmTaNtZhmftpBY2ZjxLkJvr/IoDx9kb92IjMPRQA//4E8qNcr91pP5Cp
5tEpmfu5CDzfXzKIZz89qygD/t7FVl+jxPsZsN4s/wPIrB7ZyJ7fPoV65BN4
65mTHOSFvMcvy7FqBjRm9RgE7v8M0fJlfXnc1o8ZtvPH2+7DDpHnG03AEKFu
eFrg/RmK94XFuSKz/ZyR2X2YljVmdRuToYL2618j38/Rdr9cBV5/A+F5ZyAX
78/cfK0Ymf1aBe5hXub3dUrgcd+Rt4SVduUNITMvnTZuRrbPCzuz8/QYOU/K
fN6UG7V62fnJwDbzhiBk5lv1lUfnnUHgfWAiYKZezgncbzr6WU7zv4TxbJ7U
I9O0F2eQ7fPzDa23H85T+3z9BwhofMU=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KF0RscL0rH+ow5RvbPEznjg4wPiX8+PZzzE6Oqg+
aZ531gnB33mr62+qOYIfUqIy/X9JMJzvXd2s75OF4GtaTTpdH4PJ152w4Ifh
Mwc4v9vrFYvJSQeH2nXbkuozEXyY+TA+zH4Y/8hl7VRJJwQf5n50Prr/CtZ0
386YYA/nbzH/cSjllD3cvzA+zD4YH+YeGB/mXxgf5h90/pL7+/jmTEbw1d/y
7jOItIf7F8aHmQ/jw+yH8WH+hfFh7kfnw/wHAGiA0jM=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lFlIFVEYx68a6UP5oFYuuUU+tGkulUh35puHRMWLtszR4IpoXRVDM9Ro
URQVizJMs9KLmW1oWHn1ouaDJpWEuaNZLpGKmi0vCoXi1pw598731IHD8JuZ
75zv+3+LZ/z5EzorlUplIe0oaVtK2zD1427jPIHslaC0viQezHw2ZiLY6hIP
FXTNEtAMlmjX83k4lbH7/sYk8vuhfTqnMWS7RaE/YZSAz97n9gMZPDiGRK46
fiag9RAWzmh5SKDrLYGZuEcjAREcs79HYPVv5mTloBpiUjrXG9OR51vqrb5H
I8v2YQSKwn5uCvDkFM5o2rbSXYX8bD7Ee2OKAwfqj4ZAR2FN1Ec7HpoKsgaM
pwn00DXBQ0e2a2BiBoFEatcOMOPg2jWbQ+Bbu22lv7MAR/cP6+cqCNjTc2IE
SIu17nNq+z+r6BpG3vlr+rDzDGE6hgqwaIg8p+8msCWivkwHgqLH5ejaQ70u
yA/pxeugcA2NZxSYHgME3CU5e3oBtFSvceTfW9sPViwi2yxXJxoto5g/f5DT
qV5ugsJ1N8eTVLGmeL8SaPBOfWKRJQBNW08bcoC/tIqR5TxkEjgy0pkS4CFA
2NV8n/BUAvQ3fyuB1ZOWQPSOlkHVRQGWNseWhx9A+0+SWa47cvar5vicQVHh
61La/GpFpo8RFJb1KEE20P+LACLdtidr6kS4Rt8XALvfgOw1k1/V24z8tDTI
QvNaZPrcAhZvqwh83vSH8jvA7h0yfVcLrJ6tMb9y/K7Icj545LzjoQ9ygwmM
umTF+bkiH/PKtNQvgcJyPkaA6S8QJV65TgNN9Zhs8t/N1A++PIvXnoBNsHTg
FY7V45qo9At9rR9Gls8bQJb7oQ1ZrtOXIpTT57Kandclsv6y5Vj++0XmRzJy
8UlpMBQjy/f0cCyOdyLTaYFjzybk29VLvnOPkV/QOiw2cQOyeV6YWfanT83Y
KLJ5U6ZW8mXmPUGl3TlLyLLedgRy6Lyz4Vi/7CKgo31WyLG4vHHeyPGLRLGX
58kF5NaxG2u6N8jm+fmF5tsL56l5vv4DAmF0+A==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{103.49200000000002`, 32.68749999999999}, {
     103.49200000000002`, 32.9266}, {103.26599999999996`, 32.9266}, {
     103.09800000000001`, 32.9266}, {96.58589999999998, 32.9266}, {96.4188, 
     32.9266}, {96.19219999999999, 32.9266}, {96.19219999999999, 
     32.68749999999999}, {96.19219999999999, 32.44839999999999}, {96.4188, 
     32.44839999999999}, {96.58589999999998, 32.44839999999999}, {
     103.09800000000001`, 32.44839999999999}, {103.26599999999996`, 
     32.44839999999999}, {103.49200000000002`, 32.44839999999999}, {
     103.49200000000002`, 32.68749999999999}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4i9/r1S8FItxuCFdk2i01d5hT8lkCRY2BH//
qYWu25hjHHq8XrGYNNo7CDQfOLXwb7RD7W+rgnM37CDqv0U7pMTecWNeYedQ
nwUU+RDtEKPg+DG5x85hgeu2z3+PIPjr3R9WiaxD8MHqFRD8iBTr+/6m0Q4H
2paHn7pk5zDFuTvneXK0Q2oaEEyzd9BpF7t5rjza4T8I3Ld3KH+pZsjxJtoh
Qnz7RYZjDg4w/3ifYLedLeoI57MsnmTFuBbBPwMCMU4OD4Cucb8Y7fCGd5/B
zEtOEPdUIPgyUUAHySP4YPe8jnIwBgFrBP+4ptWk09sd4fyL+fHs5zIdHfTv
qrA18kbD+WD38yP4MPNh/A1z3y8/Zhzt4K5ayjSrAcGfCQIbEfz9tbIW6Xcc
Hcr3zZfSV412SDh8WTv1J8J8GN+80zHhKQeCXz8V6EB2BL/ldeAOOVZoeH53
dLgDdO5UYSg/3slhfVHGxLc20Q66Exb8MFzm5GBz3793eh6CH86nu2nuegQf
bP51qH8sEXxY+MP4v2Nyj/7TcnQI2CHX+nojVP1OB4cWYPJybYPaH+4AD09w
fP2xhfNNQOG/2dYhdpcnDxMwfcL46OkZAHXpVPc=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4pKMiW9r+GMdltzfxzfnsbHDfxBQj3WYCQIv
jR0WuG77/Nck1uEMCOiYwPkab3n3GVQi+KcOO63NvGfiELBDrvW1YqzDk8SF
10z4TR22A7mBAgj+9XPfgx//jYHz2x0Tnl54FePQ4/WKxeShCZyfBgJlCP4W
8x+HUm4ZO/AwabeLCULdF2ns4P6wSmSdPYI/xbk75/lmBB/sv/uxDj4n2G1n
q5o5PP+98uMl0TiHGAXHj8lzLB0SBCIstwTEOZgYA0GyrcNd/97peU1xDgmH
L2unznRw2H9qoeu21XEO+2tlLdJbnCDhczzO4QEwuIxPOTvYmsbt8nwS57BR
L28x4x8Xh5YDQA3/4hwSQfoPujoUgOxnj3doWx5+yojHzWHr579XKhTjIe67
6OYw5/3yY972CP6TC0q3f4Yh+KqGHGtksuIdDoDs3+LmULpvvpR+bjwkfNa5
QfwbHO+Qw/lzQfpqN4cvQONfukH1dyL4YPlkBD+kRGX6fwM3Bxeg9t+R8Q48
/uunpEq4OdxRYWucmo3g7ymZLMFSh+CDw39ivMPOW11/U/URfJbFk6wYUxH8
LxsCsmdtd3PQaRe7eS49HhK+n90cnoLC3xbBB9vHjOC7AJPTlRtxEP/6uDnw
A6PnxLo4hynf2OJniLg6iKwDxviaOAeHpkfHZzBD+S7Q8GdxgqS3D7EQ+81t
IPJ3oOk72QoSP8diHQy0VgpfSLFwaHkduENubayDI8i83WaQ+JgfCzHvjqlD
BigAamIdbCsjVpjONXaY8LbG3tQOwd9yomzffCUEH5beYfkJPX8BALnAkvE=

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4ts/67L21CQ5zASBm04OMH6E+PaLDGzODuad
jglPCxB8FbbGqc7+CL66IccaGb8kBx7/9VNSJRD8nbe6/qb6I/hg9evc4Pwe
r1csJhcR/De8+wxmXnJzCLfccqLMDcGPTLG+72+b5JBw+LJ26ko3hwlva+xN
tZIc6n5bFZwrcHPoADrvAhMm/0CtrEW6i5tDKJ/uprncCP7S2UcUNsgh+BZA
6/YZJzm0LQ8/ZZSD4MPcD+PD/Ad0Te90I4T/NWL6D30VQPC5mbTbxVgx+bDw
ZV8jE5XCn+Qw+Rtb/Iw7Tg690/OEmk0QfLB6RwT/K8gCXwQfHD5FCD56/AEA
poC8rw==
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{130.11599999999996`, 
     32.64099999999999}, {161.772, 32.64099999999999}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYn7dTXPf309wYACBBlMHGL/ut1XBuRumDtl7
SiZLXEHwwy23nCjbhOBHp1jf99+Y4PAiS/vb9L8IvkPTo+Mzss3g/FqQeg1b
OP9p4sJrJvkI/tIXHnr/C20dunOe/165EsHvmZ4n1LwgwaE3uERlurytw2GF
DUUZvQkOJw47rc1cZ+OwG+g8ljRMvs8JdtvZoTYOHY4JTy/kIfg3zn0PftyI
4GcDrfs4LcHhhnRNotFSBB/mfhgf5r98oeYDp6Yi+b//0FeNEgTf3jRul2cG
Jh8WvkDf9k4vSnD4svNW199WU4cDpxa6bpuO4IPVL0HwNWKAFmxA8MHhcxXB
R48/AMFY3a4=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYCYv27KmyNiUkOM0Gg0sIBxl98fx/fnM0WDvG7
PHmYohH8yBTr+/6hCL7FlhNl+14nYvD/g4E1nK/6pHneWS0bOH/pCw+9/4k2
DvvnS+nffYLgg91xF5MfLr79IoMegg8zH8aH2Z+9p2SyRAmCPz1PqPlAHoK/
uMCW63o6Jv8MCNQg+OJTr3BmOFk4AE1jCctD8GHmw/gw+9H5aSDwzQTOd2h6
dHzGaQT/QK2sRfoUE4dekAOfIPiw8EHn8/mvn5J6AsGHmQ/jw+yHxQ+Mr7Np
7vvlUQg+LH7R+bD4BwAErvfS
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxllHtMT1EcwIvf1JpiNc8iEfKqqHvv717hm0dJUtMo+i3cU0pZhbKkEtlI
kYb9ULLWTG0esTxmFkvKMilqZc3yKD3o8UtPUc659/e7Z+Ns54/P77dz7vl+
vg87MXpr6HgjIyNjvAPwHoe3s+ktm50nEWx+ZbIqm+HAwM6LC62q13Nw2n13
S/UJBDa5wYte+3GQoY2yTE2hfHG6artFEmU0OZAvTkTweyDuU447ByErm3zP
HkXg0Gle4ryIg56b5d7cAQT3HKPyjW1YaMiPWWUWhKDyxdrb+3IZwF+b2+hF
OadsTtFBN8rSeQZB4LRHNUZdlOHEl4rLkazCsQ+mjLy+w8KNbHwBi+Ccf6y9
tomFZ9dnOn3E910hq5CD852Ja5hNevbiYdKy+9e6fRFkbOpQuRoL4KDJLO3X
IOgp8ou8ekqAF/34l6j/uVvPT2MvTFcl0P9dg594TcT+xsjaJUC0ZerzyjgE
rRFLBrQ+guLjWdIsdZiKsqnH/LhxlbzC1sRvCi/7iEdg7nv3Ymg4L/tKohxE
hKdRrvURJwdmIegj73lEuZgbKg0xExS2b07NfXNGgP2tI4W6ZAROJP9lAvT9
qY1vj6K8zQILCqDshtOrxf7cjgQWMOYCkHKZ64nA1QWv9zwQHdtXIzg2IsRU
PRZgKdZ7cwE9zxe/OlxiS7lxODni6ZCocCQR2izKflx5hSUfPWqFpXptVkM6
CaBFhEbrxD0r6tRyPbdRNsEY8p1yEE6vww8ReomfVjVwaTgCzFtqsjSjP9XQ
UDXo/3VYlPPpKQAi9WxF80tQO5syKed6J8r2E45fWueC41e9zFxuQjmA1G8J
r7CUjwRerjdnpMQ7jwhZiiCd1GOe/v22+n4YZeV4ZyBosOx1f+vByvVoQfsF
Z/Odzy9RYem+IcrGS05N/dBFWer3byLsJaucARP8vPQ+Ue6vRkbO/6DeF8cq
rJnjrkMaylI/XWFlfzoRdkjxsrKvDsrYVn7MZ8qHwrM6E+v1nEzZMC8MLL0n
mwGnj9hguyjPmz2Mki8DV3jjjE5ECofh42tm6OddHSP3i52+Xv1Z2e9C6k/y
KdDz0nzbSPl5Zd6Gh9GUDfOzoG2j45iOhX/n6189hmvY
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4pkgIJnisOT+Pr45wVYOLGF8upsEEXyLTseE
pwIpDupPmued1bJy+PL3SsVLvhQHfa2VwheOWDpotYvdPMed4hAhvv0iwzxL
hz8rP17y5UpxeJ6l/W16ryVE/bdkOJ9RG6jhE4Jvy3V9ccFRBH+qc3fO8+fJ
DulpQNBm5cCvu2nu+9fJEPuWWDnoALnLgebx+K+fkvrCymFGnlDzgV9QeRZr
h0NfNWL6gfarv+XdZ1Bp7QDznwaI/xLBP9K2PPzUIhs43+cEu+3sqbYOWXtK
JkswpDiIT73CmWFk53Dc27zT8UEynN+T8/z3yoMIvsFdFbbGtckOtb+tCs5V
2ML54PA7bAPn9waXqEyPt3H4WQe0YXuyQ4/XKxaTQBuH+F2ePEy7EXwDjjUy
UQcQfLD9J5Id+kH68xF8m8qIFaZ7Efx6lqP9huq2DinW9/17dyP4c44obCja
geAvKQCG+P5khy16eYsZ99g6AEPr0NcLyQ5PExdeM3lvC4mPuwg+KPrUviL4
V3yTBCIYofHth+DDwhPGL9kq+vv0OWtI/LyDhoextUOyQITlFqB9Z0DAxsqB
tREY4xuSHfwuToz5Z2wJDy9wepBF8MHxJ4ngg5JH2jMLhwlva+xNhVLgfPT0
DAAEWUKV
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQbdHpmPA0JdXBxBgINts6wPgb9PIWM/LYOXz5e6Xi
pReCv6TAluu6e6pDj9crFhNFBL+B5Wi/4XYEf3X37QyG/04OS2cfUdgglOqg
P2HBD8N3CP7l/Hj2cwedHJIEIiy36CD4lltOlO3TT3V4krjwmsl2BL99efgp
oxwE//4+vjnGUo4Qvnqqw3wbnSuz3Bwd5r5ffsxbPNVhI8i9NY4OfLqb5r7/
nwLnh4IELiP4QNcUZaxNcdAFue+ZA5wvPvUKZ4YSgp+/BuihA3YOLGFAAy6m
OOhrrRS+MAUYXiD7fyP4Z0BAIhXO78l5/nulZqrD0yztb9N17Rxid3nyMAHd
/2VDQPasdAQfbh5afAAASSuxfw==
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQHbvLk4dJP9VB/S3vPgNJewcYf+kLD73/D+3g/Nrf
VgXnbtg59OQ8/71SM9XB5wS77eypdg5zjihsKFJIddhi/uNQipadwxkQEEh1
+POt9MGci7YOLGF8upv+psD5FltOlO37jOBHWAIFTqU45K/pvp3xAcGvB9mn
4ADng6QZ+h0cbiwusOU6n+LQvjz8lNEZB4efdVl7Sq6nOMy30bky65+DA9D0
+VL3UxwixLdfZNBzdEgDgXcpDsKfHM+nxTo6GNxVYWtkTIXzPyw/5m0uieDb
3Pfvna6W6uCqWso0SwKqXyvVwfza0VwTBkd4eOhOWPDD8JkDnG8MAo8R/M8b
ArJnHUfwYeELADGVoQY=
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlHsslWEYwI/LzMxMuhm5hlqJcJpVzvc935rWZWbLij+oyPtlJlkdJlNN
DIUQRq6ZmVpt6KKtmcl0k2uZyzCUpjSTUEnU+37fOd+z9W7vH79zzvue9/k9
F6eI88eIkUqlMqA7mG5DuiP3jwfmbBPh8sq+uO4oHvQcGTZ60CiRh2ZtgbWx
mwgBffmha6k8tHZU+zdtRX551Pe64IhcdCArZtpBBM8d99b3ankoibVKbbUX
IdRRmD8TyoPzyPKV6A0iTIVXD6gDOTAbrInTrBH48yN+orxPA4XWxicsZpG7
fwZ9rB1Hls4PEcg+MmOsduIU1j7ZuPK2Ern28yGPv5McDLELhgm0ptcFd1jx
MP8uIMJygkAnW6M8tDs2XIii/3dWpKsFQDj9qdd5gcB4i0W5j40AobltS9tV
Iqz/LvSIYQIsbaefrENe/I+/1VEjdshR+bPJvKsIt9k6LAC1t7BqLYJ5YH0h
AUHxcSnk7p4uW+QqP/f+0jVQuI7FMwyyD1sRHKjOzi6QfTkh5xRT4e7IJik0
I2rde5aQLzJf9oLC97NGolSnBLhj4znm4ixCo0dsjUGyAG5epg+2WCFnMkG/
icIsvR3Un+/Ai3NqRwFYuZyYIeDDlpEAd1mBTBII2fy0T5UgANM78gbPx0yv
3JtvQ7bY9bBirgy5Yo4KzSCyn0egsOQjH7mB/T4boKWKBpBJIIOm2zsN5HrO
QvajWHwTOa+NZZTIfnIAolnB5xHgr314VVIAYG64M2NThe57jSDXcxNR8ivF
/xx5iJaz2XvkkL2PXycMEBi2TQ73tkP2d403LP0FCkv5GAC53vox3uNMSI+u
HqN172/T9YMXL8fbTMD0IL0wiZPrsxH7ZfeYi0lKBbJ0Xxmy+uSzw+a3kKV+
v0GghNXrsgbY81qKdf1lwcn5LyXgOpVa2RWNnBukdSnORZb6q5OT/RXp+nWe
k33lIFNbgzVpyLVltCOTdNyIrJ8Xepbe062BCEtqMJvI86ZQo+RLz7R7mrX1
yOWs4amvq2zemXJyv7QTIKz/0znZbwf6kHyO4Xlpvn1FXlztT/xiJSqsn59D
LN+uOE/18/UfZvl57Q==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KF0RscL0rH+ow578mrczjyo5wPguE5qF0qyUHVSf
NM8764Tg77zV9TfVHMEPKVGZ/r8kGM73rm7W98lC8DWtJp2uj8HkK197FMxw
RgnOd19zdDlDhJJD7bptSfWZCD7MfBgfZj+Mf+SydqqkE4IPcz86H91/O4Kt
Iv4vl4HzeyO6/RknyML9C+PD7IPxYe6B8WH+hfFh/kHntyqwq57ZIgPn19z/
ccv4tDTcvzA+zHwYH2Y/jA/zL4wPcz86H+Y/ACwvzBs=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lHss1WEYxw9atFYtl9M5xzk4F4uhCyfDbD1mJKMpfi82zWLnkCZa1NxG
VEtazFac02XIxpZbjGI7UvKHXBsplxaGCIX1B5N03t/r/N6trWd799vnj+f9
Pc/3+b6PNCbpnMqEx+MZ6U+4/hjrT8PUwoPGeQSH1xQL2j1iMLBKrQ9/MWhw
zCL41b7aHHdNDGEpipLtScrvhpxUwjHK5ms+A+pRBKU4z1MMgoCQ34JPCE7V
dFXxPlsDvlb9FsGbgvZc5bNDJP8hgl4cNVZwPrHrT+NVyvMv602+RVBm8wMR
ZH5dH3Nb5HMcujy0Wjol4Ni2raxd9UMIlrieYASTftE+2hciaL6ZOdgUiaAE
1zcqgY4siUdcCoIefL+zDGYsJd2z2QgUI9OhvMdy8HYe1s5pEORseiX3Vysg
Odq0X6j7P/NwDFMWL067i2YQ0TFSAWsNIZe0PQguJq3c6lYqOD3yvU+3qSvk
HF/vbPHTuFDOwP0+khE9BhH4FuWZqxNkEIX1Gqe8tK/9mGaNstlGWVyTcTj8
rKi36zOTc1xr7rw/ro7yzIXyEWW9gvT7BcHG8mKHp9we7HxWY3t1lJVu+iik
fC/w+y5lKoIJR0nNdpMcAjPyjgZdRkQHkBM/Ren9UHQg3X2vPazvji4NcqH5
H7sSlTm2lLPqWmKyPzAc36kKf+9azUAB1sdYxjGrR4aUY1yWW6wUQmz4CcHP
GRjH9fhKyf8bKNvP5D3ta6FcWexlFPyKgRWsT7yU9NvKEL/ckEJaRPWJviGG
zNNBQfxsSufL9i+hzM7jJOXcs6ef5PgjCMD+r5ZzrEvKXNZYUWbncV9G9PdB
XL+s7z0QyLEfJ+xI/TYIBli/WpN+LXb8fkZA/LjFcO/F3z7VWDtMmf0OUmbf
g44y69PaHQ7ik/u6GQjD76ucT+Y/sKPPQQHHFmnFKX2VlNl7NEKiXydD3quT
iOjVTLmobP34XAXlmoLxeF4hA+ksCzk27AsDk3qsCDft/K/VkpuXgR29inuy
1ymzepsjcMD7Lp9P3osMwTaObAHR9wjdN2z/DOLy2X1yhXLr2N0t1WvKhv25
dDuxwHVTBP/u17+reoht
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{103.49200000000002`, 8.2875}, {103.49200000000002`, 
     8.526560000000002}, {103.26599999999996`, 8.526560000000002}, {
     103.09800000000001`, 8.526560000000002}, {96.58589999999998, 
     8.526560000000002}, {96.4188, 8.526560000000002}, {96.19219999999999, 
     8.526560000000002}, {96.19219999999999, 8.2875}, {96.19219999999999, 
     8.04844}, {96.4188, 8.04844}, {96.58589999999998, 8.04844}, {
     103.09800000000001`, 8.04844}, {103.26599999999996`, 8.04844}, {
     103.49200000000002`, 8.04844}, {103.49200000000002`, 8.2875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4i9/r1S8FItxeNOW221kLeuwp2SyBAsbgr//
1ELXbcwxDjX3f9wyzpZxEGg+cGrh32gH9U8qL2edlISo/xbtkJ4GBGySDvVZ
QJEP0Q5ua44uZ5gh4bDAddvnv0cQ/PXuD6tE1iH4YPUKCH5EivV9f9Nohweu
8Y6zNko6THHuznmeHO3w9z8Q7Jdx0GkXu3muPNohFWTfM1mH8pdqhhxvoh2q
Qe7zVnKA+WcmCHQqw/ke+2tlLZ6rwvkg7WnLNBweAF3jfjHa4XmW9rfptVoQ
91Qg+DJRQAfJI/hg97yOcgA557+8BpwfcEu6JlFIDc6v+bQhIPuWioP+XRW2
Rt5oOB/sfn4EH2Y+jL9h7vvlx4yjHXxOsNvONlWF82eA/PMTwTfQWil8YYma
Q/m++VL6qtEOOxyaHh2XUIebD+ObdzomPOVA8OunAh3IjuC3vA7cIcca7WBk
DATC6g53gM6dKhztAOIab9ZwWF+UMfGtTbTDm+Ktor9PazrY3PfvnZ6H4Ifz
6W6aux7BB5t/HRgfIP9IacD5sPCH8cM5xdqN7ys7BOyQa329MdrBeUKzUJqU
kkMLMHm5tkHtn6wAD09wfEaKwfkmYAWiDrG7PHmYgOkTxkdPzwAY4Um8
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4gdVIuvcd8Y6/AcBeWkHGH/6TCC4KevQMz1P
qHkFJn8GiG8pDefvCLaK+H9c3OHPyo+XfCfFOqSBwDFRB6BpD6tKEHywegdM
vvuao8sZLKTg/O0g89il4fzM/A+tJ01UHOxN43Z5rsHkg817poJqPhL/dfFW
0d/emg6hfLqb5uoj+F/+Xql4qRfrcAYEeNQd2NfIRKUIxzqY2ewNmnZQxeHp
b6CHzsY4PElceM1kPYIPs58/wnLLCb5YDD4sPGH8B67xjrMuijrUT3XuznGP
dQAF38ydIg5A26zv5yP4T5bOPqKwAMGHxUdfRLc/4wZxB/T4AgC7ec36
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQfV7p9s86r3iHVgV21TMlkg4wfsDbyx9nKMo4zJgJ
BJaYfJh6GP9NW2630W4xhznvlx/zVo93AAnPjBRz+B78eOlsGQS/JGPi25r/
cRj8YJD5DyVQ5WdKwvnV93/cMv6tAOfvya95O9NVCc53mdAslGal7HD9HNDG
u3EODb+tCs5pqDj4907PEzoc5/CqeKvo79cqDgkCEZZbFsQ5SEy9wpnhpOpw
vGzffKl6BH/Fx0u+SQ4I/pWKl2qGAnEOHmuOLmf4oQznO4Psy1KC898vWq9w
doeig2zr68AdcnEOxiCQrOiwXQ4oYIDgbzkBtNAJwQ/l09001x/qv9MIfunh
ba4zY5Xg/A8g8yOUHTL2lEyWMEHwa7OAAhoIvjhLGJ+uFSx8VRy+/AW6MC7O
Yc4i5Z1/jqs46N5VYWusRfBh4QHjP/298uOls3EO4Zxi7cb3leF8mP9g/Nua
smv+H1aAu+eBa7zjrI0KDi7dOc9//4x1YACBBFk4HyIvCefXgPz7WhQe3mD3
7hRxeHIBmADzEPytn4EeWIjgT3EGGgCMzxBQelko5nAXFMGX4hzOgMAbCYj/
rsY5KOxasC91nZhDKTB69d/GOXzZ93Fr+jcRh7XuD6tE+OJR+XIIPiz9Q8wX
dUDPHwA4lYOY
      "], {{123.21599999999997`, 6.984380000000001}, {123.21599999999997`, 
      5.81406}, {122.344, 5.418749999999999}, {121.82999999999998`, 
      5.418749999999999}, {121.24399999999999`, 5.418749999999999}, {
      120.75499999999998`, 5.85}, {120.75499999999998`, 6.423439999999999}, {
      120.75499999999998`, 7.999999999999999}, {122.786, 8.143750000000002}, {
      123.21599999999997`, 8.167189999999998}, {123.21599999999997`, 
      6.984380000000001}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v8gUJzgYGIMAqIOMP6XfR+3pk8TczDvdEx4
moDg9x/6qhETjuBnP/+98mNYgoNw5aSSsywScL77mqPLGTIU4PyV315WnFmg
BOerXHsUzOCj7DBfSv+uil+Cw4ldO3rZBFQcri8usOVyTnA4ddhpbeY/FQdu
Ju12McMEh59vXx+wVFZ1yN5TMllCBcEHcVn+xcP5EkDj2B7GQ+zXUHZoBzr/
wq14h/LD21xnrlVyUDXkWCODhQ/TD+YXxTswgMADFTifhbNLPllPxWGt+8Mq
kWUIvm+SQITlmngH34sTY/4xI/hg+28owflRqhEy5/ZIwPmw8Nsw9/3yY4sR
fJh96HxY/ID92xbvUHX/xy1jb1GHNTJRKdbrEfwXakANRxB8mP9hfJO4XZ48
TAlwPji+udHinxsRv8fL9s2Xeo5wz/Vz34Mf38Xkw/wH44PNOa8A53faeO5K
C1J2uAwKAM4Eh4bfVgXnVqg4AH0TxqeI4N/+WZe1xwLBVwf53w6afgqU4Xxl
UPr5owjnw+yH8WHuuwGy3xLBh9mHzof5PweUPrUQ4RPKp7tprj2CDwr+MC8E
/7DChqKM0ATU8M1CC1+k/AUARfuMog==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{137.763, 12.1906}, {137.763, 12.374999999999998`}, {
     137.58799999999997`, 12.374999999999998`}, {137.47699999999998`, 
     12.374999999999998`}, {132.89499999999998`, 12.374999999999998`}, {
     132.78399999999996`, 12.374999999999998`}, {132.609, 
     12.374999999999998`}, {132.609, 12.1906}, {132.609, 
     12.007799999999998`}, {132.78399999999996`, 12.007799999999998`}, {
     132.89499999999998`, 12.007799999999998`}, {137.47699999999998`, 
     12.007799999999998`}, {137.58799999999997`, 12.007799999999998`}, {
     137.763, 12.007799999999998`}, {137.763, 12.1906}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4tMLXbd9PpjokAYGKg4w/hkQeKPiAOL+3YHg
g+kFCP7HS75JAkD+iyztb9NlVeH8zPwPrSe3IPgvireK/u7Wg/NrPm0IyP6l
55Bsfd+/d36iw4nDTmsz/+k5FNhyXV88A8Gf+LbG3rQv0eH81bA3+tFA9QIR
llsaEh1mzASCn7oOs48obCjKwOSbGANBsa5D/6GvGjH5CD43k3a7WC2CP9W5
O+d5d6LDkwjx7RcfIPgw98P4MP85Jjy9oNSN8P/nv1cqXhYh+LtLJkuwZGHy
YeELdl9JokPgLemaxCIVB5B0WBeCHw80/vZUBD86BRhACxH84gxgiGxH8NHj
DwDQUd4q
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4vinF5RupyY5vKh9nH1eh9kBxr/Be1sstQzB
T00DgmXMDv2HvmrExCc5tIjXsma6sTr8vVLxUs0Sqv8Nn8P+UwtdtyknOcwE
gUhxOP8MCPQowPkndu3oZTNQdWAO49PdZJrksF71SfM8XU0Hk7hdnjxJSQ7y
y1946P3Xhtuvoyj/JcdMB84Xn3qFM8MJwc/I/9B6MgTBnwGyv1LHgV9309z3
yUD38vqvn9Kq45AO8kcSgm/LdX1xQSyCr27IsUbGDuqes1oQ/2onOXifYLed
XarhsLgAqEM8yeFN8VbR39xqDtdBAvxJDuWHt7nOrFWG82H+hfGng9xzU8ZB
+fbPuiyRJAeNTyovZ2mKO9ibAj2skeRQff/HLWNuIQdG7Xaxm0D7pTeKzWda
wOEw8W0NUEmSA7cjn9eMTCa4+2F8mP9gfJj/weE/E8GHxS8A0z/UVw==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lHss1WEYx0+0ooxSTsdxlHN+B6eQ5ES6ecxU1m1LKa3r+3Mpq9gyFVZJ
Nztziek4pEgnbEr3DSVd10VYTAkjMjMJlWRqet/f75zfu7X1bO8fn9/2vr/n
+T7f55GjqI1hpiKRaAI+W/AxwedP45FeJw8WnL8pe3PMZWDksHAcK2Ww2dLt
dp47Cz+qhu5FxMogJHRp+wY3yru66xUtcym7tyknJWLO1uHwkcECs1LZNhUL
q0qfF4k+2EFlTKZk4mwWHmuqTqoLZ0Fh9PIp7yezUEOi1AZcb+cNFP1EAkec
70/w7aXM3e9EkND+66Nnn1jgoP6GoexPEoHnVORXhX21hUN78QNdCDoCdvnl
3JKCZn/PWAl+T0vya7aHHRWBFiYjCN6Q910V0DJ6LPLBbwTKps4g0UUGhlXb
056Ys3BibEl0bbES0p7gL3b/53N+u7vrnShPcDkrbp7PAvmdLkQJWL0UrYKF
fVGDp1+plYIeycsCK8KvMAIffno/QOdGOZ7Um6vg9XBkwT89yTo8UsHrNY+y
ygML7kU5X4o7soKFgStlDm/NGIGvW7taRtyg/HlPQZO6TAmL776MrXJhYbS/
r9qHcYRHrwsC7ttRZohAEylPxu0Nxfq1zrUvHb/DgBW2y8B3BCISwACRQ9GH
IDvdKs5rqiMQeWMaEL2fmOWvqaFc9GKNd7KesncyfiEdgYboY6IQmNMjXi6w
JwlWDlt8cAEZCFpIPv5y3s9ZlDl7Z1Mm7R3GPEj02SsH02BseJ3BL4ly0Oc+
c7h5DfH9VCl5P1cjob9c/W8oEzsXtlIeercOTetAsJr4v5gR+GFUQr/OhjLX
j1QF77c2Wu8AEaQZAUP82OrA54/1quP8asfX+8Lg9/US3o+VdF5wNy9Liyhz
7+kp140EdelzKXPznmngtWJowOltLUCwicxXgZjv/1WDPtMlAs84mhHz9ipl
zu86W16/S4Z5dZHyemkpT32PN0AqZd9FOysCTyGI49hWYOO+MDKfjw2MlWAF
Lxj+Vz5T6JeR8fQEW5ZTVuPrFlgvFdl3yWJwJvNSi2CcxHEJr28j1YPTs4fe
5/bbMOUU7UHrJBkrsHF/fjlzQLNwTAr/7te/KiuElg==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYCYu12sZvndic7nAGBHgUHGL/08DbXmbFKDgwg
sCPZQbTH6xVLiKqDzX3/3umLkh2qP20IyJbScPh4yTdJoCfZISX2jhvzDy2H
ZIEIyy05yQ4tvP7rp7TqOMw5orChKAPBz3n+e+XHNAR/igRLGF9qssOMmUBQ
ieBn5H9oPRmC4ItPvcKZ4YTg6yjKf8kx03FIsQY6KDvZgYWzSz75nLbDV42Y
/kMTkx38Lk6M+Zes6WBiDATLkyF0sSqcD6KMJyvA+WB/PhB3+LD8mLf51GQH
9U8qL2ed5HfYP19K/y7Q/UtuLX9s2MwCtz81DQiWMcP5N3hvi6WWIfgvah9n
n9dB8GeCARPc/9yOfF4zMpng4QPj23JdX1yQi+BD4gXqHk9OiH/nJzu0K7Cr
ngkRdLixuMCWa3OyQyuIbyIGj78Y1QiZczHSDujxCwB06MFd
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.43800619151798],
  ImageSize->{179.11109339975093`, 48.21121793275218},
  PlotRange->{{0., 179.10999999999999`}, {0., 48.21}}]], "Output",
 CellChangeTimes->{3.93866546780567*^9, 3.9386656000247107`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"225a1452-3c6a-f648-ac97-a812058ffc74"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "3"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["x", "3"]}], "-", 
        RowBox[{"2", 
         SuperscriptBox["x", "2"]}], "+", "1"}], 
       RowBox[{
        RowBox[{"2", "x"}], "-", "1"}]], ",", "x"}], "]"}], "//", "Steps"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["x", "3"]}], "-", 
        RowBox[{"2", 
         SuperscriptBox["x", "2"]}], "+", "1"}], 
       RowBox[{
        RowBox[{"2", "x"}], "-", "1"}]], ",", "x"}], "]"}], "//", 
    "MaTeX"}]}]}]], "Input",
 CellChangeTimes->{3.938665332498466*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"2c93dca3-bc37-bd4a-ab83-bff6ad54b1d3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["1864", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"PolyQ\\\", \\\
\"[\\\", RowBox[{\\\"Pq\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"IGtQ\\\", \\\"[\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"||\\\", \
RowBox[{\\\"EqQ\\\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \\\"1\\\"}], \\\
\"]\\\"}]}], \\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"Int", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", 
                   SuperscriptBox["x", "2"]}], "+", 
                  FractionBox["1", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "x"}]}]]}], ",", "x"}], "]"}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
            Rubi`Int[
            2 $CellContext`x^2 + (-1 + 
               2 $CellContext`x)^(-1), $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"General\"\>", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                FractionBox[
                 RowBox[{"2", " ", 
                  SuperscriptBox["x", "3"]}], "3"], "+", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", "x"}]}], "]"}]}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
           Rational[2, 3] $CellContext`x^3 + 
            Rational[1, 2] Log[1 - 2 $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"PolyQ\", \"[\", RowBox[{\"Pq\", \",\", \
\"x\"}], \"]\"}], \"&&\", RowBox[{\"(\", RowBox[{RowBox[{\"IGtQ\", \"[\", \
RowBox[{\"p\", \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"EqQ\", \"[\", \
RowBox[{\"n\", \",\", \"1\"}], \"]\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[$CellContext`Pq ($CellContext`a + $CellContext`b \
$CellContext`x^$CellContext`n)^$CellContext`p, $CellContext`x]], 
          HoldComplete[
           Integrate[
            $CellContext`ExpandIntegrand[$CellContext`Pq ($CellContext`a + \
$CellContext`b $CellContext`x^$CellContext`n)^$CellContext`p, \
$CellContext`x], $CellContext`x]], 1864], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
           Rubi`Int[
           2 $CellContext`x^2 + (-1 + 
              2 $CellContext`x)^(-1), $CellContext`x]]], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Rubi`Int[$CellContext`a $CellContext`u + $CellContext`b \
$CellContext`v + $CellContext`\[CenterEllipsis], $CellContext`x]], 
          
          HoldComplete[$CellContext`a 
            Integrate[$CellContext`u, $CellContext`x] + $CellContext`b 
            Integrate[$CellContext`v, $CellContext`x] + $CellContext`\
\[CenterEllipsis]]], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
          Rational[2, 3] $CellContext`x^3 + 
           Rational[1, 2] Log[1 - 2 $CellContext`x]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.9386656283774757`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"c6321a38-c0b1-4347-83e6-3518fe5b90e7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["x", "3"]}], "3"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "x"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.938665628393091*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"4ddc897c-4fd0-244b-b74c-7e56793739f7"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.0041310364770520925`], 
   {Thickness[0.0019746354360309004`], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v6Ibn/GD4wOF/Pj2c8ZOjgwgAGrwxkQMHFw
kNkoNp9pAZtDehoQhCH4k7+xxc+oQfCfJC68ZrLewSFGNULmnA2Lw+cNAdmz
jjs4qH9SeTmLkwnO3+61wWJO5X97GN/EGAg2/7J3VS1lmrUBwQdRxtUI/k3p
mkQjXQeHw937mkyUmRxmzASCm/YON3hvi6V+Y4fz1wrp8KXbCcP5HmuOLmf4
Ieqg+qR53tkgR4dokPtiJB30Jyz4Ycjn7FBx/8ctY25ZB5DymR9dHMD2Cis4
JBy+rJ16082h9PA215mxig77a2Ut0o94OPwHAXslh/v7+OYYc3k5dNp47kpT
UnbYope3mNHG26EbxP+kDNHP6OOwASyu4tC6PPyUkY+Pw5viraK/uVUh7hP0
daj5BAyIXwh+SuwdN+YdanC+1Lw4zdMB6hD7v/g4JIQEqS/IVHdIBcXHOx8H
2eUvPPTmqznkcP5ckP7ax6GB5Wi/oTlU/0kEHyy/GMEPKVGZ/r/Ax+HErh29
bBfUHHj8109JjfBxmNLeGnU5Rh3OPwaS/4Dg1/62KjjXoeGw51bX39R8BJ9l
8SQrxqUI/gdQ/H73cTh12Gltpp06JB6NfR2YOLvkk9+pwvlg+2RU4Hywv44p
OewF+bfHB5LuyhQdpoDSW4i3wx1N2TX/kxUdHJoeHZ/h7O2wI9gq4r+7jMNG
UDi7eDiIVE4qOcsi7lAZscL0bLQLRP64KCR9FzpD5FNEHMSnXuHMKHJyeOAa
7zjropCDvOPH5DNzHR1aFdhVz3wRdIgQ336RQc/RYcmt5Y8Nm/kd5tvoXJnF
5+DQIl7LmnmMHc4PeOJ5yTSYBc6HpXdYfkLPXwChgWXV
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4gnBJSrT/5s4zAQBSU8HGD9CfPtFBjdPB5l5
cZqnFyD4S+7v45sz2RjO32L+41BKl7EDj//6KakRCP7OW11/U/sRfLD6dz5w
fo/XKxYTQV84/w3vPoOZQr4OtpURK0x9EXz/ixNj/jEbOyQcvqyd+tLHYfoE
/iqzbCOH2t9WBec2+Dj8BwF9Qwz+3lpZi/QWH4f0NCAoQ/CfJC68ZsJvBOd/
3hCQPWu7kUPr8vBTRmsQfJj7YXyY/04edlqbuc4I7v9ukD8WGsL54lOvcGY4
YfJh4auvtVL4whRDh8nf2OJnyHg6PM/S/jZ9rxGcD1avZAzng+1vR/DB4bPW
BM5Hjz8ARwXLFA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{32.892199999999995`, 53.18749999999999}, {
     32.892199999999995`, 53.4266}, {32.665600000000005`, 53.4266}, {32.4984, 
     53.4266}, {25.9859, 53.4266}, {25.818799999999996`, 53.4266}, {
     25.592200000000002`, 53.4266}, {25.592200000000002`, 
     53.18749999999999}, {25.592200000000002`, 52.94839999999999}, {
     25.818799999999996`, 52.94839999999999}, {25.9859, 52.94839999999999}, {
     32.4984, 52.94839999999999}, {32.665600000000005`, 52.94839999999999}, {
     32.892199999999995`, 52.94839999999999}, {32.892199999999995`, 
     53.18749999999999}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYgXHj8ln3ro4vOfdZzBTysthg17eYsYzCP7O
W11/U4+7OLioljLNYvByMDEGgt0uDvtrZS3S13hC1K9xcdgIoqd4OvR4vWIx
WejioDthwQ/DNk+HZS889P57Ivhty8NPGckg+N0g9YzOcP4bkL1azg4Jhy9r
p670dDihaTXpdLszxF5uL4fPGwKyZ613dvgPAvpeDgwgMMPFIVx8+0UGNm8H
mH98TrDbzg5F8FkWT7JifIvgnwGBOT4Q+5JcILSQL8T9G53h/OMg+/87ofKn
O0HcU+0D54Pp795w/oX8ePZzK70dfsfkHv13C8EHu/8+gg8zH0Ve3RkS3gcQ
/BkzgeAjgg8OfxkfB/GpVzgzuKDhZekDNx/Gvwgy9yKCX7xV9Pfpcwj+/X18
c4xPOUHC09zH4Uniwmsmz6H8+VD9ltD4eebjcFO6JtFoLoIPVi/vAueXgMzP
c4H4pxLBh4U/jP8DFC5Z3g4VEStMzypD1f/0cpjyjS1+xhlo/E73godnGgjY
ecL5oOCYKenpEAGK92MucD56egYAUHlL1A==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lG1IVFEQhu+WaUZKVGYRRUFWUq2pK4pojeS9d89eIbFAsQ+1WFcys1DJ
H1mSkKQ/KjFaLT9CUJEoi8qKMqHELT9qUyQrkEIoKIxMrNTcds7ZvfOrgcPy
LOecO/O+M2f9ofwU63xJkgzulepe89zLeLHxd/haMzwtWRNjm2Tg5bvGY02G
WQYujGAztHwxG10GCxTcC5rpDSTeU7jhiksinmhPzq11qRB8ecg/Z5rB7P68
7rlpFcLw3nEGNRhOVeyzMdiL54tVOD0Te3xgM4NzLakvI0zE9XFbh2rnFJ35
+Y8KyCFF82qTiR++q/hrvUDM721n4jufFch8NrjF+oJBzHB3nklSwZbtDqMF
khx+8VejPDxngeop3wx7kgqjnYHXItM1UPA7pSosn0h4lV2nwY3K9zlSz/+5
D2OSeEFTVawhyAx2zOu8BrdR1zEVFu++VW0t1XQ9itNao/r3ETdg3TuIub6r
NGjE/8dVWJfw43BfgCb08jHr3Iz7wol5HSlmkU8UcSH6eJCY19HgqXehx//H
GgRgng5VZ1OkO3KJx7KuD5uiVYhGXTM1oXOoKvbt0mAb+u6rQlpwh1O6rwmf
WhT9PK+7ktgRGlvV+13WeWT1qayIOhlO4r6fFp25Hk7idtzfZ4Gj/n8abU0y
lKMuzy2in28Sr8S+fES8FHV5IsMS/O23CF+6ZNh59lOPfdACXXwuZKFfiSb6
OV3R/eX1lxNzP/qInfkZfgMjCnzAPA8QJ6LOMcTcjxWa6OvXil4vtmV2pyJ8
avPkX6HAGZyHt0zUW6CAD/ZZCRM+qjQvXPcpWWd+3zgxnwcHsYTRKos+jvPc
NyoL31QmfP0qwzKsr4i4B30rJ+bz1MyEfkOyqPcBE3p1EH8L6NxeU0W8cays
vv+ILHSwE3vfCy/zfDYxCEG+I4v3ZhHT/fIyn4N4RWeu9wlFvHeJTMzLJQUw
7cgyJvRtI/14/b/oPM8jTNUZsE96ib3vJ6/rDbH3ff0Hhltfzw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYhNjICj2cphvo3Nl1jdvB/umR8dnBCP4/P7r
p6QGeDnc38c3x/iRtwMPiO/h5fA8ceE1k/XeDlv08hYz2ng5VESsMD0729sh
Qnz7RQYzL4g5k6HqX3jC+ebXjuaa3EDw3/DuM5iphODvr5W1SF/j6fAfBPh9
HKZ8Y4ufscfT4QnIPnkfhz23uv6mPvd0CClRmf7fwcfhuKbVpNPfPR2eguT9
fRzWdN/OYDD3ckg4fFk7tdPHAeY/MP8ggq8zYcEPQzlfOP/DhoDsWdN9HW5I
1yQa8Xo5hIP88czXQd7xY/KZXk84P5vz54J0YQRf9UnzvLOHPBx6vF6xmHQi
+HNB4aeH4IP98ccH4t9XHg4inxzPp331caj9bVVw7geCrwdyF58nnA+2X9cT
op/FF87PAblDG8EHh3OCr8PvmNyj/355wPngeHyH4LctDz9lxOPpoAJy1ypf
B1fVUqZZAZ4Oe0HhfsQX4r4mBB8cbg8RfHA6EPJyKAfFdzGCDwtPGL8dZM8W
aPwc94SER5qPwydQOPt7QsL9tTckvs57OJRsFf19Os0bHl7g9BCN4IPdEYng
g9OHvbeDzwl229mhXnA+enoGAHSQSY8=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYCYlfVUqZZNgEO6WlAMM3LAcbP4fy5IH2zl8Pn
DQHZs/QR/Pbl4aeMVBD8+/v45hgv8sPgz5gJBJE+cP6a7tsZDPkI/hvefQYz
u3wc5troXJnVhuCD9WVi8sHuKkDwYebD+DD7HZoeHZ9x2AfO152w4IfhOgQf
bO4kTP5/EJiO4Ks/aZ53tsrLYco3tvgZaxB8mPkwPsx+dP4ZELjiAefvvNX1
N3U/gl8RscL07GIPhxvSNYlGrQg+LHzQ+fKOH5PP7EXwYebD+DD7YfED4/cD
vf9MD8GHxS86Hxb/AK/o9/c=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAGIQrW016XR9SZBDSInK9P8SXg4wvsAnx/Nprl4O/nJi
Wb7qmPw70jWJRn994Py7+/jmGEv5wvlLX3jo/Vf0ddAEmSeD4KenAYEYgi/9
+pGZlAiCHym+/SIDX5DDlw0B2bP4fR0qI1aYnlUPhNsP48PcGwyiP2Dy5R0/
Jp/p9YTzb4HcG+rpsPNW19/U94EOESB73DwdPoPs2Y7gL55kxei7ApM/EwQk
PR2sda7MerYz0GHyN7b4GTKeDt7Vzfo+3xD8mNyj/zZxB8H5+fHs5yQVg1DV
xyH4j0VkTz7ND4KbD+PD7HdXLWWalYDg167bllSvieDDwhvmPxgf5n8YHz1+
YXwAhtPK3g==
      "], {{71.82499999999999, 52.54219999999998}, {68.9219, 
      52.54219999999998}, {71.82499999999999, 57.04689999999999}, {
      71.82499999999999, 52.54219999999998}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lGlIVFEUx2e0zcgKNM3CMihaDC21EpU6kqL3Pc3pXUFpc4lxrGj5kBSk
aRpIJRSSNJqhJGhE5ODWQlmkJurkkhqSWaZltlJatGhO7947M+dTF96HH9x7
3jn/8z9nWfJhRe+o0Wi06henfg7ql36zLjnzB4UHGZ6Bhu8EbFzjc6hMO0nA
kKKeMQoVo5E+Fq0EXqHf9po/I18o/bV+ZAR5sH5usb/K7gU9Tql/CLxx9Wx5
O0zBl138QiDAXz0dFMZMugNFBiLeX6VwciLoSPsqAt5B+W2ZWci1p9M7q/XI
/H0chfAVaQ5FOuQ7z8/+1Z9Hjj26/JLFREQ+OygkNnR761sI5GwnV7JSqKjL
R4I86cO0gFNWnpLA9Pp9QVUehVf8nQyzfpcaqsspuI6FdqRckSFkbU/RSMv/
2czOIPLorUrHd18pGAvVc0aGh0znPgpzYiov6rNkux7H469teLITuYQF3ozM
9fWQhR4DVPTBWYbVTK9RZK6DBbm36WBA1rxYkc8G5KO1Cyba9iDfONefqimR
wYnV+8Ha/3syfHKuX1fYiqxhpxg53v1WlyabwqZnaqBEGRZG6iYXnqAi760y
ZDA/7aPiXp0MjWobPILwfVl+kDZ6LbJ8Isc36qViZ8r6WKPAMabPuGRnrkcX
sondN0uw+OPQxkW3FcitiGv1a5TE/+8jjzPfNSAfTpjZ7tGkwHymzxNJ1PtY
gS3ZQ83GbgkimM8GFaFfhgzDzM8u2F9e1xpk3o8oZN0St/3RlMKLxelJfruR
w1jcQGTeDzer/tuovV5mm8Jwqx+vW/P3ppDJ5qGPiHq9KExjQmYQCGZ+dMJ5
cWF5vFbszOMNIPN5aEXmc3BXET4OscbrVYSvIghY2OlXRNw05GZWeC4yj1NO
hH6diqj3NhF6PULedbBpqqoSmc/BZUXMtxHZti9szPNZaeUHitg3s4m9Xzb+
OSPBGDWd2jmG6b3Uuu/CiIjjS4HZ1T+HCH2DUT8+30n4nu+Tk8jcR2Zk2/7k
PnqKbNuv/wDXwWOB
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdk21Ik1EUxx9fSAcZEYZERAVKpL07ECTpLOiDPvehiDtmL8NYTI2yVay+
pMxmSJSR2SKdEVJQIOKGy00i/KIrc8uUrKAXiLAlldELhbHMnnufe3egA/fD
j8O59/z/59zVDtduZ4aiKGn6segnXT89F17VKkVWqKnW44sKkv/sr4v+3U7g
14KqdmKyQs7OgM/ZKvgZBXf/0mTsNoEOFnMUjph+d9UMEWBlfcut4EmWHhvL
1lKcd3XSVLsXObjh6K20Hg1WWb4djM9QsOVFJpSEBnEWA8hvBxddL/YiT0cC
GR8qKeRPNd143I2c+93ypNqO/DW467C/RIP+s/XjISeF+y/PzznXaNDaNbs5
cQI5W2875EXm9S0UVrK+ypC5vn3I1J1/bb5Rgx0FJ9P99aL+kmb0cZwKvzQo
YH02U1jIeESD4adFzmW9FLZ53z1sj2lgLtYjglxY2hbzDP+X/yT9RZZ+Subz
WqLBWlb/mkLJ82ideRrnFWWJFwQqmY8PRH6AQMXppo3kHoX1zJgwMe7rpPCG
+d5HoKE37PBcFnqDxNB3kcI8iwAy13kT2cce9on32pCZjJAfufmObXTLXWTZ
v+St6yb9iZ8UDgzpxu1Blvsqme+tSzXmPUGhpeJjprlcNeYbRpbvS+Z+uymQ
kayyTrsKn3MGN3U4hP9XVEO3G5nff4bCLPO7G5nvbRx5MfNhRjX0nxL5TJLa
R8lTuSsevbch8/9ULub9Q00x72sUedxVlTV2SHCDyBeqYGf/K4LMxtyYRJb/
m+/jOWTp5z8LJOhD
     "]]}, 
   {Thickness[0.0019746354360309004`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.1391, 45.090999999999994`}, {
     85.49689999999998, 45.090999999999994`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{38.09219999999999, 36.887499999999996`}, {
     38.09219999999999, 37.12659999999999}, {37.86559999999999, 
     37.12659999999999}, {37.69839999999999, 37.12659999999999}, {31.1859, 
     37.12659999999999}, {31.018799999999995`, 37.12659999999999}, {
     30.792199999999994`, 37.12659999999999}, {30.792199999999994`, 
     36.887499999999996`}, {30.792199999999994`, 36.6484}, {
     31.018799999999995`, 36.6484}, {31.1859, 36.6484}, {37.69839999999999, 
     36.6484}, {37.86559999999999, 36.6484}, {38.09219999999999, 36.6484}, {
     38.09219999999999, 36.887499999999996`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4hOaVpNO/3d1MAaBzw4OMP7nDQHZs+QdHXj8
109JvYDgX8yPZz/nieDflK5JNHJ1dVj+wkPvvyGCH1yiMv1/BoL/CaT+uAuc
r/aked7ZVwh+2/LwU0ZvXBzm2ehcmaWG4K8Amcvo6vArJvfov0MuDj4n2G1n
b3VxkJh6hTOjy8WBAQQkMPmR4tsvMsS5OJiA/GWN4IPd0Y7gV0asMD1728VB
wfFj8plWBB/mfhgf5r8niQuvmVx3gfvfVbWUaVYAgt/j9YrFRBGTDwtfsDu9
XBx0Jyz4YfjNwaFkq+jv0/cQfLB6QVc4vwJkvzOCDw6fawg+evwBAD55wgA=

     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4nDx7RcZ2Hwc/oNAvpMDjM+yeJIVY6+Twwa9
vMWMb7zh/BvSNYlGVxH8Nd23Mxj0vTD4JsYg4ALnu6mWMs3yQPDbloefMkpx
ccjh/LkgXRjBT08Dgm+eGPwH+/jmGHsh+DDzYXyY/Tz+66ekBnjA+b9jco/+
s0Lwd97q+psqj8mfCQKFCP7+WlmL9BAnh4TDl7VTLRF8mPkwPsx+dD6YXucA
5weXqEz/PwPBF/7keD6t1sFh+QsPvf+CXnA+LHzQ+WB3TUfwYebD+DD7YfED
47/h3Wcw8xWCD4tfdD4s/gFAONZ6
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4tjco/82KQc4tC8PP2X0xdFB9UnzvLNCCL62
1aTT9QIBDvf38c0xvuXokJ4GBFwBDhHi2y8ytEHVMwU4eJ9gt52dC+X/8nc4
rgnUGO/o4ND06PiMxQi+guPH5DOlCD5YfZQfnN8KsrfFz+F3DNBhTY4OCYcv
a6c+9HM4AwJPHB16vF6xmHD6O8wEAU4nhxkg+qO/w+cNAdmz7js5wPzzJHHh
NRN9Zzh/vo3OlVnHEHyQN9LKXCD+3OPv0Aai37g4qIDcw4Xgg+2P9IPz40H8
j74Q94Qg+Ikg+qIznJ/D+XNBerOzw5RvbPEzTPzgfLD7LRF8mPko8o1+Dg9A
4T0LwTcxBoLTCD44/L85O2zQy1vMmOLn8AsUXkIucPNhfLC52gg+j//6Kaka
CH5FxArTs8p+kPAUdHGo/W1VcM4Byq+E6p/s53ACFD/7XRxKtor+Pv0NwQer
r/CH88Hmn/CH6AtG8GHhD+ODw8XF2UHkk+P5tFp/h2yQ+stODroTFvwwVIPG
b6ETPDz/g4C4I5wPCg7jzw4Q9/MHwPno6RkASKlPug==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lGtIFUEUx6/XyKIXmM9MM0ioFC1fmRWd2a20VNxJSAVBvOKjwoSwMtSU
blRo4OXSxUdqosaN8m1mIdiHECsfKWmSfojMV48PpkSFle3O7N3zqYFh+c3u
mZ3zP/852w3ZJ9PsdTqdnTzj5amX50cnz5cz3RQSXLtGdEMEbBz1wuHQnTEC
A8p4QgGuTvWVTxK4YY1/FfgI+cfq5PLoJuSjPhf0lY0U2vzP1duNEojKMwZE
P6DQtyvc3N9HoEIZFgolJz6vCiZq/GkKrpbRtZl6Aqban3tnjyF7fJkK3eKH
zOI9Kbzv2VgVtBs5LmdH2Uom8tcNPXsqiglEKOfxprCclNX7t47AfFeL/Zy8
34oyHARYapXOVkaoPC6Aa6T02y2OwuWE+yGDQSJkJzsMuWdRaCyZzNRdEqHe
HG4XY/o/BynDihzr5XImpotCsLKeKoLPtLFmsIaCdT7SfyVR1PRwWiSv00OQ
973tzQp2Qz6s6LskcD0aKDydKP6TNidAqaJXM/I28i11oBf5gN9o5eyYep5N
osbrY1tup4Uhs7rlqvm2UYhW6m8Rua4m5Ix0eRiQnxV4hmVEUhhRAveLUND8
2FBIKPfNVpH7KYBynUtF8JVtUKjD+DW/ajM6FiWNWz98srQ3IHcreeRJsFnR
Z1DQmOnxEJn59Z4ARnq8uuiKxHWoFvj/jcjM58XI47LMRSUS18cq8HxvSfDO
Iz8lsElQ19X38SL384Sk1Zflv4DM6uGI9e+8lj/c4U4hp9N5uT8UmfnXEZnV
Y0Hg+jtTLV/my3UUchU/GtXzy3qx+9BOeL6zEtw9KBfyFOF+HJa0+8J8bEVm
+9Ujs/tgQmZ1K5J4nV3U/aokros34et1ar6xyCnP3/impSCz/xQS/l2ZxPM1
E67XTWQlzP0iMnsaVD6PbOsXNmbn0al8XeL9Zhq0etlYufbt/chM7xkJEhUd
vQj3wXeJ551EuL567Dcs/51Ui2f95Agy6zNmZFv/ZH2yEfuprb/+A+XpbCY=

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQ/YZ3n8HMbeEOZ0CAx9UBxu/xesViYgnlNyH4mlaT
TtfXhDtURKwwPeuM4JdsFf19ug/Bv7+Pb46xkafDAxAtFO6QePiydqoigs+6
eJIV41cPCN8NwV8EpHx9wh3Ep17hzHiF4O+81fU3dT6CL/LJ8XyarzuEbxPu
cDE/nv1cpbvDLpA66XCHJ4kLr5msd3fY8PDl1E1vwuB8BhCYguB/2RCQPcs9
zCEB5D5JBN/nBLvt7FA3OD+H8+eC9MmuDm3Lw08ZTYDK/3VxWAKy/wmCnwYC
cuFwvszrR2ZSDuEOy1546P33dHVQe9I876xXuMOa7tsZDOkIPkw9enwAAHxh
tS4=
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQrfaked5Zr3CHE5pWk07vd3WA8duWh58yWoLgf9oQ
kD1rvquDzOtHZlIO4Q6R4tsvMtS5OmxtqbmwWTfcgdd//ZRUD1eHNBDgC3fY
qJe3mFHG1aEDZM6LMDh/ySQrRt8rCD5Yf2OYQw7nzwXp2gg+WD7EDc5/sI9v
jvEhN4cJC34YPusKc9h5q+tv6n83h5jco/82zQ5zuJgfz37O0N1hTfftDIbV
YQ49Xq9YTBLdHWaCwMkwB1fVUqZZE9wdKiJWmJ59j+CbGAOBfDicHwHyl1U4
RJ03VL9jOMR9xu7w8Eg4fFk7VRLBB/tbDMFXBdG/3BzQwxcAhMGhuQ==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxFlGlIVFEUx0cN27RMMpdssUYMLbemMiM4UXeemaJmMfdJIFpjUppSFi2G
MrZABoUZuTSlrUqRpqkUokZqlkuZIWWEudRoJmJ7uPXue2/euXA//N6795x7
/mdxi03arrdSqVQWwtYJ21LY2ZszE0wbePheGr4/z0TAzP0xhZ2aEQKk8sfE
2wAeuhamxvj/IhAaa0fXa5Cj9mzoDluF/Cey73b+Sh5CmqZvzB8mMFY8+ibU
k4eYZx1e+h4C9hl1LwsdeHDvz7jWGkXgt3V0TsgghYfeB25auBK4WPDX70sj
8sKh3rUu95Fz2TJSOEqL1rRuRv5mW+Oba0A+c1f30v8WAa37Ycu8AgrZzFE1
gYGqEiuTYE8856aFHyzu5zKPasExKHzcqYPC/O+bXsWFcpAUPb3NeZgCYXYu
clC1+PRQhB2vcKXMW2S+5yoo4oH/jSN3G7et46GFrVQO5tL1j5oW8wCG3uc5
hzhFj/uZH+JVYcjtzLEf8numry0H+6pTLjmpediRor4ypeJAyM7RQW9kExOc
IL9rEzKyk5d0WIF8ZyDIeyoC+VPNnKursziwsfQ6u8BPzn8JBy4+H9XW85Dj
2OqlCteeXBSwt4lCwsx/BXsjOTj5oDI27SmVzq3loG/+ohefSyicD/46TVPM
gWdgVnNaOt6fIVwrP4hc2jN4uUyN/KTr3IR+TCfpY9IqLOrRgCyer9WCIWKr
MX1SB4/Z9yqt5N+KKkwdq9pVs5A7GxI16bOppE+dFiKZbjYUUiocxpobtZJf
Dzn/yRwEn8jwCYnCehDjT0a+wOo3C7niVOrr8lwKNmEl2fpwZLF+vZDFfMyU
6+0yVeKdYiuTgj2rR6P8fkGvUtYPLUSKN45CAAskmcCNrECL0HDsl2PMjwey
aG85stgPdshinaooqNjyle25yv0VSKS8LpP1ikce35XYMHkcWeynXCLF4SjH
e49Ies1ArhfGgvNvncJiHfbKnIlsnhdmFt/jQqCbsTWV5s3EFiVfZmbPKtuG
LOqtp/CT9f06Aks2je5uOSzX6xEi6WtAPW6y+Ivwvhh3PXJ505Ga6/a8wub5
uZTZbcB5ap6v/wHn92jo
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KH1EYUNRRmaMwwlNq0mnxd0dYHzWxZOsGE3dHVRu
/6zLikHwJfTvqrAFIvg29/17p/dFwflTnLtznjcj+OvdH1aJlGHyEw5f1k6V
RPAP1MpapP9xcwCalifUjODDzIfxYfbD+PtPLXTdFo3gw9yPzkf3Xw7nzwXp
v13hfB7/9VNSJdzg/oXxYfbB+DD3wPgw/8L4MP+g81lA/v/rCueD3XPfFe5f
GB9mPowPsx/Gh/kXxkfxHxIf5j8A6N/FLg==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4qWzjyhsSIp1uJgfz37O0MHBxBgIqmMdzoCA
iYPDlYqXaoYdsQ7paUAQhuBP/sYWP6MGwX+SuPCayXoHh5bXgTvkSmMdPm8I
yJ513MHhDZDbmozg8zBpt4sFIvh7SiZLsNjFOriqljLN2oDgG4PdgeDflK5J
NNJ1cLA1jdvlmRLrMGMmENy0d6gRWef+cBKCf7xs33wp9jg4H+w/ozgH1SfN
884GOTrI6N9VYcuMc9CfsOCHIZ+zwxTn7pzni+McQMpnfnRxEGg+cGrh1TiH
hMOXtVNvujl8+Qv04b84h/21shbpRzwg4SMd73B/H98cYy4vh4KMiW9rzOMd
tujlLWa08XbY+hmoITAeop/Rx2EJyP6oeIfW5eGnjHx8HF6oGXKsKYmHuE/Q
1+G80u2fdZMQfHGWMD7dVQh+RIr1ff+98RD7v/g4rPh4yTfpQLxDKig+3vlA
/Ls83iGH8+eC9Nc+DqpA42VmQfWfRPDB8osR/JASlen/C3wcSoHa9dfGO/D4
r5+SGuHjwB9hueXEPgT/7fJj3uYXEXxw+D+Jd9hzq+tvaj6Cz7J4khXjUgT/
Ayh+v/s4xO7y5GHaHQ8JN2NfBwlQ+E9E8MH2hSH45cDkxKET77AX5N8eHwcX
YPT8Zox3mAJKbyHeDu4Pq0TW/Y9zcGh6dHyGM5Q/Pc5hIyj8XTwg6c05zqEy
YoXp2WgXiLx+HCR9FzpD4kcyzkF86hXOjCInh+1yra8DGeIc5B0/Jp+Z6wiJ
j0+xDhHi2y8y6Dk6zHkPDIDzsQ7zbXSuzOJzcADGZlHGRAT/+e+VHy+VIviw
9A7LT+j5CwBKhHkm
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYCYpO4XZ48QYkOJVtFf59+Z+cA40+dwF9l9tvO
ITrF+r5/YKJDj9crFhNGe4ee6XlCzQGJDlvMfxxK4bJ3KJkswRLmlOhg3/To
+Ixqe4fbP+uy9mgkOrQvDz9lpOLg4Jjw9IISf6JDwuHL2qknHRyWH/M277yY
4LBRL28xY4iTQ3fO898rtyY4sCyeZMXo6gLnL3vhofd/ohucL/zJ8XyarocD
yPiSwwkO/0HA3svhghLQRqZEh+OaVpNOs/s4JAtEWG5RSHQIKVGZ/v+Bj8PH
S75JAg6JDqlpQBDn62DeCXQR0P0zZgLBQl+4f3UnLPhhuAzBB/t3JYKv4Pgx
+cxaBP+OdE2i0V5fh/5DXzVi/BH83aAA8ULwC2y5ri92QfCnOgN95Izgz5fS
v6tih2b/vgSH8ogVpmcvezucXui67fPUBIedt7r+pop7wvk5nD8XpE92g/Ml
pl7hzLBycTDgWCMTtSPB4QwI3HF0AFlfIJnokA1SL+zgwM2k3S6mmOiQv6b7
dsYDe4fz34MfL9VPdDAxBoJke4e574ExZJ/ocAPkvq92cPcWgNRfsIP7B8aH
+RfGh4UHjA8LL3Q+LL0BAHn4GZU=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4uPe5p2OHEkOCo4fk8/wujlot4vdPPc/Ec7X
2TT3/fJ/iQ6VEStMz352dQjl090093eiw6cNAdmz5rtC1H9PdHiSuPCaSbur
AzcTUORrokPC4cvaqZWuDkDdx7zvI/iLC2y5rl9G8MHqexH8n3VZe0qmJzpM
+cYWP2OOq8P0PKHmA+sSHdJA4J+rQ7JAhOWWHYkOJsZAoOzm0OGY8PTCp0SH
Hq9XLCY/3Rxg/qn7bVVwzsMdzre4djTX5AGC/x8E+j0cgK5ZXPA00UEe5F9W
T4h7diL4t0EO6kHwwe4pgronzwPO/xOTe/TfK3c4n2XxJCvGue4Oydb3/Xub
kfgg97cg+DDzYfyls48obJgGDe/NCP4ZEHiC4IPDn9/DgX2NTFRKf6LDZFB4
6XjAzYfx0ye+rbFvRPB7QA5sQPD7D33ViKlPdAAFp7G2hwPIudPboPzJHg4q
bI1TnWdD4+emh0P2npLJElsQ/O/Bj5fOvoLgg81/AfVPLoIPC38YX2/Cgh+G
ce4OQNv7D12Fqn/r5sAPTF7v90Pjt9sNHp4zQcDQFc4HhwePq8PvlR8v+f5D
8NHTMwACfkQ4
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxllHss1VEcwK8yqklm1Zr6A2XZlEdd7+RrnPvzyCiFYcnxLOUqkrW7XpbK
Vam065JkKhkbNdUqu/S4MiFhJLPSY6plplIzSef3uL5/dLbzx+d37zk738/3
YUOV25Lny2QyI7aj2J7HtvOCulUxfRS+N4Snl44SMPDHhMp++TiB0367PnX3
UHizUpWwYZJAoSbDMq8b+dIK40jzTuREi2jPxg4KW9pMfcrGGHu/DTv7gkLC
016H5BEC49WtIe6PKdh9zLvaGUNgoCrTZ1EthduOGVVGqwjEf+q2HdIilz2z
bjhQiCycP0khN/qWa6c/8rfFOmftCeT86qj2DdcJ3OAvyKdQ/MskvqSJQHOF
ldMwu0/LLxsFFI2pfF1LJZ5QwJL1d8rHKygs/e73MiWUA/u4808m6ygQu4Pz
Sos4eDrJvuj+5wCJH2UzI+34u3znwyAz5q+DXyoOlJZ5Le16CnDi/fOSLG7O
R516KE0WhvxKGW/a5YI8yPtdzIk+2ihsz16jmZVxoq9O5NgkJnwQuTeUWkSP
UFDw77FHvvk50HF2K/I7nfmVjRc5SB+drpnokvJfz8GPmb7cLzrkHeZMUDUy
n14N87d34dS11AgO+HKx1VBI4ZcbB7yOyHMUCoO/GstrOFjH9Fbn4HnPxrYc
nRJ5aOrInqZA5PQmdoNc8jOqmGPBhx5Z+H+zAtR7WQCuFB68KZhJvq8Q69kD
2ZRhkjdyLEuv/SbJT4sC3M+wCBhn3102/aJVAa+7fkd8CJLymcmJ9ZyI+RXi
z0Dmy3ngKPIak+OX/fMomIXVFyeHIwv164As5GOhVG/HMN7VvBAVBUu+Hsul
9zNfDXw/dBAx3t0UPPr1++SZRKzHndgvLJs9ocHIwn2ByEYOp5YPbkYW+t2N
goxfzgRM2fPUAVJ/eREx/5zkKw35T9w+/d/DyEI/aYnoz0+Kt5aIvryQma2q
TBfkrLQLY6q1EquRDfPCwMJ7rAg4DTODntK8mQmYy5eBn4ewjMYhp7LjvszX
T37euROxX/ZL9ZpDRL+H0IfgswDPC/OtBLmlvZLca0Y2zE9rv4nEDj3OU8N8
/QfrT2Ll
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4pkgkJnsMM9G58osMw8HljA+3U2JCL5Fp2PC
04Rkh/v7+OYYK3k4fPl7peJlXLLDk8SF10zeuztot4vdPBed7FAZscL07G13
hz8rP17yjUp2cGh6dHzGZXeIejcEnxGkwQnBt+W6vrhAFMGf6tyd89w82eE/
CPh7OPDrbpr73jrZ4THIvngPBx0gdznQvOASlen/GzwcZuQJNR/wgrqn38Ph
8FeNmH6g/QmHL2unnvRwgPkvEcRn9ITz9SYs+GEYh+B/2BCQPeu6p0P2npLJ
EgHJDuHi2y8yqHk5HPc273Q0QPCBrvu9UhDB17+rwtb4N8mhx+sVi8lJTzh/
Pij88hD8yd/Y4mfYeDr8rMvaU8Ke7CD8yfF8mqmnQ/wuTx4mbgTfgGONTJQA
gg+2XyLZYQpIvwuCn835c0F6NoLP479+SuoCT4dk6/v+vdwI/uwjChuKOBD8
xQXAEOdPdlB50jzv7CtPB2BoHfqqkOywv1bWIp3FCxIfugg+KPrUXBH8K75J
AhGByQ7loPje7Annw8ITxm9bHn7K6As0fuyg6WmZh0OyQITlFqB9xiCg7eHA
2giMcYZkh5Ktor9PL3OHhxc4PcxG8MHxORPBZwCBBneHCW9r7E2TkuF89PQM
AFiOOQ8=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4hNl++ZLvU5xmAkCnW4OMP48G50rs5a5OfwI
frx09hME/8vfKxUv7yH4l3yTBCJKMflnQMDHA86/v49vjnESgi/v+DH5TK2H
Q4TllhNleQi+iTEQpGPyKyJWmJ5NRvBh5sP4MPtZwvh0N/1NhvMNONbIRP1A
8G25ri8u+IjJB5vTjeBHiG+/yJDn5sCvu2nu++8IPsx8GB9mPzqfAQROuMD5
b3j3GczchOCv6b6dwTDdxUHDEOjAPAQfFj7o/JASlen/NyD4MPNhfJj9sPiB
8Y95m3c6PkHwYfGLzofFPwB1edtb
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4ts/67L2xGQ4zAQBSU8HGD9CfPtFBjdPB/NO
x4SnAQi+ClvjVGd9BF/dkGONjF6GA4//+impEQj+zltdf1P7EXyw+nc+cH6P
1ysWE0FfOP8N7z6DmUK+DuGWW06UqSH4kSnW9/1lMxwSDl/WTn3p4zDhbY29
KVeGQ+1vq4JzG3wcOoDOu/AoHYO/t1bWIr3FxyGUT3fT3NcI/tLZRxQ2/EPw
LYDW7RPOcGhdHn7KaA2CD3M/jA/zH9A1vdOFEP7XiOk/9PVDOpzPw6TdLvYU
kw8LX6Bvo1LepztM/sYWP0PG06F3ep5Qs0gGnM8NUq+I4H8FWaCL4IPDJwjB
R48/AJfLvqU=
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{171.85799999999998`, 
     45.090999999999994`}, {213.933, 45.090999999999994`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{180.192, 36.887499999999996`}, {180.192, 
     37.12659999999999}, {179.966, 37.12659999999999}, {179.798, 
     37.12659999999999}, {173.28599999999997`, 37.12659999999999}, {
     173.11899999999997`, 37.12659999999999}, {172.892, 37.12659999999999}, {
     172.892, 36.887499999999996`}, {172.892, 36.6484}, {173.11899999999997`, 
     36.6484}, {173.28599999999997`, 36.6484}, {179.798, 36.6484}, {179.966, 
     36.6484}, {180.192, 36.6484}, {180.192, 36.887499999999996`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYseEpxeUnNMdjEHgs4MDjP95Q0D2LHlHh7nv
lx/zNkfwe3Ke/14piuD3Ts8TahZJd1j+wkPvvyGCH1yiMv1/BoL/CaT+uAuc
r/aked7ZVwh+2/LwU0ZvXBz2zZfSv8uD4B84tdB1G3O6w6+Y3KP/Drk4/Ah+
vHT2hzQHialXODO6XBw+gJx3EpMfKb79IkOci8OekskSLJcQfB4m7Xaxpwj+
AqB1Kr/SHBQcPyafaUXwYe6H8WH+A7rm898faXD/Tzj0VSPmOoJflDHxbc1p
TD4sfIG+PXDqapqD7oQFPwy/OTh8+Xul4uUvBB+snj0dzo/pB1ogguCDw8cC
wUePPwADEdRr
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4iSBCMstRzIc/oNAvpMDjM+yeJIVY6+Tw8S3
Nfam+xD8nul5Qs07EPzs579XfvTD5JsYg4ALnO+mWso0ywPBb1sefsooxcXh
4yXfJAEPBP8MCDhg8h/s45tj7IXgw8yH8WH2z32//Jj39XQ4/9RC122fLyL4
NxYX2HKdxuTPBIFCBH9/raxFeoiTw4pj3uadFxF8mPkwPsx+dH56GhCsc4Dz
g0tUpv+fgeALf3I8n1br4HAA5EB3BB8WPuj8nbe6/qZOR/Bh5sP4MPth8QPj
xz+9oHR7L4IPi190Piz+AThI9uw=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4ikSLGF8VzMd2peHnzL64ujwPfjx0tlnEPwf
dVl7Sk5nOtzfxzfH+Jajg8rtn3VZJzIdIsS3X2Rog6o/kungfYLddnauo8ON
c0CRg5kOxzWtJp2Od3TI2FMyWWINgp9vy3V98QIEH6w+EsE/5m3e6ZiS6fA7
JvfovyZHh2Tr+/691ZkOZ0DgiaOD/l0VtsbWTIeZIMDp5BDOp7tp7v5Mh88b
ArJn3XdygPnnSeLCayb6znD+fBudK7OOIfhpIFDm4sBxfXGB7aZMhzaQf9+4
QNzTiuAvBzkoEsEHu8ce6p4QBD/x8GXt1IvOcH4O588F6c3ODgYca2SiAhB8
sPsDEXyY+TB+UcbEtzXJmQ4PQOE9C8E3MQaC0wg+OPy/OTtcqXipZhiT6fAL
FF5CLnDzYXyTuF2ePH4IfmQK0IG+CH50/6GvGj7Q8BR0cWAHOjclGMqvdHH4
eMk3SSAj0+EEKH72uzgAYyfhaQOCf0RhQ1HGQgQ/AmT+Vqh/ghF8WPjD+FO+
scXPcHF2OPJVI6Z/UaZDNkj9ZScHUPLa0wO1v9AJHp7/QUDcEc4HBYfxZweH
E2X75kudRvDR0zMA0DJPFQ==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lH1MzVEYx69b3JAiehnmpYWIRKWi9JzfT5tUq9XmFk0qt3LoZXaltsbS
H+FGk9KbtCRXE9K8TGvZkIyKuDRibV7mZSxJw6Kc8/v97n3+crbzx2dn5+w8
3+/3eRYmZUbrrFQq1QS2tWyr2R435XxaXEch1vlGr6qHgJnD7muCqp8R0Nqt
aKmppQAH33RW9BOI3bFuILIGOeH9Y9f+SuSVr90m5TO+4plRP8FEwMumae6W
CgqdS9eWPOwk0KY/4WJ9jIJh02drH0LgbFbQlL59FJzLTJPT1ASWt9QMGlOQ
045/zQuOQ5buR1MYaLc75b0MOUbvVj6ehvxlWrtX5RECev5ADIXR+PSOsTME
inZ/GG1k743zpREgoTXUVp2qcJ8Ar37vp227KeTGnvft9hbhp3t88e1cCk2G
/jTVPhGKb4+4xxv+z4fI9vePTyKrPAqdXpym4OPNVrIIgQORR8tLKBg/bvQc
jxMtesz6Th6l+CL7Pe9I93FBDub6DguQyvUoo3Dz5ZG/ug8CrOR6VSEvWcUE
P4dcO5s5ckn5j71oYdvIy6U6f+SQRXvVVTki+F+9n91eTSGc+18mwq0HdSHX
Dchu/UwgPTK3dwfTrzczQdMTIII9i8tgMoUuvuaKAEwO160UhpujdlUVi/CL
yasX8b4mv0w0BCIb74X5HXZE9jvMBFVRmMn16RYsLOlxAVnKa4MA2gBWgJrC
fDKU3FUjyHmeiMxxlQ0yt3fERtHHKID1Zhb4yRRezMlLXH1RAGP13QXNTsq5
VpTz7IX+anj965B5nOvDkb89iUiaHkVBf81x9OEaZCm/DsiSH98EOW8RWO8g
FySUQg7PY4EAffz/gUo/tBC53jUUagOXm6o2EzmPHtgvndnttbOdkaX3HJEf
/Yx52zAVWep3KwqpKWw5ETCx78XOUPprAZH9n6XUF4mceOephy4RWeqnA0TW
z06pt4TIedEg2/bVZwWN7bRwsO+21tAfCu9BNs8LM0v/URH40zj0JGKSMm/e
gcUvM5e6MEeXIvux67ZMrzg+7+YRuV/WK3mNJ7K+G1APSU8t3pfmmw65uDzD
oaAI2Tw/C43aB6ubcJ6a5+s/z05ZOw==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYC4hSBCMsta7Idlr3w0Ps/0c0Bxv8dk3v03ysP
hz8rP17y7cp2cFctZZrl4e3w/0rFSzXNbIcL+fHs5wR9HfTvqrA1KmY7sCye
ZMVo6usQv8uTh0k426E8YoXp2WJfh/nvlx/zZs52UHnSPO/sKl+H6XlCzQf+
ZTncka5JNNrr63Bmoeu2z38R/O/Bj5fO/oHg/weBz2jyHzD5Co4fk8+sRfCP
a1pNOr3c10HdkGONzKcshxkzgWChr8OXv0APAPlzbXSuzJrn63Dc27zTkSHb
4cuGgOxZ6b4ON84BTZDMdggpUZn+n8HXoSRj4tsa42yHCpB/on0cpkiwhPEV
ZjvEH76snXrRy0Ejpv/Q155sB/NrR3NNHnjA+TmcPxekT3aD8xlA4IeLg4kx
ENRnOwh/cjyf9tTJIWdPyWQJh2wH7xPstrNlHSH2A8Nzf62sRbqLg8N8KWAI
M0HDr8se7p8t5j8OpXDZO1zxTRKI+Jjl0OP1isWE0R7u/5TYO27MP+zg/JKt
or9Pv0PwC9Z03864YAcPXxgfFv4wPix+YHxY/MH4c44obChiyXY4fthpbeY/
Owf2xqnO3S3ZDqDgnhnoCE9PEeLbLzLwuTigpzcA32gwlw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQzRLGp7vJMdfhDAjwuDrA+D1er1hMLF0dDpxa6LpN
HcEvsOW6vlgl16EiYoXpWWcEv2Sr6O/TfQj+/X18c4yNPB1KMia+rXmf45B4
+LJ2qiKCz7p4khXjVw8H/bsqbI2cuXA+a+NU526eXAfxqVc4M14h+Dtvdf1N
nY/gi3xyPJ/m6w7hs+Q6XMyPZz9X6e6QsadkssSXHIcniQuvmax3d7jzsy5r
zx0EX+U2UGADgj/hbY29aVeOQwLIfZIIvs8JdtvZoW5wfg7nzwXpk10dLigB
DVgHlf/rArH/BoI/YyYQfEXwwy23nChjy3VY9sJD77+nq4NOu9jNc9y5Dmu6
b2cwpCP4MPXo8QEA7i+1XA==
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQrdMudvMcd67DCU2rSaf3uzrA+G3Lw08ZLUHwP20I
yJ4139Uh3HLLiTK2XIdI8e0XGepcHdInvq2x/5vjwOu/fkqqh6vDjJlA8DbH
YaNe3mJGGVeH80q3f9bdQvBZG6c6d19A8FXYgALLcxxyOH8uSNdG8MHyIW5w
/oN9fHOMD7k5LCmw5bq+Osdh562uv6n/3RyOe5t3Om7JcbiYH89+ztDdYYpz
d87z3TkOPV6vWEwS3R1MjIHgdI6Dq2op06wJ7g5/Vn685HsPwd9TMlmC5RuC
z75GJiqFOdehImKF6VlvqH72XIj7jN3h4ZFw+LJ2qiSCnwYCYgi+6pPmeWd/
uTmghy8AlKSY6g==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxllH1MjVEYwG+JZGppWKM/ZLW1RULkq3lanfdFWgg1a+qmmyudW7gSaza1
+SpEWW4orZSmrXyUsaTRrVz5NtHHfC9M2jUXqVvOed/33ucPZzt//N57z9l5
fs+Hd2LaOs0YlUrlwHYM245sB46v8drkpIMfdWu2F/cRsPFHddnLoAECh0MT
Pj1x1EHX9Cz1PAuBvCKdR44KudDTaaObldo5yT128fVhCqvbnUPO9jNe+ibq
2BAF9b3n/pp3BAaqWiOCzRR8P+aUPNxEoLM8PWRCN4UrAbpyBy8C8Z+ezOy+
j3yuZUbdzkZk6Xw9hczYSwsehiF/c20KNGQjH6yKMc2rIHDxLLuggULhr3Hx
ZxoJ3C6dNqeX3Wfgy1uA/P6s5QtMCpsFcJ199fzAYwqTf4Q+To4UwS/uxF1L
DwXiu9uxOF+EFgv78v1/Dle4UV/g6fQXfw/afGvlROavg68sEdI8cppNFgqQ
/b7tzC7R7qMmt1urikJ+mhbv/Ggu8mvu11WUffyhsF7vUzSqEiGB+7Iix3Hh
Ljo7v4hMdI+dpAOBv8cPufLzioDRtchvm9zOzT8lQmrfULV5hMr5rxXhp/VF
5pfvyBvcmKBO5GUsvUXMX6rL4IWt0SJID2qjkMzXQhG4jo1NFPJWfXUKqhZh
FtNbVYnnF11vz2gqRe4Z3J/SmIms5UKTFD99gp0lH0Zk6f93BMjjAWgo3Ow6
atXcEOR61iI7M0zajszT65dKZT/NAgQfYQXPWF8/ZehBqwCvHv2O/rBXyWe6
KNdzAeZXir8EuYKVc2ctss+4A6fDrlGYGFVbqFmDLNWvP7KUDxel3uowXp9u
JqSGggevx/MC8HCSmK863g8dRI7XQGHRSyMNSidyPR7HfhmuNj+L3Ics3ZeJ
rPI/NPW1Dlnq92QKKr4CCYxlz8vVK/21hMj536P40iIPx1HjyD5kqZ8MRPa3
Q4n3MpF9pSAzW+XpamS99mR/VozCuci2eWFj6T3TCMzpZQa3KfPGGm7Pl43b
IlhG85D58eXM108+74KJ3C9lSr1mENlvFfqQfN7C8wl8vrUjN5vKSMMAsm1+
zgg1b+kw4jy1zdd/bs9sDA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KH1EYUNRRmaMQ8At6ZrESVoOML77/lpZC3ZtB5Xb
P+uyYhB8Cf27KmyBCL7Nff/e6X1RcP4U5+6c580I/nr3h1UiZZj87Q5Nj47P
0ILz9bVWCl9Q0XIAmpYn1Izgw8yH8WH2w/j7Ty103RaN4MPcj85H99+jCPHt
FxXU4PzM/A+tJ6eowf0L48Psg/Fh7oHxYf6F8WH+Qed7gPyvjuAHgtyzSRXu
XxgfZj6MD7Mfxof5F8aHuR+dD/MfAP4CwzQ=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4p7peULNBnEOJVtFf5/2M3YI5dPdNFcewY9I
sb7vLxvnoPqked5ZKWOHNTJRKdbicQ7iU69wZhQZQdTzxzn8+Vb6YI6jkYM4
SxifLlecw9edt7r+qho52Nz3751+LxbOd39YJbLuOIIPVm+F4H/5e6XipV+s
Q7SC48fkHCMH3bsqbI21sQ7/QUDf2OGIwoaijImxDjNBoNLYQaD5wKmFrHEO
PifYbWermjrA/GOgtVL4whEEf8n9fXxzPpvB+cYgEGzhUCOyzv3hq1iHYpB/
7Swh7pmE4G/9DHSQJYIPdg8r1D38FnC+xlvefQac5nC+bWXECtNcM4fjZfvm
S6kj+GD3ayL4MPNhfB/zTscE31hIeM9C8M+AwB8EXwIU/kHmDvwRlltO2MU6
xIDCq8ccbj6Mf17p9s86JQRfQh/oQEUEX7b1deAOOWh4dpo7lAKdq68L5Uda
OHjwMGm3h0Hj56mFAzB21Aw7EPz3y495m59E8MHmf4T6hxfBh4U/jD8huERl
+ntThzdA21tPw9SbOoCS1/35UPs9TeDhmZ4GBNMM4XxwePgYOnwPfrx0tkwc
nI+engF8/Dts
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlHtMTXEcwG/XHbEU6UHdiFXWopxz7znCzDevVHrJlNf5JZXrVQ1hKQ01
k1ALFyXKmqQXemm6tbxSiWIeYYU2Jc2QHiP8zjn3nt/mt/3++Ox3fme/7+f7
mB4WvSpilEwmM8I7GG853r+vfWvzrUdgfeb5WI1cBQYeGYjtzJqogkLluvAF
tQg+bXMZ0NqpoKxhr+5SNeHaxpxlFbcIb6z2MpFjfnR3cdFWUxWETgiZV1aK
oP92e8rITxr29ThRxlkIEn/Nj2nppsDzfZxFcTQCbZpZHLudgpDwBR3+voSf
zHgzfJAmLNx3QODYdST7cTVhE/+S0xHutMQehz88PHeAhq6n+AdOCNbbe3zb
XEiD5euWwSAVgi2ReO1VwZ09GZMVfgh4jLRioPzHyPP9axGEWFe2yloY+BJY
NTV5N4K6BDv3LatZsEvuDaw6S1j5H084UteYU0RYscZ09s0aBM38msVCrO6S
jVsegrK5Q/XhNqzkI9X7s0Ldykj8yvy7x5OzhLt5v76M6KMAQbtt/CaaYURf
5YR9w7DwZsKLGK7a663+PUmEDynun6JeEu4vDdh+IZiFGE16X3ylPv/pLCSe
WXJ8h5bw0gosSEPYDKe3Afsbt9wxVt7OAF8uHZ4IZPy6zEAS1rGMReDdMGZh
ZjIL/Vhvz2hy30TuctRqmJPY/4Q2yvw64Z3mWOghTvRjxEgs+KhRSyx8f0MN
JbtwAEkc5HevcP2boxbrOYVwPsawNMIBOL296Zzop0wNY/iCz+BAmc05N9Wp
YeXcYx6hRfpzC1as505Oyq8Q/wDhTlzOnlNI/rvyMu/Z2yPwa03f8OcZI7ET
X78phIV8eOrrzRZJ8b4ThOjrMUr//iFO7IcmWoz3CwdXOnSmWZNosT5fcFK/
pPXFL2KKCQv/KyCc9fXqAx8tYaHfj3Kg4lcGBfzzSnM5GM/3Vz4l5j+fg1o+
PgUt8cy+8bo5zoSF/oqkRX8X8bkQLy36OkkY23ofF084YRvuSI2evQkb5oWB
hfdoKBgM+piXmcqJ88aVkvJlYEfKuFDZRljDNzz2Jcy7XErsl98c/OXXNFr0
a0zmjeDTFUn3hfnmQ1jp9s5h9HnChvm5u9zyV5OOhv/n6z9k72eu
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxF031Ik0EcB/C5JMFlyaI0NZw18a3Smtue5wnxt0lRWNgbpml16tYWhls1
A9MEk8q0mlGy3sjEP6ywGrSKCHTZi0tDjCQpiaIQIZAo1AKLutt2+x0cDx+O
e+7ue79LKrdtM8+RyWRhtBtol9PeltdyYKKWwD7WZnTAfW67Q+1q18Nopz0n
spKAR/+7zyQJcCE2vHD+VgIN4S+cqy0CfO96ma83E7B3t4xZbwjQn68/bXAQ
cLUuOKrLEEP2PTPe2T+E/jNT/fnaQQmKTWs/FewmsMkXkXN1XIImAxkfNqIP
W89P1qWgwzJOLX6vJDBR1vEu24buPbZUsIyIIdfPSvahJhEsdHruEgJRBfcu
mq0isOOMJqJFj+9ITwq6tz0u8+MKAmPxdWVr2tD+8w2jc49/6b8UL0FFdJHo
UROYx+YLEtC/tccl8rwksCkbvQNpQd+WgK5Ot0Ag9vqetEG3BE8cNFEjmm2v
cwP6H2slBGz+fNE8T24nu69cMTB/B4HI9cnV8m94X6mTUT1ZrwR4rnIfsm4k
oGDjzQJU0PjP5hGYevyh+e8JIfA/DYHimEdvZPUCsOtYlknAwM5bK4BCTgNe
SeAyazXor+w+9qKfnuzaOWAUIKI7YZcpEy2wvDXoM64qZSOg+f65324ujy4q
I1CqMvyoeK0Pmdcr90/3lsorv7SgntvQlldAwL2qqjOsWwvTqaXOPgOar8/t
X09FICv91sLhES14BzrWPYwhkMDyBx3QaiXjKrT//7ReWlneNnS2hrb7aC+r
xyldIO+k4Phyfageudn1FyrR7KNRBOtNhnY8WDQ7eFcXck5N0U3tpDbw/pKD
41VaULDyMqJLnH3TqSY0f9/+ekzH987z/A+0bKlW
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{115.46199999999997`, 
     12.185899999999998`}, {132.69899999999998`, 12.185899999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJXIGYCYvY1MlEpi+MdZoJAJIcDjP/ANd5x1kQBh3bH
hKcXsuIdDnbvazJhFnE4orChKEMx3sHEGAguizhMce7OeZ4c7yBSOankLIuY
g2zr68AdffEOwW8vf5zRKAnnx6hGyJyzkYXzweY3Kjj8BwH/eIc7mrJr/j9W
dLhx7nvwY1YEH2zfzjg432Xb579XGuIcwjnF2o3zFeD8EJB9ibJwvvuao8sZ
KqQdeqbnCTXPiHNoV2BXPSMi7VD+Us2QYwkafwuCn5oGBMfiHM6AAYIPcz+M
fwAUHofl4Ppldy3Yl5onDwmXxQi+zX3/3unzEPwWoPfl5iL44PCdBTUvWd4B
GPrW97fHQcInUNHB/WGVyLr/CP4dFbbGqczxcD7YmTIIvgcPk3a7X7zD3vya
tzO/KsD5MPfD+GB3Bss4+CYJRFj6xDukgPy1TNJhT8lkCRazeAc3UPjNEHc4
XrZvvpR8vMNaIR2+9DpRiPtZYelF1GHFx0u+SR+g4eUj6rAVGPwVN+McdgRb
RfxXF3UQWQf0wRlo+MmIQuLzZJxDX0S3P6MAgg+Ov4UicD5Ev4hDBDA4/M8i
+LG7PHmYbiP4E97W2Jv+Q/BBydfaPh7OtzeN2+UZE+8gDwrvcwJwPtj+Ag44
/9LvY9fn3fxuv10OmEA14h3mn5i8JFvto30HKH6YEPy1oAi5FwfnN0wFZoD5
cQ6s+r+4LvV8tX+//Ji3eWecg/8Tz0umwowONSALFsZBwmsmAzx+wfLBTHD+
klvLHxseZoXzNT6pvJzVyeGg0y5289zyOEh8FXM53AUmp7xJCD44/9Qj+OD4
zIlzsCtxrD0twwnnb/PaYDGnkhXOz5maUGjx+af9lQpgAt4AVL92kb3J5+f2
sPiF8Z8snX1EIQHBh5UPMhvF5jMl/LVHLz8AefXWkA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYCYv27KmyNikkOM0EgUsMBxl+v+qR53lkNh/hd
njxM0gh+ZIr1fX9RBN9iy4myfasTMfipaSCgD+dv0MtbzLgHwb8tXZNoJGrg
sH++lP7dJQg+2B1zMfniU69wZhzSh/Nh5sP4MPuz95RMljBB8KfnCTUf0EPw
FxfYcl1Xx+T/B4F4BH/GBP4qs9fqDkDTWML0EHyY+TA+zH50vjEIBCvC+eWH
t7nO/KsA54dzirUb9ys49IIcuATBh4UPOp8/NuC+0XcEH2Y+jA+zHxY/ML7O
prnvl0sh+LD4RefD4h8ARizisw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4js/67L2+CQ7nAEBH0MHGN/7BLvt7KWGDhad
jglPHRB8FbbGqc7yCL66IccaGblkhy3mPw6lnELwefzXT0m1MILzweq/WsD5
G/XyFjPaWML5xVtFf5+2s3QIt9xyokwMwY9Msb7vz5vsEK3g+DH5jYXDhLc1
9qa/khymTeCvMqu2cOgAOu/CJUy++NQrnBlKFg6hfLqb5t5G8JfOPqKw4R2C
bwG0bh9zssPyFx56/wsRfJj7YXyY/4Cu6Z3OhPC/Rkz/oa8PkuB8bibtdrGr
mHxY+LKvkYlKuZ/kcLBtefipIEOH3ul5Qs0syXA+WL0ggv8VZIEsgh8BCh8n
BB89/gAQScEY
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{149.509, 12.185899999999998`}, {
     155.36199999999997`, 12.185899999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4uPe5p2OEckOhctLNvzj53DQaRe7ec4fib9p
7vvlfskOfRHd/owFbA6hfLqb5nonO7yofZx9XocRot492eEMCPj8t+dh0m4X
c0128H3iecl08l97oO5j3voI/uICW67rygg+N0j93SQ4/2dd1p6S50kO0aoR
Muf+MDhMzxNqPvAvyWEmCEiyOyQLRFhu4Uh2SAMDTocOx4SnF5ySHQ5272sy
SRZ2gPmHAQQeiML5b9pyu41mS8H5YPfyKDgAXbO4wDTZ4Y6m7Jr/jxUdwO7h
RPBvgxx0JwnOB7vnUBJUvzycf9813nHWRyk4P/jt5Y8zGiUckq3v+/deRuKD
3H8FwYeZD+MvnX1EYcOzJAf3NUeXM1hIwvn/QWC/FJz/Zd/HreliMg7sa2Si
Uu4nOawV0uFL/ycDNx/GT5/4tsb+IoLfA3LgBQS//9BXjZjzSQ4GxkDwWcYB
5Nzp12DhreCgwtY41fl1kkO3jeeuNCNFh+w9JZMlWJLh/O/Bj5fOVkHwweZb
JDuEgPzDKA/nw8Ifxq+8/+OWcbeYA9D2/kOqyRD/Mwo78AOT13v+ZIdUUPQ+
44eH5yywg77Yw/jg8Pj/3v7Pyo+XfIHpE8ZHT88A3qxSYw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4j0lkyVYjFIc0tNAQMkBxndfc3Q5g4Syw4pj
3uadkgi+Rkz/oa8imPwZE/irzLRV4PxI8e0XGeoMHXTaxW6eu5/sEK3g+DE5
BsFffH8f3xxmQ4d8oeYDp34i+BadjglP/yQ7nDzstDbznQGcz+u/fkpqBIIP
sw/Gh7mnwJbr+uIfCD7MPnQ+zL8XlG7/rHuV7NBt47krrUjJIWPi2xr7vwj+
nZ91WXs4UuD8KxUv1QxFEPy575cf81ZH8NHDEwA8m5SA
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}}}, {{{167.284, 11.7563}, {167.284, 13.298399999999999`}, {
      166.11399999999998`, 14.529699999999998`}, {164.72799999999998`, 
      14.529699999999998`}, {163.29399999999998`, 14.529699999999998`}, {
      162.15800000000002`, 13.262500000000001`}, {162.15800000000002`, 
      11.7563}, {162.15800000000002`, 10.2281}, {163.35299999999998`, 
      9.081249999999999}, {164.716, 9.081249999999999}, {166.125, 
      9.081249999999999}, {167.284, 10.2516}, {167.284, 
      11.7563}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/fGSb5LAmRSHmk8bArJ3qTvA+AZaK4UvPFGD8xNC
gtQXZKo6qBlyrJE5BOV7qjgAeVEp21Mc7mjKrvmvrOyQJ9R84NTSFAcGENig
5DD3/fJj3tMR/L9XKl6qdSL4U527c56Xpzg8cI13nCWo7LBvvpT+3ZwUhxdZ
2t+m26o4XFC6/bMuKcVBal6c5ukAVYcFQGkVIH/GTCDYqQbnw9wP4/98+/qA
5WINOD8l9o4bs4SWw56SyRIseSkO0yfwV5lpazskCURYbqlIcQi4JV2TaKTj
YHBXha0R6L6M/A+tJ6foOHwBOXgagg/zH4yf8BTowq0pDqlpQKCm4wDynuEB
qH0W2vDwO3HYaW2mnBacP7m9NeryHA0H9PAHAAqnqoo=
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxF1A9IU0EcB/ClI7NMQs3GcrH/m+6pmUpaCT+LmatMKdAhWmFeWIpaLVMq
I02WpJhN0anDUmsIC0zKf4SZf9LMQmvQH4tFEGYl/gkhS6t7b9u7gzE+7927
u/e93z1RWs4h5MLhcGLwj/5nmgXBxYW2hEw+BU43NEm6l/UUUO2mWfNdBGGh
dAuE5PSdtngj8aCw7UxGCfG4eHKpMA/BcE9X+epcClas+dPy0wg2lu37xvWh
oCxr6k8rQvBJu6lz4hYFEH6kR6N19J+jYFGZUtGvIb7Rj68oiLmJnoHt6x1O
ULHuhKLPw/n+rA36kuTXfkoYyett5G92vN8OBdDTz29B8Hvme1+kqwJ0Bh43
kY8g9vElQYRZDkuFpx7pvBEcGHGLql+UsWbuuxH7FNzUvWiRAB49+KMQwQXb
r/eh6yRQved61pQEwfMx3H6IYbl1/lWcF4JzAx1qo0kMaRu0kQ84+P3VR6Pr
nohYM/EVC1nXGnHrFkBu1No3zVIE/5jGh77R2+qOw8Rz5qf7t18hftuMnzAj
UCxIp+tKBayT3H31oRVC1nstQ2aOUgRb11j8klsc66kUAz1dbjkCLd0/XgL0
dD8LEJyn1z8jgWvRx76MnyBm7quJd9niy2uCiPFumGZVxFU4bk8ZAl611T0j
TWpfvwiBwPw1NqhRCtlexX2jAgTb6Dy8ZayZ+qkivh+U3bxqWQZ4Nww8nP/B
icqUv8flbP72/OSAVyueDCf9mXpUE1vjcOIa4gC977uXmcTO+m6n3aBgzezX
WX/W6akfYlx5AfZ6KnLUN0cFyhAcMD4PwQGt3uODKqDjWrmK4CFdr10UpPZo
PFxqiCNKccC1xLgaRvLqiJn9aiBm3s+EgC63MQsFYfg4eeD+GTlzJc+qKMCn
aVGJx7vMHaoISSJ2nkenhwd23zvZq7LvV73jeZ3KPl4TMZPfHWLn94I5/wZi
5/fkP4vO4NU=
      "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQHbfLk4cpO9Vhu0PTo+MVmg4w/vQJ/FVm3Aj+8V07
etkENBx6p+cJNaekOswAyWerO2RMfFtjHwvkzwSCnWoOQNkDpwJTHaa0t0Zd
rlFz+KoR03/IE8HP2lMyWUIDk58GAs804HxjECjWhPOfRIhvv/gAwd+gl7eY
8Y6Wg819/97peqkOD0DyDdoOCU8vKN02TXUIuCVdk2ik43DFN0kgwhHq/gIo
3xPBR/EfEr+F13/9FFYtB/TwAQDF/Hss
      "], {{172.63400000000001`, 8.268749999999999}, {172.63400000000001`, 
      7.562499999999997}, {171.72699999999998`, 7.001560000000001}, {170.628, 
      7.001560000000001}, {169.48000000000002`, 7.001560000000001}, {
      168.60799999999998`, 7.587499999999998}, {168.60799999999998`, 
      8.268749999999999}, {168.60799999999998`, 8.36406}, {
      168.63099999999997`, 8.82969}, {169.086, 9.14063}, {169.34799999999998`,
       9.307809999999998}, {169.45600000000002`, 9.307809999999998}, {
      170.29200000000003`, 9.307809999999998}, {171.284, 9.307809999999998}, {
      172.63400000000001`, 9.307809999999998}, {172.63400000000001`, 
      8.268749999999999}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYCYp1Nc98vN0pz6Ivo9mc0kHSA8dsU2FXPhCD4
Z88AQY6kQ0z/oa8aOmkOMaoRMudspBxOLXTd9pk1zaEHpF9A3qFnep5Q84dU
hxkzgaBSGc4HcWdGasD5U9pboy7/0XG4oHT7Zx1TmoN9ZcQK01oDB0btdrGb
emkOX3fe6vr71BBu/59vpQ/mMBrB+Z83BGTPYkfwpefFaZ4WQPCNQUDZyOHO
z7qsPQZpDupvefcZaBo5mIDE9RF8ruuLC2y1EPwvf69UvORKc7AFucfXEOLf
H6kO3V6vWEwUDRwKbIE6nqQ6bHVoenT8hq7DEpDA7VSHLeY/DqV4acP5MP/C
+ODwsFRz+LD8mLf5w1SHB67xjrMSlR14mIAe/prq0GnjuSvtkoLDue/Bj5dy
A93zSeXlrJfSDnG7PIFK0hzkdy3Yl3pOAu5+GB/mPxgf5v80EHiG4MPiFwBS
o9i9
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYseEpxeUHqc5pKeBgJIDjO++5uhyBgllh7nv
lx/zvo7g9+Q8/71yK4LfOz1PqHlLmsMD13jHWYkI/oss7W/TbVXg/I16eYsZ
7xjA+eJTr3BmKBnC+belaxKNVA0d9s2X0r+7BsE/cGqh67bFaQ4H25aHn7pk
4PAj+PHS2RPSHP58K30wJ9HA4QPQeeaZmPz631YF5zgMHPaUTJZgKULweZi0
28VaEfwFQOtUZqU58Pqvn5IageDD3A/jw/wHdM3nvzMQ/p9w6KtGTDmCX5Qx
8W1NNiYfFr5A3x44VZrm0G3juSutSMnhy98rFS9nIfhg9csR/Jh+oAVbEHxw
+NxA8NHjDwDfs83Z
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{194.992, 12.187499999999998`}, {194.992, 
     12.426599999999999`}, {194.76599999999996`, 12.426599999999999`}, {
     194.59799999999998`, 12.426599999999999`}, {188.086, 
     12.426599999999999`}, {187.91899999999998`, 12.426599999999999`}, {
     187.692, 12.426599999999999`}, {187.692, 12.187499999999998`}, {187.692, 
     11.9484}, {187.91899999999998`, 11.9484}, {188.086, 11.9484}, {
     194.59799999999998`, 11.9484}, {194.76599999999996`, 11.9484}, {194.992, 
     11.9484}, {194.992, 12.187499999999998`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYp1Nc98vr8t02GL+41BKlprDxLc19qZlCP5k
CZYwvtJMB4mpVzgzmNQcdpcARYoyHf5+K30wZ6MKRH1epsOJXTt62QJUHIoy
gCLZmQ47HJoeHZdQcWAO49PdFIrgc11fXGDrheCD1TMj+PFPLyjd5s10aOH1
Xz9lqYrD3ysVL9VUMx3OgICOmsOJsn3zpfQzHRhA4ICaw/vlx7zNMzMdUmLv
uDFLaDnA/KOvKP8lJ0wbzhfp8XrFskUXzp8JApYGDkDXcF2PznS4LV2TaKRq
CHGPPoLvmAB0EDOCD3bPywyIe97ow/myy1946N3XhfPd99fKWizXcTi10HXb
558IPtj9vxF8mPkwPjeTdrsY0P/i4PDWhfNT04DgGIL/BxT+hXoOeULNB06x
QsPrqR7cfBj/3Pfgx0u/I/ifQQ78huB/1YjpP/Q1w+E/CNzXcwA59+8fKN/e
wKE75/nvlYKZDtEKjh+Tzxg4AGPnZ50Wgh+3y5OHyRvBB5sfB/XPc304Hxb+
MP6b4q2iv1drO0QDbdfwganXdAAlrzCzTIj98Rrw8JwBiq+fSnB+Oig80pQc
kgQiLLeUZML56OkZAHFQUzg=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx11H0slVEcB3BvS+mSaiuz9HJf8NznRooh5Ce7VFJNDVuivJ+TudZobZne
V7JmlpLS663pRTG7SRfVKEqNNGSjJWmojPKWUJ3nee59zl+d7fzxubvP85zz
/f3OWRGrCUswNzExMSUzgkwzMuN9Pm49E4xhZjyju6hFAUbX6yvPzBpWQHX6
WTuLIAxFN2SPpy0d4WnjdXVFIHVDiGd2AFAXBOak9Plj2L0jzOnagAIKUhcc
e7YOQyUc7WmoVIC8czILu2O4v0Blk3RFBpL32jS/pRjWcEMrhXw7i3Aba+rm
ie2fb/1FovnnfyHI8d2oT1wvE92P2fECP7no0Ja8qD91cuhoIi+YRHDcemtp
vkIBw+9CY21NMFwoJOOxIzxfXrYv2drgSQZg95e30oUYDk2tTWtKZiEqt3bM
eTmGzS8t/S5lqGDCmfzi9n8PFdeHePpRJ+UNZvqrMSQkkuGogpvqipEZLwwe
vjVh501VYh69e663u2tY0Zk/y7bt/a0UzeebpBTy8MFw2OJFrpunUsgrgDqX
C3wzteWRc4E5OwzraaNubgv/7nqQFa1zSdWaZqrgqr3rB/l6DA18/VXg5Da7
ZMlq6lMBJCB7ag0pbyPJrzty8aOWwyxw7RJuheENNyQscHFkm5J+2NUVZN6h
ghgSb+cAEp9P6Zu686OHet7K8stDVdRFXKDFSMinmRHN5xFMzf9/FQNPuQ3c
RmB/JZp5bcsI/XyP2pew4AE1V96oUgQhXD4eDKRwDV+GwHzO6WVxWxiQmLEn
F9UgIb8xVujndiTWl9//J2quna1GqCO8dS/3jyNI1gyfeJXOirY71zonuUcp
mq/HTqXQb6N0vxE2XCBI6MfbzsL6SV6/B789845TCPvtQtDFOJT8HZEJ/dhC
zwup5qwjNdT8+6qo3aP1GyXl1Px5v2vwiBS8yPKePEKQUVehLnSQCfXXI6jW
ZA4WtlE7FPdvcFkmF13ID7mQ30PjfuVCXvepSVrvtTepiy+RE3nR4Fhq431h
NL+ey1KIt4301pUYvsdIxXoZPZ2Fq9ObqYu4A0/y6lbHBFycLxPOSy8y9Ktc
yPcrzYPPc4Y+n8/db3Ox6NGZ1gMDq6mN96fO81dt/CZ6nxrv1389pWSY
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4glva+xNL2U5zASBSA0HGH+7+Y9DKVpaDulp
QHAuy+FBhPj2iwq6Dktct33+uyPLwX1/razFc32HcMstJ8oWZTmIT73CmZFk
6HCibN98qeYsB/W3vPsMNI0cGLTbxW7WIfhXfJMEImoR/B91WXtKqrMcjEFA
GcGXnheneVoAwf+8ISB7FjuC/+db6YM5jEYOZxYCHdSY5fA8S/vb9LOGDjH9
h75qrMhy4PVfPyV1hoHDDJC/9mY5/AcBe11UfrwGnH8GBPYoO4Tz6W6auzrL
Ya2QDl96nbyDClvjVOf6LIc3bbndRrcl4fafBanPQfDbFNhVz4Qg+H0R3f6M
Bgg+KBjTnknA/S+/a8G+1HMS8PCB8ZcU2HJdb0bwTUDhsjjLYQ3IPXYyEP9u
zXLgjw24b1Su4GDPdX1xwUko/7kSPP4uXA17o1+t6oAevwD/keJg
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.45072933719790514`],
  ImageSize->{242.06597260273972`, 60.66068244084682},
  PlotRange->{{0., 242.07}, {0., 60.660000000000004`}}]], "Output",
 CellChangeTimes->{3.9386656292834845`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"bc462831-15f4-eb45-a9ad-a2cb9a1c2673"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "4"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"F1", "=", 
    RowBox[{
     RowBox[{"Int", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["E", 
          RowBox[{"2", "x"}]], "-", "1"}], 
        RowBox[{
         SuperscriptBox["E", 
          RowBox[{"2", "x"}]], "+", "1"}]], ",", "x"}], "]"}], "//", 
     "Steps"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a1", "=", 
     RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"F1", "/.", " ", 
      RowBox[{"x", "->", 
       RowBox[{"b1", "-", "F1"}]}]}], "/.", " ", 
     RowBox[{"x", "->", "a1"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["E", 
         RowBox[{"2", "x"}]], "-", "1"}], 
       RowBox[{
        SuperscriptBox["E", 
         RowBox[{"2", "x"}]], "+", "1"}]], ",", "x"}], "]"}], "//", 
    "MaTeX"}]}]}]], "Input",
 CellChangeTimes->{{3.938277913383983*^9, 3.938277938034464*^9}, {
   3.9382780628008766`*^9, 3.938278160184278*^9}, {3.93827840141921*^9, 
   3.938278402075105*^9}, {3.938278433614765*^9, 3.938278434130108*^9}, {
   3.938278600874878*^9, 3.9382786552904873`*^9}, {3.9382787191192837`*^9, 
   3.938278729443508*^9}, {3.9382788075793304`*^9, 3.9382788801424103`*^9}, {
   3.938278914095514*^9, 3.938278976941347*^9}, {3.938279031092222*^9, 
   3.9382790838639927`*^9}, {3.938279232383959*^9, 3.938279352573145*^9}, {
   3.9382794086070633`*^9, 3.938279464782219*^9}, {3.9382795144960823`*^9, 
   3.9382796923529434`*^9}, {3.9382797510293655`*^9, 3.938279821423469*^9}, {
   3.938279859205147*^9, 3.938279951464407*^9}, {3.938280078351612*^9, 
   3.938280098281212*^9}, 3.938665268635225*^9, {3.93866530783234*^9, 
   3.9386653382939377`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1ad251e7-0ac7-ab4f-b034-142e3383ad4d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"v", " ", 
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"FunctionOfExponentialFunction", "(", 
                    RowBox[{"u", ",", "x"}], ")"}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    "v"}], ")"}]}], 
                    FractionBox[
                    RowBox[{"\[PartialD]", "v"}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> None]],
                     HoldForm], TraditionalForm], HoldForm], TraditionalForm],
                   TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2320", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \
\\!\\(\\*RowBox[{RowBox[{\\\"FunctionOfExponentialQ\\\", \\\"[\\\", \
RowBox[{\\\"u\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"!\\\", RowBox[{\\\"MatchQ\\\", \\\"[\\\", RowBox[{\\\"u\\\", \
\\\",\\\", RowBox[{RowBox[{\\\"w_\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"a_.\\\", \\\" \\\", \
SuperscriptBox[\\\"v_\\\", \\\"n_\\\"]}], \\\")\\\"}], \\\"m_\\\"]}], \
\\\"/;\\\", RowBox[{RowBox[{\\\"FreeQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"a\\\", \\\",\\\", \\\"m\\\", \\\",\\\", \\\"n\\\"}], \
\\\"}\\\"}], \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"IntegerQ\\\", \\\"[\\\", RowBox[{\\\"m\\\", \\\" \\\", \
\\\"n\\\"}], \\\"]\\\"}]}]}]}], \\\"]\\\"}]}], \\\"&&\\\", RowBox[{\\\"!\\\", \
RowBox[{\\\"MatchQ\\\", \\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"c_.\\\", \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"a_.\\\", \\\"+\\\", RowBox[{\\\"b_.\
\\\", \\\" \\\", \\\"x\\\"}]}], \\\")\\\"}]}]], \\\" \\\", \
RowBox[{\\\"F_\\\", \\\"[\\\", \\\"v_\\\", \\\"]\\\"}]}], \\\"/;\\\", \
RowBox[{RowBox[{\\\"FreeQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\"}], \\\"}\\\"}], \\\",\\\
\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"InverseFunctionQ\\\", \
\\\"[\\\", RowBox[{\\\"F\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}], \
\\\"]\\\"}]}]}]}], \\\"]\\\"}]}]}]\\) let \\!\\(\\*RowBox[{\\\"v\\\", \\\"=\\\
\", RowBox[{\\\"FunctionOfExponential\\\", \\\"[\\\", RowBox[{\\\"u\\\", \
\\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]\\), then\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"v", " ", 
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"FunctionOfExponentialFunction", "(", 
                    RowBox[{"u", ",", "x"}], ")"}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    "v"}], ")"}]}], 
                    FractionBox[
                    RowBox[{"\[PartialD]", "v"}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> None]],
                     HoldForm], TraditionalForm], HoldForm], TraditionalForm],
                     TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"Dist", "[", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 RowBox[{"Subst", "[", 
                  RowBox[{
                   RowBox[{"Int", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "x"}], ")"}]}]], ",", "x"}], "]"}], ",",
                    "x", ",", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "]"}], ",", "x"}], "]"}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
            Rubi`Dist[
             Rational[1, 2], 
             Rubi`Subst[
              
              Rubi`Int[(-1 + $CellContext`x) ($CellContext`x^(-1)/(
                1 + $CellContext`x)), $CellContext`x], $CellContext`x, 
              E^(2 $CellContext`x)], $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", "x"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", "x"}]}], ")"}], "n"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"e", "+", 
                    RowBox[{"f", " ", "x"}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", "x"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", "x"}]}], ")"}], "n"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"e", "+", 
                    RowBox[{"f", " ", "x"}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["78", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"NeQ\\\", \
\\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"b\\\", \\\" \\\", \\\"c\\\"}], \\\"-\\\
\", RowBox[{\\\"a\\\", \\\" \\\", \\\"d\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"ILtQ\\\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"ILtQ\\\", \\\"[\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}], \\\")\\\"}], \\\"||\
\\\", RowBox[{\\\"EqQ\\\", \\\"[\\\", RowBox[{\\\"p\\\", \\\",\\\", \
\\\"1\\\"}], \\\"]\\\"}], \\\"||\\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"IGtQ\\\", \\\"[\\\", RowBox[{\\\"p\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"!\\\", RowBox[{\\\"IntegerQ\\\", \\\"[\\\", \\\"n\\\", \\\
\"]\\\"}]}], \\\"||\\\", RowBox[{\\\"LeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"9\\\", \\\" \\\", \\\"p\\\"}], \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"n\\\", \
\\\"+\\\", \\\"2\\\"}], \\\")\\\"}]}]}], \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"||\\\", RowBox[{\\\"GeQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"n\\\", \
\\\"+\\\", \\\"p\\\", \\\"+\\\", \\\"1\\\"}], \\\",\\\", \\\"0\\\"}], \\\"]\\\
\"}], \\\"||\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"n\\\", \\\"+\\\", \\\"p\\\", \\\"+\\\", \\\"2\\\"}], \
\\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"RationalQ\\\", \
\\\"[\\\", RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\", \
\\\",\\\", \\\"d\\\", \\\",\\\", \\\"e\\\", \\\",\\\", \\\"f\\\"}], \
\\\"]\\\"}]}], \\\")\\\"}]}], \\\")\\\"}]}], \\\")\\\"}]}], \
\\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", "x"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", "x"}]}], ")"}], "n"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"e", "+", 
                    RowBox[{"f", " ", "x"}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", "x"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", "x"}]}], ")"}], "n"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"e", "+", 
                    RowBox[{"f", " ", "x"}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"Dist", "[", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 RowBox[{"Subst", "[", 
                  RowBox[{
                   RowBox[{"Int", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "x"]}], "+", 
                    FractionBox["2", 
                    RowBox[{"1", "+", "x"}]]}], ",", "x"}], "]"}], ",", "x", 
                   ",", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "]"}], ",", "x"}], "]"}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
            Rubi`Dist[
             Rational[1, 2], 
             Rubi`Subst[
              
              Rubi`Int[(-1)/$CellContext`x + 
               2/(1 + $CellContext`x), $CellContext`x], $CellContext`x, 
              E^(2 $CellContext`x)], $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"General\"\>", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                RowBox[{"-", "x"}], "+", 
                RowBox[{"Log", "[", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"2", " ", "x"}]]}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[-$CellContext`x + Log[1 + E^(2 $CellContext`x)]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"FunctionOfExponentialQ\", \"[\", \
RowBox[{\"u\", \",\", \"x\"}], \"]\"}], \"&&\", RowBox[{\"!\", \
RowBox[{\"MatchQ\", \"[\", RowBox[{\"u\", \",\", RowBox[{RowBox[{\"w_\", \" \
\", SuperscriptBox[RowBox[{\"(\", RowBox[{\"a_.\", \" \", SuperscriptBox[\"v_\
\", \"n_\"]}], \")\"}], \"m_\"]}], \"/;\", RowBox[{RowBox[{\"FreeQ\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \"n\"}], \"}\"}], \
\",\", \"x\"}], \"]\"}], \"&&\", RowBox[{\"IntegerQ\", \"[\", RowBox[{\"m\", \
\" \", \"n\"}], \"]\"}]}]}]}], \"]\"}]}], \"&&\", RowBox[{\"!\", \
RowBox[{\"MatchQ\", \"[\", RowBox[{\"u\", \",\", \
RowBox[{RowBox[{SuperscriptBox[\"\[ExponentialE]\", RowBox[{\"c_.\", \" \", \
RowBox[{\"(\", RowBox[{\"a_.\", \"+\", RowBox[{\"b_.\", \" \", \"x\"}]}], \")\
\"}]}]], \" \", RowBox[{\"F_\", \"[\", \"v_\", \"]\"}]}], \"/;\", \
RowBox[{RowBox[{\"FreeQ\", \"[\", RowBox[{RowBox[{\"{\", RowBox[{\"a\", \
\",\", \"b\", \",\", \"c\"}], \"}\"}], \",\", \"x\"}], \"]\"}], \"&&\", \
RowBox[{\"InverseFunctionQ\", \"[\", RowBox[{\"F\", \"[\", \"x\", \"]\"}], \
\"]\"}]}]}]}], \"]\"}]}]}]\) let \!\(\*RowBox[{\"v\", \"=\", \
RowBox[{\"FunctionOfExponential\", \"[\", RowBox[{\"u\", \",\", \"x\"}], \
\"]\"}]}]\), then", 
          HoldComplete[
           Integrate[$CellContext`u, $CellContext`x]], 
          HoldComplete[
           Rubi`Dist[$CellContext`v/D[$CellContext`v, $CellContext`x], 
            Rubi`Subst[
             
             Integrate[$CellContext`FunctionOfExponentialFunction[$\
CellContext`u, $CellContext`x]/$CellContext`x, $CellContext`x], \
$CellContext`x, $CellContext`v], $CellContext`x]], 2320], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
           Rubi`Dist[
            Rational[1, 2], 
            Rubi`Subst[
             
             Rubi`Int[(-1 + $CellContext`x) ($CellContext`x^(-1)/(
               1 + $CellContext`x)), $CellContext`x], $CellContext`x, 
             E^(2 $CellContext`x)], $CellContext`x]]], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"NeQ\", \"[\", \
RowBox[{RowBox[{RowBox[{\"b\", \" \", \"c\"}], \"-\", RowBox[{\"a\", \" \", \
\"d\"}]}], \",\", \"0\"}], \"]\"}], \"&&\", RowBox[{\"(\", \
RowBox[{RowBox[{\"(\", RowBox[{RowBox[{\"ILtQ\", \"[\", RowBox[{\"n\", \",\", \
\"0\"}], \"]\"}], \"&&\", RowBox[{\"ILtQ\", \"[\", RowBox[{\"p\", \",\", \
\"0\"}], \"]\"}]}], \")\"}], \"||\", RowBox[{\"EqQ\", \"[\", RowBox[{\"p\", \
\",\", \"1\"}], \"]\"}], \"||\", RowBox[{\"(\", RowBox[{RowBox[{\"IGtQ\", \"[\
\", RowBox[{\"p\", \",\", \"0\"}], \"]\"}], \"&&\", RowBox[{\"(\", \
RowBox[{RowBox[{\"!\", RowBox[{\"IntegerQ\", \"[\", \"n\", \"]\"}]}], \"||\", \
RowBox[{\"LeQ\", \"[\", RowBox[{RowBox[{RowBox[{\"9\", \" \", \"p\"}], \"+\", \
RowBox[{\"5\", \" \", RowBox[{\"(\", RowBox[{\"n\", \"+\", \"2\"}], \
\")\"}]}]}], \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"GeQ\", \"[\", \
RowBox[{RowBox[{\"n\", \"+\", \"p\", \"+\", \"1\"}], \",\", \"0\"}], \"]\"}], \
\"||\", RowBox[{\"(\", RowBox[{RowBox[{\"GeQ\", \"[\", RowBox[{RowBox[{\"n\", \
\"+\", \"p\", \"+\", \"2\"}], \",\", \"0\"}], \"]\"}], \"&&\", \
RowBox[{\"RationalQ\", \"[\", RowBox[{\"a\", \",\", \"b\", \",\", \"c\", \
\",\", \"d\", \",\", \"e\", \",\", \"f\"}], \"]\"}]}], \")\"}]}], \")\"}]}], \
\")\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + $CellContext`b $CellContext`x) \
($CellContext`c + $CellContext`d $CellContext`x)^$CellContext`n \
($CellContext`e + $CellContext`f $CellContext`x)^$CellContext`p, \
$CellContext`x]], 
          HoldComplete[
           Integrate[
            $CellContext`ExpandIntegrand[($CellContext`a + $CellContext`b \
$CellContext`x) ($CellContext`c + $CellContext`d \
$CellContext`x)^$CellContext`n ($CellContext`e + $CellContext`f \
$CellContext`x)^$CellContext`p, $CellContext`x], $CellContext`x]], 78], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
           Rubi`Dist[
            Rational[1, 2], 
            Rubi`Subst[
             
             Rubi`Int[(-1)/$CellContext`x + 
              2/(1 + $CellContext`x), $CellContext`x], $CellContext`x, 
             E^(2 $CellContext`x)], $CellContext`x]]], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Rubi`Int[$CellContext`a $CellContext`u + $CellContext`b \
$CellContext`v + $CellContext`\[CenterEllipsis], $CellContext`x]], 
          
          HoldComplete[$CellContext`a 
            Integrate[$CellContext`u, $CellContext`x] + $CellContext`b 
            Integrate[$CellContext`v, $CellContext`x] + $CellContext`\
\[CenterEllipsis]]], 
         Rubi`RubiIntermediateResult[
          HoldComplete[-$CellContext`x + Log[1 + E^(2 $CellContext`x)]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.93827926202336*^9, 3.938279285541523*^9}, 
   3.938279465453779*^9, {3.938279814910221*^9, 3.93827985253591*^9}, 
   3.938279935128683*^9, 3.938279980374821*^9, {3.93828008334963*^9, 
   3.938280098812271*^9}, 3.9382803846364994`*^9, 3.938665374707279*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"7a97d6c2-13f9-a146-b3de-9247e660d1f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "x"}], "+", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "x"}]]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.938278656352741*^9, 3.93827866711582*^9}, 
   3.938278731739317*^9, 3.938278882188137*^9, 3.938278939599201*^9, 
   3.938278970288183*^9, 3.938279040290451*^9, {3.938279071728733*^9, 
   3.938279084738359*^9}, {3.93827926202336*^9, 3.938279285541523*^9}, 
   3.938279465453779*^9, {3.938279814925821*^9, 3.9382798525515614`*^9}, 
   3.938279935144325*^9, 3.938279980374821*^9, {3.93828008334963*^9, 
   3.9382800988278694`*^9}, 3.9382803846521187`*^9, 3.9386653747229*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"fc1f3307-7b0c-9043-9a81-ca281c8f9d1f"],

Cell[BoxData["0.701181003418236`"], "Output",
 CellChangeTimes->{{3.938278656352741*^9, 3.93827866711582*^9}, 
   3.938278731739317*^9, 3.938278882188137*^9, 3.938278939599201*^9, 
   3.938278970288183*^9, 3.938279040290451*^9, {3.938279071728733*^9, 
   3.938279084738359*^9}, {3.93827926202336*^9, 3.938279285541523*^9}, 
   3.938279465453779*^9, {3.938279814925821*^9, 3.9382798525515614`*^9}, 
   3.938279935144325*^9, 3.938279980374821*^9, {3.93828008334963*^9, 
   3.9382800988278694`*^9}, 3.9382803846521187`*^9, 3.9386653747229*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"5ce86296-3b40-6c4f-a4b2-66619757c67f"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\:5411\:91cf\:53ef\:89c6\:5316", " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "a"}], "}"}], 
          "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"First", " ", "vector", " ", "a"}], "*)"}], 
         "\[IndentingNewLine]", "Red", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "b"}], "}"}], 
          "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Second", " ", "vector", " ", "b"}], "*)"}], 
         "\[IndentingNewLine]", "Green", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"Cross", "[", 
             RowBox[{"a", ",", "b"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Cross", " ", "product"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<a\>\"", ",", "Blue", ",", "Bold", ",", "12"}], "]"}],
            ",", 
           RowBox[{"a", "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "for", " ", "a"}], "*)"}], 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<b\>\"", ",", "Red", ",", "Bold", ",", "12"}], "]"}], 
           ",", 
           RowBox[{"b", "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "for", " ", "b"}], "*)"}], 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<a x b\>\"", ",", "Green", ",", "Bold", ",", "12"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Cross", "[", 
             RowBox[{"a", ",", "b"}], "]"}], "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}]}], "]"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{"Label", " ", "for", " ", "cross", " ", "product"}], "*)"}], 
        "}"}], ",", 
       RowBox[{"Boxed", "->", "False"}], ",", 
       RowBox[{"Axes", "->", "True"}], ",", 
       RowBox[{"AxesOrigin", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"theta", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "Control", " ", "for", " ", "rotating", " ", "vector", " ", "b"}], 
      "*)"}], 
     RowBox[{"(*", 
      RowBox[{"Define", " ", "the", " ", "vectors"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Initialization", ":>", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], ";", 
        RowBox[{"b", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
           RowBox[{"3", " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], ",", "1"}], "}"}]}]}], 
       ")"}]}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.937101544107807*^9, {3.937101637412787*^9, 3.93710170119261*^9}, {
   3.939670328658922*^9, 3.9396703372211447`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"83d302dd-a69b-ec41-911d-8dd5173dd5fd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`theta$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`theta$$], 0}, 0, 2 Pi, ControlType -> Manipulator}}, 
    Typeset`size$$ = {288., {142., 146.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`theta$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics3D[{Blue, 
         Arrow[{{0, 0, 0}, $CellContext`a}], Red, 
         Arrow[{{0, 0, 0}, $CellContext`b}], Green, 
         Arrow[{{0, 0, 0}, 
           Cross[$CellContext`a, $CellContext`b]}], 
         Text[
          Style["a", Blue, Bold, 12], $CellContext`a + {0.5, 0.5, 0}], 
         Text[
          Style["b", Red, Bold, 12], $CellContext`b + {0.5, 0.5, 0}], 
         Text[
          Style["a x b", Green, Bold, 12], 
          Cross[$CellContext`a, $CellContext`b] + {0.5, 0.5, 0}]}, Boxed -> 
        False, Axes -> True, AxesOrigin -> {0, 0, 0}], 
      "Specifications" :> {{{$CellContext`theta$$, 0}, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{327., {177.7072265414754, 182.2927734585246}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`a = {1, 2, 1}; $CellContext`b = {
        3 Cos[$CellContext`theta$$], 3 Sin[$CellContext`theta$$], 1}); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9371015494346886`*^9, 3.937101560635155*^9}, 
   3.9410780888320274`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"03eb30ac-6639-5e46-ac54-3d79eeb18336"]
}, Open  ]],

Cell[CellGroupData[{

Cell["inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}", "WolframAlphaLong",
 CellChangeTimes->{{3.935987531293798*^9, 3.9359875634786263`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"82a54a90-274c-534a-9e18-c3bb9beb84f6"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"Result__Step-by-step solution"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Eigen", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Inverse[{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               TemplateBox[{
                 TemplateBox[{
                   GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2"}, {"2", "3", 
                    RowBox[{"-", "1"}]}, {"1", "3", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                  DisplayFunction -> (
                   RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                  InterpretationFunction -> (#& )]}, "Inverse", SyntaxForm -> 
                SuperscriptBox], HoldForm], 
              TemplateBox[{10}, "Spacer1"], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"matrix inverse\"", "\[NoBreak]", 
                 "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Eigen", "id" -> "Result", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "2", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Inverse[{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              StyleBox[
               FractionBox["1", "30"], ScriptLevel -> 1], 
              TemplateBox[{
                GridBox[{{"6", "8", 
                   RowBox[{"-", "4"}]}, {
                   RowBox[{"-", "3"}], "1", "7"}, {"3", 
                   RowBox[{"-", "11"}], "13"}}, RowSpacings -> 1, 
                 ColumnSpacings -> 1, RowAlignments -> Baseline, 
                 ColumnAlignments -> Center]}, "Matrix", 
               DisplayFunction -> (
                RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
               InterpretationFunction -> (#& )]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Find the inverse", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2"}, {"2", "3", 
                    RowBox[{"-", "1"}]}, {"1", "3", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "Inverse", SyntaxForm -> 
                    SuperscriptBox], HoldForm], AutoMultiplicationSymbol -> 
                    True], HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox[
                    "To find the inverse, augment the given matrix with the \
identity matrix and perform Gaussian elimination", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2", "1", "0", "0"}, {"2", "3", 
                    RowBox[{"-", "1"}], "0", "1", "0"}, {
                    "1", "3", "1", "0", "0", "1"}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Swap row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" with row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"1", "3", "1", "0", "0", "1"}, {
                    StyleBox["2", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "1"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"3", 
                    RowBox[{"-", "2"}], "2", "1", "0", "0"}}, AutoDelete -> 
                    False, GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["1", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "3"}], "0", "1", 
                    RowBox[{"-", "2"}]}, {
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "2"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["2", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["1", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "2"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "11"}], 
                    RowBox[{"-", "1"}], "1", "0", 
                    RowBox[{"-", "3"}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Swap row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" with row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "11"}], 
                    RowBox[{"-", "1"}], "1", "0", 
                    RowBox[{"-", "3"}]}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "3"}], "0", "1", 
                    RowBox[{"-", "2"}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox["3", "11"], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["2", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "11"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "1"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", "0", 
                    RowBox[{"-", 
                    FractionBox["30", "11"]}], 
                    RowBox[{"-", 
                    FractionBox["3", "11"]}], "1", 
                    RowBox[{"-", 
                    FractionBox["13", "11"]}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Multiply row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" by ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "11"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "1"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", "0", "1", 
                    FractionBox["1", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    FractionBox["13", "30"]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Add row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" to row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "11"}], "0", 
                    FractionBox["11", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    RowBox[{"-", 
                    FractionBox["77", "30"]}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"1", "3", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["11", "30"], 
                    FractionBox["17", "30"]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "11"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["11", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["77", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Divide row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" by ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", "11"}], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["11", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["17", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", "1", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["1", "30"], 
                    FractionBox["7", "30"]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["2", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"1", "0", "0", 
                    FractionBox["1", "5"], 
                    FractionBox["4", "15"], 
                    RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["7", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Read off the inverse", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2"}, {"2", "3", 
                    RowBox[{"-", "1"}]}, {"1", "3", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "Inverse", SyntaxForm -> 
                    SuperscriptBox], HoldForm], AutoMultiplicationSymbol -> 
                    True], "\[LongEqual]", 
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{
                    FractionBox["1", "5"], 
                    FractionBox["4", "15"], 
                    RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["1", "30"], 
                    FractionBox["7", "30"]}, {
                    FractionBox["1", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    FractionBox["13", "30"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowDefault"]}], 
                    HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Simplify by factoring out an appropriate term", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    FractionBox["1", "30"], ScriptLevel -> 1], 
                    TemplateBox[{
                    GridBox[{{"6", "8", 
                    RowBox[{"-", "4"}]}, {
                    RowBox[{"-", "3"}], "1", "7"}, {"3", 
                    RowBox[{"-", "11"}], "13"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]], Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Result__Approximate form"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Use Gaussian elimination", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Use Gaussian elimination", "input" -> 
           "Result__Use Gaussian elimination"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Use the inverse formula", "input" -> 
           "Result__Use the inverse formula"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Result__Hide steps"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Eigen", "id" -> 
     "MatrixExpandedForm", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Inverse[{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               GridBox[{{
                  FractionBox["1", "5"], 
                  FractionBox["4", "15"], 
                  RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                  RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                  FractionBox["1", "30"], 
                  FractionBox["7", "30"]}, {
                  FractionBox["1", "10"], 
                  RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                  FractionBox["13", "30"]}}, RowSpacings -> 1, ColumnSpacings -> 
                1, RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
              "Matrix", 
              DisplayFunction -> (
               RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
              InterpretationFunction -> (#& )], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Dimensions", "scanner" -> "List", "id" -> "Dimensions",
      "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Dimensions[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"3", 
              StyleBox["\" (rows)\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TemplateBox[{"\" \[Times] \"", "3"}, "RowDefault"], 
              StyleBox["\" (columns)\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Dimensions__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Matrix plot", "scanner" -> "List", "id" -> 
     "MatrixPlot", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "MatrixPlot[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[
             
             RasterBox[{{{0.9056080753011289, 0.7998817818924338, 
              0.4892363007846362}, {0.23579080498281568`, 0.5054377169002706, 
              0.846443207203114}, {1., 0.4312504768444343, 0.}}, {{
              0.4983206016038352, 0.7268541122319858, 0.8394707240410165}, {
              0.8788531149915214, 0.8322057812973229, 0.5816337311710366}, {
              0.8693821769296596, 0.5987989690697999, 0.0855572645874716}}, {{
              0.8894894388332022, 0.6867291713837378, 0.25847740178673506`}, {
              0.8891581604529074, 0.5324349533651507, 
              0.0055184931579292775`}, {0.4012281092515242, 0.664437096582071,
               0.8010793975567913}}}, {{0, 0}, {3, 3}}, {0, 1}], AxesStyle -> 
             Directive[
               AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True,
              FrameLabel -> {None, None}, FrameStyle -> Directive[
               AbsoluteThickness[0.2]], FrameTicks -> {{{{2.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {0.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}, {{2.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {0.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}}, {{{0.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {2.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}, {{0.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {2.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}}}, GridLinesStyle -> 
             Automatic, ImageSize -> 75, 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
             TicksStyle -> {}, TicksStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1]], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Transpose", "scanner" -> "List", "id" -> 
     "MatrixTranspose", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Transpose[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               GridBox[{{
                  FractionBox["1", "5"], 
                  RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                  FractionBox["1", "10"]}, {
                  FractionBox["4", "15"], 
                  FractionBox["1", "30"], 
                  RowBox[{"-", 
                    FractionBox["11", "30"]}]}, {
                  RowBox[{"-", 
                    FractionBox["2", "15"]}], 
                  FractionBox["7", "30"], 
                  FractionBox["13", "30"]}}, RowSpacings -> 1, ColumnSpacings -> 
                1, RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
              "Matrix", 
              DisplayFunction -> (
               RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
              InterpretationFunction -> (#& )], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate forms", "input" -> 
         "MatrixTranspose__Approximate forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "MatrixTranspose__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod7$$ = 
   XMLElement[
   "pod", {"title" -> "Trace", "scanner" -> "List", "id" -> "Trace", 
     "position" -> "700", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Tr[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["2", "3"], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Trace__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Trace__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Determinant", "scanner" -> "List", "id" -> 
     "Determinant", "position" -> "800", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Det[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["1", "30"], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Determinant__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Determinant__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Characteristic polynomial", "scanner" -> "Eigen", "id" -> 
     "CharacteristicPolynomial", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "CharacteristicPolynomial[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, \
{1/10, -11/30, 13/30}}, \[Lambda]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{"-", 
                 RowBox[{
                   SuperscriptBox["\[Lambda]", "3"]}]}], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], "3"], "-", 
               FractionBox[
                RowBox[{"7", " ", "\[Lambda]"}], "30"], "+", 
               FractionBox["1", "30"]}], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "CharacteristicPolynomial__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "CharacteristicPolynomial__Step-by-step solution", "stepbystep" -> 
         "true", "buttonstyle" -> "StepByStepSolution"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://mathworld.wolfram.com/CharacteristicPolynomial.html", 
           "text" -> "Characteristic polynomial"}, {}]}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Eigenvalues", "scanner" -> "Eigen", "id" -> 
     "Eigenvalues", "position" -> "1000", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\[Lambda]", "1"], "\[TildeTilde]", 
              TagBox[
               RowBox[{
                 RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "+", 
                 RowBox[{"0.29386611303071347`", " ", "\[ImaginaryI]"}]}], 
               HoldForm]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\[Lambda]", "2"], "\[TildeTilde]", 
              TagBox[
               RowBox[{
                 RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "-", 
                 RowBox[{"0.29386611303071347`", " ", "\[ImaginaryI]"}]}], 
               HoldForm]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\[Lambda]", "3"], "\[TildeTilde]", 
              "0.26175460898876934`"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Exact forms", "input" -> "Eigenvalues__Exact forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Eigenvalues__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod11$$ = 
   XMLElement[
   "pod", {"title" -> "Eigenvectors", "scanner" -> "Eigen", "id" -> 
     "Eigenvectors", "position" -> "1100", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["v", "1"], "\[TildeTilde]", 
              TagBox[
               RowBox[{"(", "\[NoBreak]", 
                 TemplateBox[{",", "\",\"", 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "+", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox["1", HoldForm]}, "RowWithSeparators"], "\[NoBreak]",
                  ")"}], "Dot", "SyntaxForm" -> "."]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["v", "2"], "\[TildeTilde]", 
              TagBox[
               RowBox[{"(", "\[NoBreak]", 
                 TemplateBox[{",", "\",\"", 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "-", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox["1", HoldForm]}, "RowWithSeparators"], "\[NoBreak]",
                  ")"}], "Dot", "SyntaxForm" -> "."]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["v", "3"], "\[TildeTilde]", 
              TagBox[
               RowBox[{"(", "\[NoBreak]", 
                 TemplateBox[{",", "\",\"", 
                   TagBox["0.7791003844662475`", HoldForm], 
                   TagBox["0.6804238985214238`", HoldForm], 
                   TagBox["1", HoldForm]}, "RowWithSeparators"], "\[NoBreak]",
                  ")"}], "Dot", "SyntaxForm" -> "."]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Exact forms", "input" -> "Eigenvectors__Exact forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Eigenvectors__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod12$$ = 
   XMLElement[
   "pod", {"title" -> "Diagonalization", "scanner" -> "Eigen", "id" -> 
     "Diagonalization", "position" -> "1200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "JordanDecomposition[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                RowBox[{
                  TemplateBox[{
                    GridBox[{{
                    FractionBox["1", "5"], 
                    FractionBox["4", "15"], 
                    RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["1", "30"], 
                    FractionBox["7", "30"]}, {
                    FractionBox["1", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    FractionBox["13", "30"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )], "\[LongEqual]", 
                  TagBox[
                   RowBox[{"S", ".", "J", ".", 
                    
                    TemplateBox[{"S"}, "Inverse", SyntaxForm -> 
                    SuperscriptBox]}], HoldForm]}]}, {
                StyleBox["\"where\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}, {
                RowBox[{"S", "\[TildeTilde]", 
                  TemplateBox[{
                    GridBox[{{"0.7791003844662475`", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "-", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "+", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, {"0.6804238985214238`", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, {"1", "1", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}]}, {
                RowBox[{"J", "\[TildeTilde]", 
                  TemplateBox[{
                    GridBox[{{"0.2617546089887694`", "0", "0"}, {"0", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.2938661130307135`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], "0"}, {"0", "0", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.2938661130307135`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
                   "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}]}, {
                RowBox[{
                  TemplateBox[{"S"}, "Inverse", SyntaxForm -> SuperscriptBox],
                   "\[TildeTilde]", 
                  TemplateBox[{
                    
                    GridBox[{{
                    "0.6621386587964182`", "0.04476630969407526`", 
                    "0.4536674493972851`"}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.3310693293982091`"}], "+", 
                    RowBox[{"0.10333977784079848`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.02238315484703763`"}], "-", 
                    RowBox[{"0.6283835204086168`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.2731662753013575`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.34705510407662504`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.3310693293982091`"}], "-", 
                    RowBox[{"0.10333977784079848`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.02238315484703763`"}], "+", 
                    RowBox[{"0.6283835204086168`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.2731662753013575`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.34705510407662504`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
                   "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Column"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod13$$ = XMLElement[
   "pod", {"title" -> "Condition number", "scanner" -> "List", "id" -> 
     "ConditionNumber", "position" -> "1300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["4.5`", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False, False, False}, True}, Typeset`aux11$$ = {
   True, False, {False, False, False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "13", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.16", "parsetiming" -> "0.47400000000000003", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP1450622g5e312654cfeid00003ghigbi2f945b8dg", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "15", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa1450722g5e312654cfeid00001640iaf0ehi2dfi08884920455003441207", "version" -> 
    "2.6", "inputstring" -> "inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2024, 9, 22, 19, 53, 9.3365821`8.72276288508492}, "Line" -> 6, 
    "SessionID" -> 33101571439739455622}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7, 8, 9, 10, 11, 12, 13}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{819.2, {1351.983593718463, 1356.2164062815368`}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.935987589414692*^9},ExpressionUUID->"843b1ccb-33ff-da45-9fe8-\
9018bb8e27df"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["A-level math", "Title",
 CellChangeTimes->{{3.931407174321792*^9, 
  3.931407177930338*^9}},ExpressionUUID->"3f82800e-aff7-7147-8f3b-\
0c72b943a643"],

Cell[CellGroupData[{

Cell["Year 13 - C1", "Section",
 CellChangeTimes->{{3.931407414930475*^9, 
  3.931407427130903*^9}},ExpressionUUID->"e98c8819-7aef-d64b-9d97-\
7f6cab128c23"],

Cell[CellGroupData[{

Cell["Module 4: Trigonometry", "Subsection",
 CellChangeTimes->{{3.931407451531397*^9, 3.9314074633409*^9}, {
  3.93141243522612*^9, 
  3.931412452336342*^9}},ExpressionUUID->"4b3e98ed-6b77-9c4f-a9f2-\
9b1648ab791b"],

Cell["Enter text here", "Text",
 CellChangeTimes->{{3.931412154361902*^9, 
  3.9314121727933636`*^9}},ExpressionUUID->"37d8e12f-4749-e24e-b7b5-\
7326f6810e28"],

Cell["Enter bulleted item text here.", "Item",
 CellChangeTimes->{{3.931412149769417*^9, 
  3.931412149769417*^9}},ExpressionUUID->"7cd6e70f-44e6-f949-9417-\
1ed6bafba807"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{"x", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   SqrtBox["z"]}], TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->\
"292f817f-ac73-b045-b9bb-6b4472f66589"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", " ", "=", " ", 
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "2"]}], " ", "+", " ", 
    RowBox[{"8", "x"}], " ", "+", " ", "4"}]}], " "}], "\n", 
 RowBox[{"NSolve", "[", 
  RowBox[{"f", ",", " ", "x"}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{"f", " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.931407550976351*^9, 3.931407591591724*^9}, {
   3.931407626333452*^9, 3.9314076445363464`*^9}, {3.931408400780186*^9, 
   3.931408512024429*^9}, {3.931412011746212*^9, 3.931412062480038*^9}, 
   3.931412198789852*^9, {3.931412230488808*^9, 3.931412323129978*^9}, {
   3.931412553335655*^9, 3.931412685784553*^9}, {3.931412753685856*^9, 
   3.931412865377777*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c05d3e8c-a2ba-5949-a2a7-f1c658d46de0"],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", "x"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.931412050952461*^9, 3.931412063854587*^9}, 
   3.931412200026531*^9, 3.931412232412405*^9, 3.931412302893543*^9, 
   3.9314125207353725`*^9, {3.931412589420679*^9, 3.931412670753811*^9}, {
   3.931412807540485*^9, 3.931412867661318*^9}, 3.93148375942028*^9, 
   3.931577447373827*^9, 3.93163818408159*^9, 3.931832635250236*^9, 
   3.9325278515646706`*^9, 3.932616121413965*^9, 3.9359875809741116`*^9, 
   3.937101548434895*^9, 3.938058897543585*^9, 3.9381930163362617`*^9, 
   3.938277774735548*^9, 3.938278336059288*^9, 3.93866509268444*^9, 
   3.938804465568134*^9, 3.938836759962597*^9, 3.941078087644495*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a06ac9f6-7e4a-d347-8326-6e9144e4a0b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.414213562373095`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.585786437626905`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.931412050952461*^9, 3.931412063854587*^9}, 
   3.931412200026531*^9, 3.931412232412405*^9, 3.931412302893543*^9, 
   3.9314125207353725`*^9, {3.931412589420679*^9, 3.931412670753811*^9}, {
   3.931412807540485*^9, 3.931412867661318*^9}, 3.93148375942028*^9, 
   3.931577447373827*^9, 3.93163818408159*^9, 3.931832635250236*^9, 
   3.9325278515646706`*^9, 3.932616121413965*^9, 3.9359875809741116`*^9, 
   3.937101548434895*^9, 3.938058897543585*^9, 3.9381930163362617`*^9, 
   3.938277774735548*^9, 3.938278336059288*^9, 3.93866509268444*^9, 
   3.938804465568134*^9, 3.938836759962597*^9, 3.9410780876757507`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"a7c0b5ab-f70a-cf45-ae0f-56952d17584c"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
mhkmBbOhuWU8LvX/3zsoqi1wQCDgUv8HRzdmtg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
mhkmBbOhuWU8LvX/3zsoqi1wQCDgUv8HRzdmtg==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {-3.9999984693273554`, 
             45.99999755102044}}, "Frame" -> {{False, False}, {False, False}},
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {-3.9999984693273554`, 45.99999755102044}},
           "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
mhkmBbOhuWU8LvX/3zsoqi1wQCDgUv8HRzdmtg==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {-3.9999984693273554`, 45.99999755102044}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-3.9999984693273554`, 45.99999755102044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.931412050952461*^9, 3.931412063854587*^9}, 
   3.931412200026531*^9, 3.931412232412405*^9, 3.931412302893543*^9, 
   3.9314125207353725`*^9, {3.931412589420679*^9, 3.931412670753811*^9}, {
   3.931412807540485*^9, 3.931412867661318*^9}, 3.93148375942028*^9, 
   3.931577447373827*^9, 3.93163818408159*^9, 3.931832635250236*^9, 
   3.9325278515646706`*^9, 3.932616121413965*^9, 3.9359875809741116`*^9, 
   3.937101548434895*^9, 3.938058897543585*^9, 3.9381930163362617`*^9, 
   3.938277774735548*^9, 3.938278336059288*^9, 3.93866509268444*^9, 
   3.938804465568134*^9, 3.938836759962597*^9, 3.9410780881288967`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"d219c07d-7523-7d42-aa05-1b5d4a96e461"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Year 13 - C2", "Section",
 CellChangeTimes->{{3.931407414930475*^9, 
  3.9314074461105785`*^9}},ExpressionUUID->"4a7226d4-de2a-8842-b064-\
eaf926c35d2a"],

Cell[CellGroupData[{

Cell["Module 3: Statistics Normal Distribution", "Subsection",
 CellChangeTimes->{{3.931407451531397*^9, 3.9314074633409*^9}, {
  3.9314123673267384`*^9, 
  3.931412390390148*^9}},ExpressionUUID->"d485f1d2-7778-8242-8fea-\
c02a320cf8f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", " ", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", "-", " ", 
    RowBox[{"2", "x"}], " ", "-", " ", 
    RowBox[{"(", 
     RowBox[{"5", "/", "4.9"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"NSolve", "[", 
  RowBox[{"f", ",", " ", "x"}], "]"}]}], "Code",
 CellChangeTimes->{{3.931407550976351*^9, 3.931407591591724*^9}, {
   3.931407626333452*^9, 3.9314076445363464`*^9}, {3.931408400780186*^9, 
   3.931408512024429*^9}, {3.931412011746212*^9, 3.931412062480038*^9}, 
   3.931412198789852*^9, {3.931412230488808*^9, 3.931412323129978*^9}, {
   3.931494693913206*^9, 3.931494697599806*^9}, {3.93183261135391*^9, 
   3.931832643884021*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"411a8c7d-b7b6-9849-8513-317152c092ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.42141062443802846`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.4214106244380282`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.931483760280054*^9, 3.931494699255699*^9, 3.931577448312123*^9, 
   3.9316381850513*^9, {3.931832636407881*^9, 3.931832644994325*^9}, 
   3.93252785250195*^9, 3.932616122523063*^9, 3.9359875820416*^9, 
   3.937101549372202*^9, 3.938058898748277*^9, 3.938193017570311*^9, 
   3.938277775860317*^9, 3.938278336387367*^9, 3.938665093746687*^9, 
   3.938804466755369*^9, 3.938836760993639*^9, 3.9410780887539024`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ccd9c07f-6f4d-1141-8f91-7d44305ed024"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "phi(0.4)", Typeset`newq$$ = "phi(0.4)", 
   Typeset`chosen$$ = "CDF[NormalDistribution[0, 1], 0.4]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse["phi(0.4)", 
               Defer[
                CDF[
                 NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{8.8, {3., 5.800000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{8.8, {3., 5.800000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["phi(0.4)", 
                  Defer[
                   CDF[
                    NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"CDF", "[", 
                  RowBox[{
                   RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"CDF", "[", 
                  RowBox[{
                   RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse["phi(0.4)", 
                   Defer[
                    CDF[
                    NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "phi(0.4)", 
                    Defer[
                    CDF[
                    NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[6]:=",ExpressionUUID->"fb910e91-3ea5-ed4f-8d42-705b84a6c4b7"],

Cell[BoxData["0.6554217416103242`"], "Output",
 CellChangeTimes->{3.9314837650660152`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"45ea58af-6bdd-b340-b873-4461ac9375f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "1.9"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", 
     RowBox[{"-", "2.7"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.931483864909727*^9, 3.9314839998837423`*^9}, {
  3.93148431977222*^9, 3.931484321946144*^9}, {3.9318357667181053`*^9, 
  3.931835795584793*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"5ba3a521-07bc-fd4a-80ac-8f1f55729b10"],

Cell[BoxData["0.9678164663809575`"], "Output",
 CellChangeTimes->{3.9318357963506203`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"436a3a03-fd62-9647-9835-da71f43ff48f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", " ", "9"}], "]"}], ",", " ", "26"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.931484367869171*^9, 3.931484459652298*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"47180540-f3ee-074f-9224-37888d4d1563"],

Cell[BoxData["0.4120704478709426`"], "Output",
 CellChangeTimes->{{3.931484443308756*^9, 3.931484460136944*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"f9a98922-b563-7446-8cfc-2ed68b84e9c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"2", "\[Pi]"}]]], 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "2"]]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"f", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.93148527725733*^9, 3.9314853100068226`*^9}, {
  3.931485600687801*^9, 3.931485690853111*^9}, {3.9314857228455257`*^9, 
  3.931485810292425*^9}, {3.931485913908673*^9, 3.931485954858908*^9}, {
  3.931494610578575*^9, 3.931494625851477*^9}, {3.9318346899962025`*^9, 
  3.9318346922013264`*^9}},ExpressionUUID->"f8b2926f-5c2a-1d4a-9aef-\
eb9f2655adb0"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"]}]], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{{3.931485672591816*^9, 3.9314856913373756`*^9}, 
   3.9314858143227158`*^9, {3.931485916938999*^9, 3.931485945563999*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"df63be18-9261-7b4e-ac2c-aa68ab0b6964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", "9"}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "12", ",", "36"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.931484886439274*^9, 3.93148490314954*^9}, {
  3.9314849699390526`*^9, 3.9314850636832476`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"9375fa44-ad92-bb4d-9bdb-5b5e51ca57b4"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{12, 36}, {0.018223342952994617`, 
             0.04432691911100661}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {12.000000000000027`, 0.01822334295299466}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{12, 36}, {0.018223342952994617`, 
            0.04432691911100661}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {12.000000000000027`, 0.01822334295299466}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{12, 36}, {0.018223342952994617`, 
         0.04432691911100661}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {12.000000000000027`, 0.01822334295299466}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{12.000000000000027`, 0.01822334295299466},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{12, 36}, {0.018223342952994617`, 0.04432691911100661}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9314845741833344`*^9, {3.931484896697771*^9, 3.931484904664631*^9}, {
   3.9314849759917736`*^9, 3.931485064214882*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"b58c46b7-fdaf-5d4f-97c1-1f4ef4918db8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", "9"}], "]"}], ",", " ", "24.69"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", " ", "9"}], "]"}], ",", " ", "24.48"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9314850873922825`*^9, 3.931485137789118*^9}, {
  3.931485200248461*^9, 3.9314852053464375`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"61a27ee9-5c57-b240-9b00-268302e45f9d"],

Cell[BoxData["0.009288799607174325`"], "Output",
 CellChangeTimes->{3.9314851388781624`*^9, 3.9314852060569763`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"517a0a04-3c96-a04d-8b36-ec2c9133a9b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"100", ",", "16"}], "]"}], ",", " ", "80"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.93157740295763*^9, 3.9315774434106445`*^9}, {
  3.9315775226684837`*^9, 3.9315775233203335`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"76bd3627-3400-0940-afd2-dfca3eb35c5d"],

Cell[BoxData["0.10564977366685527`"], "Output",
 CellChangeTimes->{3.931577448358988*^9, 3.9315775240243015`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6aef5863-996f-f34b-a8b4-997d2208ff0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "11.2"}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"100", ",", "16"}], "]"}], ",", " ", 
     RowBox[{"100", "+", "n"}]}], "]"}], "]"}], "-", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"100", ",", "16"}], "]"}], ",", " ", 
     RowBox[{"100", "-", "n"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9315775443560066`*^9, 3.9315775550376472`*^9}, {
  3.9315775907431927`*^9, 3.931577637958788*^9}, {3.931577731068029*^9, 
  3.931577811621311*^9}, {3.9318346751701336`*^9, 
  3.931834676842846*^9}},ExpressionUUID->"c89168fd-fde0-2a4a-acdb-\
2842c8ef6a09"],

Cell[BoxData["11.2`"], "Output",
 CellChangeTimes->{{3.9315776011113873`*^9, 3.9315776385373287`*^9}, {
  3.9315777562567673`*^9, 3.931577812043577*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"563435e7-bb63-f54b-8b04-7b61114c58db"],

Cell[BoxData["0.5160726955538539`"], "Output",
 CellChangeTimes->{{3.9315776011113873`*^9, 3.9315776385373287`*^9}, {
  3.9315777562567673`*^9, 3.9315778120591984`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"08735c3c-dc00-0c40-bfae-bcbe85c3a476"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"3.38", ",", " ", "2.04"}], "]"}], ",", " ", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9316381561029053`*^9, 3.931638253662567*^9}, {
  3.931638433220768*^9, 3.9316384354687576`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"4aaec76d-ccd9-224f-b679-a9a047a3978f"],

Cell[BoxData["0.24937095680007335`"], "Output",
 CellChangeTimes->{{3.9316381851293736`*^9, 3.9316382539711475`*^9}, 
   3.931638435879591*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"0a61f594-3046-a24c-9748-4c0166b4654d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"3.38", ",", " ", "2.04"}], "]"}], ",", " ", "6"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9316382132087383`*^9, 3.9316382626558*^9}, {
  3.931638420834305*^9, 3.931638429030075*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"5123d7ec-9025-e847-b3a9-d049e54be341"],

Cell[BoxData["0.9004838968805465`"], "Output",
 CellChangeTimes->{{3.9316382255273075`*^9, 3.93163826303141*^9}, 
   3.9316384294738617`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"bef4f2b9-54d6-7443-82e7-ebbc6160c39c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3.38", "-", "1.34"}]], "Input",
 CellChangeTimes->{{3.931638364548004*^9, 3.931638426105644*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e0608a8f-3d0e-c648-9430-a421b2279379"],

Cell[BoxData["2.04`"], "Output",
 CellChangeTimes->{{3.9316384158771973`*^9, 3.931638426470627*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"48b1ee6c-b356-6448-a9fe-1d3494be15d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5.08", ",", " ", 
       RowBox[{"0.0025", "^", "0.5"}]}], "]"}], ",", "5"}], "]"}], "^", "3"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.9316385605122967`*^9, 3.9316386204439926`*^9}, {
  3.931638808711811*^9, 3.9316389066486015`*^9}, {3.931638959667101*^9, 
  3.9316390084156837`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"917232f2-35cf-f245-9cb3-b48e0530993a"],

Cell[BoxData["0.000164560210918798`"], "Output",
 CellChangeTimes->{{3.931638591290554*^9, 3.93163862080241*^9}, {
  3.9316388207871876`*^9, 3.9316389071179047`*^9}, {3.931638964561596*^9, 
  3.9316390087912903`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"2330f572-8438-6940-a2be-8c05635ae594"]
}, Open  ]],

Cell["\<\
Quantile[dist, area] is calculating to the left of x,  in which the dist \
percentage == area size\
\>", "Text",
 CellChangeTimes->{{3.931644458277422*^9, 3.93164454193964*^9}, {
  3.931644583882593*^9, 3.9316446241177177`*^9}, {3.9316446885106106`*^9, 
  3.9316447986958294`*^9}, {3.931644963979294*^9, 3.9316450858028927`*^9}, {
  3.9316451321219864`*^9, 3.9316451363866024`*^9}, {3.931645178771366*^9, 
  3.93164517920681*^9}, {3.9316452177851086`*^9, 3.9316452377818527`*^9}, {
  3.9316453223091297`*^9, 3.9316454193525257`*^9}, {3.931645450283676*^9, 
  3.9316454831318645`*^9}, {3.931669968687599*^9, 
  3.9316700104088535`*^9}},ExpressionUUID->"c4e8f823-74d7-b34f-afd7-\
886476dc1421"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"NormalDistribution", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"quantile", "=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"dist", ",", " ", "0.25"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.93164382831908*^9, 3.9316438831362104`*^9}, {
   3.931644039266237*^9, 3.931644096919729*^9}, {3.931644243792963*^9, 
   3.9316443365290346`*^9}, {3.931644397093797*^9, 3.931644423212799*^9}, {
   3.931644638005043*^9, 3.9316446731082525`*^9}, {3.9316490836098394`*^9, 
   3.9316490843298388`*^9}, 
   3.9318346508028126`*^9},ExpressionUUID->"522c8616-a9fe-6d4c-8986-\
331e1a3010a8"],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"0", ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{{3.931643866760502*^9, 3.931643877067768*^9}, 
   3.9316440411251698`*^9, {3.9316440751952133`*^9, 3.9316440974195805`*^9}, {
   3.931644273129751*^9, 3.931644337013315*^9}, {3.931644399124523*^9, 
   3.9316444235406723`*^9}, {3.9316446400201893`*^9, 3.931644673451679*^9}, 
   3.931649084829376*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"4da79497-6300-c94d-aa43-6cb549034c57"],

Cell[BoxData[
 RowBox[{"-", "0.6744897501960818`"}]], "Output",
 CellChangeTimes->{{3.931643866760502*^9, 3.931643877067768*^9}, 
   3.9316440411251698`*^9, {3.9316440751952133`*^9, 3.9316440974195805`*^9}, {
   3.931644273129751*^9, 3.931644337013315*^9}, {3.931644399124523*^9, 
   3.9316444235406723`*^9}, {3.9316446400201893`*^9, 3.931644673451679*^9}, 
   3.931649084845024*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"f2a46130-32e5-194e-bc0d-42562e9a05c0"]
}, Open  ]],

Cell["\<\
mean=np
sd=sqrt(np(1-p))\
\>", "Text",
 CellChangeTimes->{{3.9316487893038883`*^9, 3.9316488264874477`*^9}, {
  3.9316488635346584`*^9, 
  3.9316488729850445`*^9}},ExpressionUUID->"a1b0f35f-eb9a-f64e-9887-\
45d66bf89862"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"20", ",", " ", "4"}], "]"}], ",", " ", "20.5"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"20", ",", " ", "4"}], "]"}], ",", " ", "19.5"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.931645680506954*^9, 3.9316457534615135`*^9}, {
  3.9316464184431114`*^9, 3.931646449612438*^9}, {3.931647821624031*^9, 
  3.931647822530775*^9}, {3.9316488971969566`*^9, 3.9316489828588314`*^9}, {
  3.9316490554428368`*^9, 3.9316490734006233`*^9}, {3.9316493041814156`*^9, 
  3.9316493072466946`*^9}, {3.931649478326332*^9, 
  3.931649534896715*^9}},ExpressionUUID->"37683469-154f-744c-a951-\
de350cc0bef7"],

Cell[BoxData["0.09947644966022584`"], "Output",
 CellChangeTimes->{
  3.931647827942621*^9, {3.9316488979467373`*^9, 3.9316489871603966`*^9}, 
   3.9316490588048096`*^9, 3.93164909031995*^9, 3.9316493075985985`*^9, 
   3.931649479083496*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"4574c946-d214-8844-bf49-e5734d4eca07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"200", ",", " ", 
       RowBox[{"160", "^", "0.5"}]}], "]"}], ",", " ", "200.5"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9316494180315113`*^9, 3.9316494307623367`*^9}, {
  3.9316495334577274`*^9, 3.9316495539773903`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"2db098c7-1cbc-2741-a9d1-d2d6302bc04a"],

Cell[BoxData["0.4842345274360602`"], "Output",
 CellChangeTimes->{3.9316494317393856`*^9, 3.931649555120825*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"e799acc7-3e62-e847-a330-8d0e8f7a5cae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"100", "*", "0.025", "*", "0.975"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"2.5", ",", " ", 
      RowBox[{"n", "^", "0.5"}]}], "]"}], ",", " ", "3.5"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.931657120776731*^9, 3.931657123057401*^9}, {
  3.9316571980334673`*^9, 3.931657221869125*^9}, {3.931657273354646*^9, 
  3.931657396406574*^9}, {3.931834661406351*^9, 3.9318346643461285`*^9}},
 NumberMarks->False,ExpressionUUID->"1f2ef2fb-2a00-cb4c-a947-b1ba821cd646"],

Cell[BoxData["2.4375`"], "Output",
 CellChangeTimes->{{3.931657111278944*^9, 3.931657128134321*^9}, {
  3.9316573906202145`*^9, 3.931657396928631*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"2d5d7884-ad37-c148-b071-ec88d38c7e47"],

Cell[BoxData["0.7390803048331923`"], "Output",
 CellChangeTimes->{{3.931657111278944*^9, 3.931657128134321*^9}, {
  3.9316573906202145`*^9, 3.93165739693359*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"3ec55cdb-3da8-ae4b-bedb-6ef998da3509"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"1", "-", "0.6", "-", "0.025"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{
      RowBox[{"100", " ", "p"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"100", " ", "p", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}]}], ")"}], "^", "0.5"}]}], "]"}], ",",
     " ", "40"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9316575668627663`*^9, 3.931657567738659*^9}, {
  3.931657604383545*^9, 3.931657623490595*^9}, {3.931657663938535*^9, 
  3.9316577140469284`*^9}, {3.931657760216444*^9, 3.931657760480646*^9}, {
  3.931669630101288*^9, 3.931669636588108*^9}, {3.931834666176676*^9, 
  3.931834667106226*^9}},ExpressionUUID->"f2805759-f423-f245-b9be-\
30eca8918678"],

Cell[BoxData["0.375`"], "Output",
 CellChangeTimes->{3.931669661583889*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"447bf402-fd3f-064d-ae8c-0dc9e510b178"],

Cell[BoxData["0.07211880009499753`"], "Output",
 CellChangeTimes->{3.9316696615913315`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"ed251043-03dd-6948-92d7-c381e15814b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", " ", "=", " ", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"x", "^", "2"}]}]}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"f", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9325278413384438`*^9, 3.9325280092391357`*^9}, {
  3.9325280394384594`*^9, 3.9325280684043903`*^9}, {3.9325281151488743`*^9, 
  3.932528115555025*^9}, {3.9325282513452168`*^9, 3.9325282893673973`*^9}, {
  3.9325283357782803`*^9, 3.932528380684305*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"ffdd8ba7-6a94-da43-83b0-55901b1cac23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "x"}], "+", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.9325278526581936`*^9, 3.932527934629652*^9}, {
   3.932527965796118*^9, 3.9325280038652115`*^9}, 3.9325280421252823`*^9, 
   3.9325282631859417`*^9, 3.9325282932100735`*^9, {3.932528339761532*^9, 
   3.9325283671404247`*^9}, 3.93252854448831*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"34df04b0-ac0d-7942-830a-54fe58874f28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.932616117883545*^9, 
  3.9326161737881355`*^9}},ExpressionUUID->"884a8e5b-5e58-9b41-aaf0-\
ec1e72e59427"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    GraphicsBox[
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[
           {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
            Opacity[1.], LineBox[CompressedData["
1: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
79hk
             "]]},
           Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1: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
79hk
                 "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{(-2) Pi, 2 Pi}, {-36.13614985689592, 
                39.28049566026931}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{(-2) Pi, 2 Pi}, {-36.13614985689592, 
               39.28049566026931}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
79hk
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{(-2) Pi, 2 Pi}, {-36.13614985689592, 
            39.28049566026931}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     BaseStyle->{FontFamily -> "Arial"},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->
      NCache[{{(-2) Pi, 2 Pi}, {-36.13614985689592, 
        39.28049566026931}}, {{-6.283185307179586, 
       6.283185307179586}, {-36.13614985689592, 39.28049566026931}}],
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}], "}"}], ",", 
   RowBox[{"{", "\[Placeholder]", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.932616122804229*^9, 3.932616163493452*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"d47280b7-67ea-ce42-a2fd-f3f9aadf7620"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{884.25, 765.75},
WindowMargins->{{Automatic, -23.25}, {Automatic, 0}},
WindowStatusArea->"",
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.8 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"c7a71f3f-3948-ac42-a61b-00895376dba5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 191, 3, 56, "Section",ExpressionUUID->"fe546ddc-304a-d14e-83ae-f923d883f19a"],
Cell[CellGroupData[{
Cell[796, 29, 3379, 77, 215, "Input",ExpressionUUID->"25c9498f-4174-e247-b16e-00529d7a28e9"],
Cell[4178, 108, 810, 15, 47, "Output",ExpressionUUID->"f56f6041-aa13-0f43-9b21-2b0dfb7fe4ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5025, 128, 1490, 47, 187, "Input",ExpressionUUID->"61e57f94-c5a2-ef42-b729-e0fec96fe7d0"],
Cell[6518, 177, 10699, 268, 145, "Print",ExpressionUUID->"ff43c8a7-4880-cf4e-9138-36f984944432"],
Cell[17220, 447, 496, 12, 59, "Output",ExpressionUUID->"33002637-4d1f-6e40-999e-9fd91f293b42"],
Cell[17719, 461, 362, 5, 31, "Output",ExpressionUUID->"92d5710e-901b-0041-a901-75b13785dbfb"],
Cell[18084, 468, 25268, 437, 50, "Output",ExpressionUUID->"60e3e30f-3b3d-4645-a155-4e0ffb7da1c5"],
Cell[43355, 907, 362, 5, 31, "Output",ExpressionUUID->"26a26c17-2224-2e44-baa2-4d7cd3b9ae2e"]
}, Closed]],
Cell[CellGroupData[{
Cell[43754, 917, 788, 25, 98, "Input",ExpressionUUID->"d2e6dcc2-125f-2247-b435-445f9d713d0a"],
Cell[44545, 944, 24088, 591, 220, "Print",ExpressionUUID->"059cdaa0-b6d9-8244-9a24-ed26b8b57552"],
Cell[68636, 1537, 249, 5, 31, "Output",ExpressionUUID->"9af22b5c-618d-e047-b504-9939ead8889e"],
Cell[68888, 1544, 34820, 596, 57, "Output",ExpressionUUID->"225a1452-3c6a-f648-ac97-a812058ffc74"]
}, Closed]],
Cell[CellGroupData[{
Cell[103745, 2145, 953, 31, 96, "Input",ExpressionUUID->"2c93dca3-bc37-bd4a-ab83-bff6ad54b1d3"],
Cell[104701, 2178, 20789, 518, 211, "Print",ExpressionUUID->"c6321a38-c0b1-4347-83e6-3518fe5b90e7"],
Cell[125493, 2698, 369, 11, 48, "Output",ExpressionUUID->"4ddc897c-4fd0-244b-b74c-7e56793739f7"],
Cell[125865, 2711, 48909, 839, 97, "Output",ExpressionUUID->"bc462831-15f4-eb45-a9ad-a2cb9a1c2673"]
}, Closed]],
Cell[CellGroupData[{
Cell[174811, 3555, 2095, 52, 143, "Input",ExpressionUUID->"1ad251e7-0ac7-ab4f-b034-142e3383ad4d"],
Cell[176909, 3609, 38235, 889, 311, "Print",ExpressionUUID->"7a97d6c2-13f9-a146-b3de-9247e660d1f5"],
Cell[215147, 4500, 761, 14, 33, "Output",ExpressionUUID->"fc1f3307-7b0c-9043-9a81-ca281c8f9d1f"],
Cell[215911, 4516, 619, 8, 31, "Output",ExpressionUUID->"5ce86296-3b40-6c4f-a4b2-66619757c67f"]
}, Closed]],
Cell[CellGroupData[{
Cell[216567, 4529, 3972, 106, 167, "Input",ExpressionUUID->"83d302dd-a69b-ec41-911d-8dd5173dd5fd"],
Cell[220542, 4637, 2401, 48, 381, "Output",ExpressionUUID->"03eb30ac-6639-5e46-ac54-3d79eeb18336"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222980, 4690, 216, 2, 32, "WolframAlphaLong",ExpressionUUID->"82a54a90-274c-534a-9e18-c3bb9beb84f6"],
Cell[223199, 4694, 112826, 2400, 2716, "Print",ExpressionUUID->"843b1ccb-33ff-da45-9fe8-9018bb8e27df"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[336074, 7100, 155, 3, 56, "Title",ExpressionUUID->"3f82800e-aff7-7147-8f3b-0c72b943a643"],
Cell[CellGroupData[{
Cell[336254, 7107, 157, 3, 56, "Section",ExpressionUUID->"e98c8819-7aef-d64b-9d97-7f6cab128c23"],
Cell[CellGroupData[{
Cell[336436, 7114, 216, 4, 27, "Subsection",ExpressionUUID->"4b3e98ed-6b77-9c4f-a9f2-9b1648ab791b"],
Cell[336655, 7120, 159, 3, 27, "Text",ExpressionUUID->"37d8e12f-4749-e24e-b7b5-7326f6810e28"],
Cell[336817, 7125, 172, 3, 22, "Item",ExpressionUUID->"7cd6e70f-44e6-f949-9417-1ed6bafba807"],
Cell[336992, 7130, 250, 7, 31, "DisplayFormulaNumbered",ExpressionUUID->"292f817f-ac73-b045-b9bb-6b4472f66589"],
Cell[CellGroupData[{
Cell[337267, 7141, 893, 20, 66, "Code",ExpressionUUID->"c05d3e8c-a2ba-5949-a2a7-f1c658d46de0"],
Cell[338163, 7163, 844, 14, 70, "Output",ExpressionUUID->"a06ac9f6-7e4a-d347-8326-6e9144e4a0b5"],
Cell[339010, 7179, 974, 18, 70, "Output",ExpressionUUID->"a7c0b5ab-f70a-cf45-ae0f-56952d17584c"],
Cell[339987, 7199, 23740, 432, 70, "Output",ExpressionUUID->"d219c07d-7523-7d42-aa05-1b5d4a96e461"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[363788, 7638, 159, 3, 46, "Section",ExpressionUUID->"4a7226d4-de2a-8842-b064-eaf926c35d2a"],
Cell[CellGroupData[{
Cell[363972, 7645, 237, 4, 27, "Subsection",ExpressionUUID->"d485f1d2-7778-8242-8fea-c02a320cf8f5"],
Cell[CellGroupData[{
Cell[364234, 7653, 760, 16, 52, "Code",ExpressionUUID->"411a8c7d-b7b6-9849-8513-317152c092ae"],
Cell[364997, 7671, 757, 15, 70, "Output",ExpressionUUID->"ccd9c07f-6f4d-1141-8f91-7d44305ed024"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365791, 7691, 16413, 401, 55, "WolframAlphaShortInput",ExpressionUUID->"fb910e91-3ea5-ed4f-8d42-705b84a6c4b7"],
Cell[382207, 8094, 168, 2, 31, "Output",ExpressionUUID->"45ea58af-6bdd-b340-b873-4461ac9375f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382412, 8101, 630, 15, 31, "Input",ExpressionUUID->"5ba3a521-07bc-fd4a-80ac-8f1f55729b10"],
Cell[383045, 8118, 169, 2, 31, "Output",ExpressionUUID->"436a3a03-fd62-9647-9835-da71f43ff48f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383251, 8125, 369, 9, 31, "Input",ExpressionUUID->"47180540-f3ee-074f-9224-37888d4d1563"],
Cell[383623, 8136, 191, 2, 31, "Output",ExpressionUUID->"f9a98922-b563-7446-8cfc-2ed68b84e9c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383851, 8143, 813, 22, 71, "Input",ExpressionUUID->"f8b2926f-5c2a-1d4a-9aef-eb9f2655adb0"],
Cell[384667, 8167, 416, 10, 60, "Output",ExpressionUUID->"df63be18-9261-7b4e-ac2c-aa68ab0b6964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385120, 8182, 470, 11, 31, "Input",ExpressionUUID->"9375fa44-ad92-bb4d-9bdb-5b5e51ca57b4"],
Cell[385593, 8195, 21883, 407, 189, "Output",ExpressionUUID->"b58c46b7-fdaf-5d4f-97c1-1f4ef4918db8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407513, 8607, 565, 14, 31, "Input",ExpressionUUID->"61a27ee9-5c57-b240-9b00-268302e45f9d"],
Cell[408081, 8623, 195, 2, 31, "Output",ExpressionUUID->"517a0a04-3c96-a04d-8b36-ec2c9133a9b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408313, 8630, 391, 9, 31, "Input",ExpressionUUID->"76bd3627-3400-0940-afd2-dfca3eb35c5d"],
Cell[408707, 8641, 191, 2, 31, "Output",ExpressionUUID->"6aef5863-996f-f34b-a8b4-997d2208ff0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408935, 8648, 814, 21, 47, "Input",ExpressionUUID->"c89168fd-fde0-2a4a-acdb-2842c8ef6a09"],
Cell[409752, 8671, 232, 3, 31, "Output",ExpressionUUID->"563435e7-bb63-f54b-8b04-7b61114c58db"],
Cell[409987, 8676, 248, 3, 31, "Output",ExpressionUUID->"08735c3c-dc00-0c40-bfae-bcbe85c3a476"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410272, 8684, 398, 9, 31, "Input",ExpressionUUID->"4aaec76d-ccd9-224f-b679-a9a047a3978f"],
Cell[410673, 8695, 222, 3, 31, "Output",ExpressionUUID->"0a61f594-3046-a24c-9748-4c0166b4654d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410932, 8703, 394, 9, 31, "Input",ExpressionUUID->"5123d7ec-9025-e847-b3a9-d049e54be341"],
Cell[411329, 8714, 220, 3, 31, "Output",ExpressionUUID->"bef4f2b9-54d6-7443-82e7-ebbc6160c39c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411586, 8722, 200, 3, 31, "Input",ExpressionUUID->"e0608a8f-3d0e-c648-9430-a421b2279379"],
Cell[411789, 8727, 179, 2, 31, "Output",ExpressionUUID->"48b1ee6c-b356-6448-a9fe-1d3494be15d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412005, 8734, 505, 12, 31, "Input",ExpressionUUID->"917232f2-35cf-f245-9cb3-b48e0530993a"],
Cell[412513, 8748, 296, 4, 31, "Output",ExpressionUUID->"2330f572-8438-6940-a2be-8c05635ae594"]
}, Open  ]],
Cell[412824, 8755, 702, 12, 27, "Text",ExpressionUUID->"c4e8f823-74d7-b34f-afd7-886476dc1421"],
Cell[CellGroupData[{
Cell[413551, 8771, 646, 13, 47, "Input",ExpressionUUID->"522c8616-a9fe-6d4c-8986-331e1a3010a8"],
Cell[414200, 8786, 498, 9, 31, "Output",ExpressionUUID->"4da79497-6300-c94d-aa43-6cb549034c57"],
Cell[414701, 8797, 466, 8, 31, "Output",ExpressionUUID->"f2a46130-32e5-194e-bc0d-42562e9a05c0"]
}, Open  ]],
Cell[415182, 8808, 231, 7, 45, "Text",ExpressionUUID->"a1b0f35f-eb9a-f64e-9887-45d66bf89862"],
Cell[CellGroupData[{
Cell[415438, 8819, 800, 18, 31, "Input",ExpressionUUID->"37683469-154f-744c-a951-de350cc0bef7"],
Cell[416241, 8839, 324, 6, 31, "Output",ExpressionUUID->"4574c946-d214-8844-bf49-e5734d4eca07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416602, 8850, 466, 12, 31, "Input",ExpressionUUID->"2db098c7-1cbc-2741-a9d1-d2d6302bc04a"],
Cell[417071, 8864, 195, 3, 31, "Output",ExpressionUUID->"e799acc7-3e62-e847-a330-8d0e8f7a5cae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417303, 8872, 639, 15, 47, "Input",ExpressionUUID->"1f2ef2fb-2a00-cb4c-a947-b1ba821cd646"],
Cell[417945, 8889, 234, 4, 31, "Output",ExpressionUUID->"2d5d7884-ad37-c148-b071-ec88d38c7e47"],
Cell[418182, 8895, 245, 4, 31, "Output",ExpressionUUID->"3ec55cdb-3da8-ae4b-bedb-6ef998da3509"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418464, 8904, 872, 22, 47, "Input",ExpressionUUID->"f2805759-f423-f245-b9be-30eca8918678"],
Cell[419339, 8928, 158, 3, 31, "Output",ExpressionUUID->"447bf402-fd3f-064d-ae8c-0dc9e510b178"],
Cell[419500, 8933, 174, 3, 31, "Output",ExpressionUUID->"ed251043-03dd-6948-92d7-c381e15814b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419711, 8941, 629, 13, 47, "Input",ExpressionUUID->"ffdd8ba7-6a94-da43-83b0-55901b1cac23"],
Cell[420343, 8956, 451, 8, 31, "Output",ExpressionUUID->"34df04b0-ac0d-7942-830a-54fe58874f28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420831, 8969, 154, 3, 31, "Input",ExpressionUUID->"884a8e5b-5e58-9b41-aaf0-ec1e72e59427"],
Cell[420988, 8974, 126096, 2112, 114, "Output",ExpressionUUID->"d47280b7-67ea-ce42-a2fd-f3f9aadf7620"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

