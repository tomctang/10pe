(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    957528,      18107]
NotebookOptionsPosition[    945714,      17907]
NotebookOutlinePosition[    946289,      17927]
CellTagsIndexPosition[    946246,      17924]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Tan", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.942798158314598*^9, 3.942798200628311*^9}, {
  3.9427982757184544`*^9, 3.942798341611492*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"f5dcb1d6-aa3f-3047-a473-d1ddea6a2732"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"x", "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "3"], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["x", "5"]}], "15"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "6"],
    SeriesData[$CellContext`x, 0, {}, 1, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[1, 3], 0, 
    Rational[2, 15]}, 1, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.942798290483879*^9, 3.9427982950307217`*^9}, {
  3.942798328611286*^9, 3.9427983422831306`*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"53a36821-c8bb-0147-99f4-6107e6778df3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "revolution"}], "*)"}], "\n", 
  RowBox[{"RevolutionPlot3D", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"3", "x"}], "-", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"RevolutionAxis", "->", "\"\<x\>\""}], ",", 
    RowBox[{"AspectRatio", "->", "1"}], ",", " ", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.5", ",", " ", "White"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9426193783157253`*^9, 3.9426193942368526`*^9}, {
  3.9426194259782085`*^9, 3.9426194747736206`*^9}, {3.9426195261174316`*^9, 
  3.942619549262991*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"4f3ae16d-172c-2f4c-9832-a9a1b6f22595"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
klZt1yE8wW2yumxe26MnUQEW7TqE4nb+ZfKpXtfComIftusQipt/h/yQVbbh
UUkN7TqE4tb/84KaNx0iovy/t+sQituCyIHe3y9FRilYt+sQitsS+ZCfId1e
RDnvbtchFLeh0QW+Fruio0x6tusQipuKkpKbwWcu6rNOuw6huN3B8QbYePPB
8QZWMvFWguMNZDHxFojjDRgz8XYbxxuYx8TbBxxvgI03DRxvwI6JNwMcb4CN
Nwscb4CNNzMcb2ALE2+7cLyBFibehuF4A2y8LcXxBoKYeJuB+Q1YMfz2BfMb
iGX4bQ7mNxDA8BuH+Q1kMPwWiPkN+DD8tg3zG1jP8JsS5jeYwvCbN+Y3OJnh
NwnMbzCH4bdnmN+gAcNvcpjf4GyG3zpifoPjGH6bifkNejL8JtZTMI6ppztx
PQWzmHo6B9dTsJSpp99wPQU7mHr6GtdTGPzvegrd/l1PYei/6ynsx9RTD1xP
Ycu/6ylcydTTI7ieQiumni7G9RSeZOqpGa6nMJ2pp+pYv4HjjH6Tw/oNvGf0
2y2s30Awo9+WY/0G1jP67QDWbzAt8L/6rR/Wb3AOo9/GYf0GWxP/q9/mYP0G
S+b9V7/FYf0GZzD6LRnrN7iR0W/zsX6D9xj9poL1G6zp+1/9NgXrN6jF6Dc3
3C8AjukXbHG/APYw/YIl7heANtMv3ML9AtjB9Aujcb8Akph+IQX3CyCU6RdC
cb8AbZl+wQD3C/A50y98xf0CjGD6hXu4X4AaTL8QhfsFWL/0v/3CZ9wvwKdM
vyCZ194vwLlMv7AK96eglOlPAe5PQTzTn47E/SnYzPSndbg/BbFMf/oa96fg
HNOfHsD9KTBj+tMU3J+C8Ux/Og/3p2AN05/+wv0pcGf6Ux73p6DZ7L/96TXc
n4Iypj/NwP0peMf0pw9wfwruMv1ps/ahOOdXR43YeYip/EVhHmLEzkOOrX4h
zEOM2HlI6bZFb/x8Hhix85DFTjsa0kIeGrHzkL5d04R5iBE7D1G78UqYhxix
8xClVQ+FeYgROw9pkji0Qn9CmBE7D1mf0SMs69QzI3YeYrNtywq7T+FG7Dxk
2ySZ2RslI4zYeUiOmq1Ko2akEZmH8JrJ14y9fwPTRqMVO13ecOeyXylKhRYB
sp7t/tZo3Sff6B2F58fqLy8GCeblIyUkasDa6pEWpSlfOKnsV8v8b9bQ9e76
ib9ibYq5hN5Oo5Z5VIAnvWs8M8IagPSG0m3ZJanclk3x3331G+n6G7dJ1Q9i
KrgLSseluknXgqsZ9eVhDm1gdceI2qmqmZz9yoErSuJa6XqXOu/Y2OBqzkpy
5ie74How/VOrlrG3FPxeu6amc2Q2V2NTrx60WhKS9ScqucldJ/zhfp537aGe
3QQi9CS/hTnIwu0NgXsc9/3gNpYt0l+gLQ3JetGHLlsHHaznFC0L/Q5GtoIR
3tLHNIwVoM+KeUaPm3K5c7I++0oSZCBZ1/7l032mbyNXpDhkdkCghOgXZegY
lBQ+ZEUelxoZWNh5nhxdX7EpNHWbezO3ev2P1H4/JWHvdr+owIULgsb0v5vP
XbbX8joXLk/Xzew+Gw2wbOWWOB+/8FVWGs6ykn0f5tAZdjjwuaN9TgH3c1fL
r1sdFen697k9vc3kJHiLYG6gRm8ZKOUhd9shows02n5+dbbCL+7SMwen5YuU
6HrvPubGzUhP7583R9ZDTRZGRcnv0TDuBhN37zd9NLiIU0teHTj4+N/4yVMw
Wn4C1cWj63Q7C3xP9n/jLG71vizJF3e/Mr2+uxyNqzCtjNNOTjnc4fkddWr8
8micLGmNsy/oUs09SWoNal2RS+NBy33AN35sPWd8163KbGEh9Xut1+Kv47Y0
c+kDpZrzbEqo3/35nBGjO0nwG9YWu1mXl1H/+t76PnrUU0neaXKizuCOldSP
+sMzN/QfJ81/vNbnTKpbFSB+yfrtMi//sgxvfnXZKKf0akDw777N6eOvElk+
BjiM6NOvFhCcVyyXMZQdKs+fcKxef8b0DyB4HvgccrLvYgV+5zaPcB/HOlof
dStHPRN0mKe0n7ugywhuo8aujLPeqsgbjhhhsPBgPc07cL9mWglXyE3dnrj1
e3YKxa1w2fCc/Tq1XPkXiZifJWejCW7vhvS80junkftt0zj+pMnFaILbJIPN
nie82jinGsNKy7Ar0QQ392Etw3okSfLvpa1PvY67Hk1wCzE1O+5yR5qHUi5O
l/ffjCa4tQRN0v60SJbXN15p8Lrr7WiCW52u8YqiHDn+Q1VS1pFj/tEEt68v
ve5wCAefRcvL9xUERBPc1hg9/HMpVJF/df90crje3WiC28fyKaZBEsp8ytar
uww23IsmuEn9HjhG0P0Pc29+jUJ8T3ArWbuucaNRB379hijdGefvRxPc7ha1
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
Z4wPYPE5juMHxDLx8wrHD0hm4mcyjh/QyMRPMo4fwMaPKo4f8JmJn/s4fkBH
Jn5u4PgBAUz8+OH4AXJM/Hjh+AE/mPi5huMHvGfi5yaOH3CIiZ9NOL+AHZNf
rph/QDrDP6mYf8Avhn/yMf+A+Qz/dMT8A+IZ/lmM+QeoM/zTB/MPPMXwzzzM
P/AWwz8JmH/gDIZ/fmP+gV8Z/qnD/ANZ/hmN+Qf6MfzjgPkZdGX4+QWuX8CS
qV8Dcf0CTUz96o7rF2j7d/2Cmkz9apNrr18w7N/1C2oy9esXrl9wIFO/+uH6
Bf3/Xb8gx9Svh7h+QQumfn3B9QsqD/hv/RLrOxiwctWb/1vfE7D+Ad8Z/aOL
9Q+4yuifxVj/gJGM/nHH+gdKMvqnGesf2IPRP75Y/8BURv8sw/oHZjD6ZxTW
P9CO0T+NWP9AeUb/7MX6B+oz+icE6x/YtPa/+ucd1oegA6MPVbF+BhWMfs7D
+hlYMPr5N9bPYBejn79i/Qz0GP2chfUzWM/oZx7rZ/iN0c+TsH6Gqxj9fAbr
Z9iJ0c8JWD9DFUY/O2L9DGMZ/TwY62eoxejnx7i/AF2Y/mIq7suADdOXteC+
DAxm+rLruC8DU5i+7Cnuy8BIpi8LxX0ZmMP0ZZtwXwZOMH2Zikl7XwZimL7s
N+7LwCSmL1Ma396XAQWmL9PBfRkwY/qy47j/ArlM/xWD+1aQLfatpC823jbn
ZHZ2Ctdjw5tYYS5I7kvcubHWRKJ3OhdewU0Q7jeR+xJ2yoc0ptV/5zxMZkoJ
95vofYnssRO6hOZwWw6Z7xXuN5H7Evac/tgamMt1ilC9KtxvIvclNh99LXX0
4U/ud3DKCuF+E7kv4WzURWqEbD53LMnLWrjfRO5LpF7fJLtuZgGXZyX3UbgX
Ru5L+Eb5uO9wKeT2q/Hqwv0mcl/i+qxelVk+v7jJ32LthftN9D1FZPBPYV5s
7dgzQJgfk/MeVDasF+4LbtTc6y/cHyTn1TetqhfuC8JTmbrC/UFy3redH1tO
sK3j0my+PwIWLfQ+km3ARPs73g1c/rRPR4T7g+S898d0eiDcF0ze5NZduJdE
zuta25gs3Bfs+vbwYeH+IDmv2hRLr5wxbdxN2Se6wr0kcl4V5dENwn3BRsO1
jsL9QXLewx8ezdKaIMkXnF5iItwfpHPycJm5wnsFfeNxX7e7vKHnTbHIPizc
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
qULcgpNi3BI752M7uQ+MnXuxnZwyY2f16HY7OXPRTu9+McldzfOBBPPf/9b/
t/6/9f+t/2/9f+v/W///b33mWPvLMW2lIO3aod628mlcZNG34Seai8DeO8dG
GZpXg42qP2rA6FvRJkaKPabZ1oDU0MxznvfrwNegusTYg3ei7c8ejoxrrAej
eL36grYm8Pua9ZECzQfRZhqRm3t+a6brphst+wfJF3HzL6jWfm1uADPtYodf
05GAwUV314NlwdFfzj9/nKouAcn6CkXVRbLNJdzRUxHa/Tq2gG2bNmXPMZeC
qdIyfNW1kOiR2zS2J9+ThNe39vT6s18GftQZHlZT8yjadg03RbO7NPywg596
874cHH1s7dvKx5Vc0OdcmbmrpWDjvg01pskK8FDo/tR3r6u42y4n+tzfKw21
jnQPaGhTgi4vo+Y7uDyNnm7Y3ebhBzm4+GS0pb+OClwYmWHmdzAsetXIPruv
FstDN6/1imbmneCnSbufTwuq5VYk3cg66yYHU02Or2jlOsPON3v3z/T8w+0z
Geifukkels1bOXZxchd416X36z62z6NPPqiogU1KUGahfqf7xV3hDpsrn2Yb
R0SvylyzNKRUGRK/fJ9aZ5DpUcC5jRmqGNr0g+LZ2+27ar9Tf7jrIx/HFzRV
UjwjulmsPT22gTNUn21l3rcGEBxejygI3ZnXxnWp+H2uyrEBEBy2dvVIySqS
4GHzZ49fDY2AnGv7lqrJYe7SvI2yT970IW2AnCuzflr990UyvPb0wqWVBhLU
TrtVm/Vv9f/NTejdpKId+JbaOX/7oP41/Zu5wsXlpVsD06iddQWd3zze3Mat
z9fXNnqSSe2Un2Rn7porzXdae7+Ds1YutXO5nteiqb1k+emKys6rp/ykdp5e
sPPS8WUKfE3R+4t/JhZQO1ML/G36LVXkTb+vCrTWKATEzrllatKCnSs2FyzX
DXzLETuH7PhYWo3sVB+dN8klMI0jdn73VPAS7DwSOjBzypNMjtg5IGO8vmCn
urTnWletXI7YWaq+cKRg513J6RXWU35yxE4u5upmwc6F6iauDRMLOGKnQnKP
8YKdH9w/37HVKOSIneOhZ3AG8nuzW/Vj5HdqZ2L9Nm815PdQ2/1bC5sqqZ2r
wyvenUJ+zzEboGrRt4baecvKtmYH8nvUoM5Hqh0bqJ3qYc2bBb/3MD96sqih
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
Loje+4vzv5Q26/7rWvocL+xHbqDoR7LfYHm6/9IDVdzPUzv7usf/jZ9RGGfO
QcSZrP/EfucGi34n84Qel4Ny7aenc+cOzyuQtZKEZP1BS0VZgnEu1618UOHz
Tn/Xj72alzmwsYYbNG5yiv+mZvqc2a88I4yU6zidr46hj+IaAZlLhBmfXHym
8g13Zt9TZVVZaTqv8PFzN8q6UsLdsHGOUn/7d46x9cHuVk/9au7nafuzD/dI
0PVp20OlS7KbuDsOE7Qfd2ykeulguNrCwTmpnLf2RcOhDrK0jqe57p91qr6O
q7+VruoiJUXnG6V550+eNcnl1vFcpAqKZ7KesL56yg/jAu740AkLw9X+rtdV
TA5/eL2Ju/189NK7Gn+fE7DisebFCS3c04zZxQZuklQPKITn3vX1S+POne0c
a/VBka4Hnr1ae3BoM7fB+MGkoAxZOg9ZqlbBTZlQyGV7x7xYu1SJrr/6IWGx
98Mv7ru9zc41U/+um71tk+18X4I/tGlj0VrDv89x2zbmZGGjBP9kbMnrkjoZ
mi8G9V2MJB7lcN63DrZEHymk8cxlpuX2/lnJ9U7/qrP04k+6/niN3bs1iVWc
U4fsU2/3Z9N4i4g+5x69q4ZrfKzW3NHvb76/wDzGZYg8RvYrWeUu219dx9kk
WA1QWZ35V/9gfuMui/xG4kfj8iuXExPbuJrVjtNlD/5d39t/+OkLehK8V4Km
jSf8TePK+CO4aenXxpVa9T12Y3UtXW91kSp9bSDFfx8bH5v5soDGSeK1vAlJ
l6V4blxg81gVxGeiH3XjGpeuNpPh59gtHnHvSQ1dT1DvPbv/Sxm+YndVd+PM
Kqq3ncbW144aJsdbhajnrhvWBAj+arud914xVOCjt83R+BFXR9dVh066uctW
gZ9mARJPd6ijfHWTL1Y6Z1TEdXfdbppakEHxX3UoLrH3yhru2buC5116PaLr
Lb6R8cL6Oc878/v2esQRnJOf2epNuFvP3ck7oBcpkUj9MgzXL26yWL/I/h5y
M7sK+9NaB/WKlkikdXMOrmv8M7GuEfyl94/6cT9Akr8TPyNdZchTup7vOS5T
WOcuT3btP+QpR/D3NrOdMD1Hii80OqmVMzKF+qXY/pCmsH517VnfvJEptH/c
PjV09+1Tsjy4tOzN+MgPFP/ZvWJuj30vxy8btfWmuXUIXffWKrgurFcW7Om1
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
LHFeRPxitrf18YT4FqAzTS7/uHUbxf8pntuAYHFuQ9Y7VLbPecAVcc5D/BI9
clsc0slw5Pjqq0o+UnTe4oHnLfCBOG8h61Z4PgP3iPMZ4perunn+SCeDuO1V
45BOpvifwXNIcIOZQ97Ec0vgIM4tCc6NeH4I9MX5IfHLGPy+CawU3zeR/f22
t88nAZlPEr9cwe+hwGrxPRTB/wOe+4EuzNxvLJ4TgrPinJDg/wzP8cAVZo7X
fU773A+QuR/xi1vm0jczHYuB3Umfmq0XZSj++Xj+Bo4x87fu+e3zOmArzuuI
XzYN7aS5+FoF6NqyWQ/pZIp/DZ6bgXRmbrYTz9nAd3HORvwi9cbWyqT8E5DV
Gq+NdDIg95GuzZuQONs4wojcRyJ+CXbkF357/IN70C3t3KjVf+N/eECX8hFB
+dyalvOz97n9oXh+ihrk9fFOGWd+6Fxkp69tNG5nXvNdMu90BTf/4WELF72/
cag7dcyPmLfVXIFJt0XeJ2Xo/augXnO9pWNquISQupfGHn/nfj+6Deqbb1/H
bZ60VtdwvgK9T3VxTrfoGZPquWM3S5f4aytS++tGR3w2ySvneqoGtnxwLKL2
W2hfO3jLvZprdZwnozWknNo/Xc7C8PrVJi7T5FbGDbk/1P4XRZ0+D01u4dxa
Om50SKij+VWavtys51dJ/u1Tj/s7nJoBsb/k07LjGY+l+OcnPuq++dJCeezj
6Cfz5/eW5Uteu0dd/CJB7Xc43G1zerIs7+xbfTnGXpLa7zA//vmy3GpOQXZd
2TKtL9T+1OUfjLYuq+e4z0dm/piYQu1/b5pi7mKI7JE+EXd5Sza1v5u6972Q
i1J8P4krOiZNOdT+K7esPBdOlONjE5y/yM7No/brrTr5Wc1MnndJlje4ZZxP
7X9T0aTdbZ4S//PdohY5mV80fkJGzzzgOEGZn6yvczIx4xfN60fql30E+3fM
mj1jhdYXqjd0/1R1F+z3myWpkTcxheqHfpJGhoL9406lJV3fkk11wsbXl44L
9mdtTFpm2pRD637RrSH2gv3Bk5U3K8zN44j92XU77gn298w2qfY3zqf1XfNn
XHNXZP/uaT49lGR+ccR+k6pdZoL9w5dN4pIyftH6vmTbhK5C/Myo+lD60bGI
2n+02zIVIX6+V63XGTqk/K9etd7rfQ3Fz09w6cFNuT/U/ldOpf2E+DEPe2ji
mFBH7c/oM7+gB4qf3GEKz3Y6NVP7567rpirET2S0zcz4Ly3U/kHjFT/PQ/Gj
+HuF1aUvEjyxf6Hdn99pKH56lS2fEmsvyRP77TrJG6Wi/D32dlcqyl9qf+uo
IZeHo/x1Pj7qEspfan/knqRH71H+qhe1jOj8tY3av07/hbkpyt+bymnnUP7S
PuWo5acHPMrfpFTvKyh/eWJ//4kfTKVQ/t7t26frHI+//Yi5nUrQT5S/BgrH
D6P8pfbbGWtOm47y18d52BOUv9R+OKDC03p/QNQp2H4vgtqvtt/B99upB1HD
L7Tfi6D2f94T0ZK1OzRKw7n9vijtywych2geVX4adXBt+31Rav9ySbM3FlrP
oxImtN//pPbPfuR399aaiCjZ0e33P6n9p7YrjdJ4+SLqWHD7fU5qv5T5tK5n
PkZHuWa38ye1fy3GH7D4N2H8AYv/M4w/GMDgb4PxByz+hzD+gMW/L8Yf3GPw
X4jxB2MZ/K0x/sCXwd8Cxz+YycT/ERz/IJuJfzsc/yCfif8YHP/Agon/NBz/
8CcT/3Nw/MMoJv4H4viHSkz8m+H4h72Z+A/B/APcGf4ZhvkHBDP8o4b5B5ox
/LMB8w/8zfDPL8w/kGP4JwvzDxzK8I8G5h/oyfDPHMw/cCrDP46Y/0G5zH/5
/xvmf3Cd4f8PmP/hFYb/u2P+h7IM/1/F/A/9Gf4fjfkfLmH4Px7zP4xl+P8x
5n/Yh+F/Kf32+gsUmPq7AtdfUMrU33m4/oJEpv7G4/oLtjP1twbXX/icqb9V
uP7Ce0z9TcH1F+Yy9dcZ11+4kam/L7H+AQGM/pmJ9Q+wYvRPDdY/YC6jf5Zh
/QPmMPpnOtY/IIfRP3FY/4BXjP5pwfoH2DP6JwzrH+Am6h+ik69dXZnnGpjG
RbreThbuPxI9PM7X9+m0J5lc6BoZF+FeIbHfcr5b+k0U95ZpW7SFOKJz++tl
W+ehuFfudW2nEEfkPsNdM0nPHVq5nNy9wYOEe4hE907fkzPcZspPrvb86H7C
PURy3h21ydGKKE/GDupgIcQdOa9mrsPCOyhPZsY6nRfijtyL0DVUKmicWMCZ
7XhkJdxbJHpY0+qE5jqNQk42wXSwcG+R4GPaEn5DGeWVxjLdAiHPqD7cOGNp
MsqrlPk9JghxSvABbbZvhHur7/5fe+8d12P0xg+3C5kZ2aNI9szuHKskW9kZ
yZZNZnZWQiEzyoishDI7d/YmieyVRLSXqH7ndJ3r9v3eD8/39fvj+e/xz/1y
uZ3Pud/XPue6zmnB+og6VsRn3STT+aJudaeJ7TJRx4r4mJ3fZnaA27UmpbYQ
YecQnxtldC4Lu9ar2YjrVrF/6gmzLtTOF3WuU1IObhV1r4hPl6Xvi3/7mce8
jVrbivpHdX0jvnunhdwODmp3O1TYRcSny7OmMcIOTjud8v5l2J96lci5yl5R
Fzu+XnEfUSeL+LjeXkLSW+sofq8adRb1kohPWP7tEGE3N1w8s0XYUcRnnv8W
P2E358ROOCbsKOKT9XPWClF/fC6nb0yI8VcVH78G126J+uNdereu6v1OUvEZ
tTNsovBbli8bXr3H9QDxcWmrf1b4rYqL+z7t5fOnzudKauxEUa+8q45jA1G/
jPi8ubBxlahXbtuiXU1Rv6zmR3ueXBV+buP7amWF30N8evdt2E74uWr3Nh7T
5XqD+BjsLDFU1DfXrmt+pfOJLHX94dbp9ZZxU42VDc0zTEW9M+Jj9n13qPCL
e0rqZ3/keob4GLvc/SD84m27k6u7dvxT9xJeD+rIy71uvjqh7u5IxMda1pHb
uc2aSIYFRCI+wXMgLilmlcDS9+2PVPe/XCEu8fhqGp6ZGRiJ+NxqA3Xn718X
+A5vcSAS8akv684D3zhd8RhxMBLxqS/jGGOb7X3d5x2KRHyGN4c4pkGvM/13
rzgcifjEhUOdemXXXS4vVgRHIj7fr0Gd+sOgDksC5h+JRHzunIC4Jyfu2/Uq
445GIj6n30Lck9ho2qMeDiGRal/A2DaWQn4a2IUMO278VV3vjTafOFLIz3GT
gfMNfiep/rdqG4csbjdZYPVFgQ94HIr4pL85OVfIz4OvDZ6LOBTxMX3Tsp6Q
n99ljYjo+1HX2z+97yTkZ966K91E3w/iM63cwPlCfiY8WG4n8k7E50mCSRK3
s0reUdNUEbciPvWjphsL+bn73qCM6PtBfNpe3/lI1MfXjQl3f7UpW/XvhXXm
DRHyc+1KJbd4HuciPlHe3l5Cfk703KMj8lS1buHejurC/my5Uv+Z6PNAfKq3
a3XRmdufK+MPVBL9Per63s2AriKuqnRu0meRZyA+24eNesX9IttywtND5BmI
T431BabC/pjdrOsk+oEQH3frRqaizp65XT8g+kIQnwMz7zYTcdiYX7FVRV6L
+Gw5tPMC96OsRrU2/UVegvjQVwc9unP7E3eyr77oH0J8FtycdljU5W/s3vGS
6CNBfOa8SC8h7I93+MgyIg9GfK53rZ/C/a7yM2tVE5EHIz421ydtm8P9l55H
rqHoK0J8bB+E6FHuvxwumx4X/TqIz/A7zR8EcP+VYlXcXuSRiM9sm/NdenH/
dW3W9p0ij0R8tp2p1nYe91+1Tft1E/09iM/v1cFhY7j/unhkZmfR34P43FhF
axtz/zXGsvNikXciPi9fWm89yP1X40Yrroi8E/HpZOhtksv919Ni3qtFPxDi
0+SMeQM37r8OvH3TR/QDIT6D1s5dZ8L9V+jkMWYiz1bjc/uWdZ9w/0X83k8U
eSri0wTwIVp8WgM+RItPf8CHaPGZBvgQLT6bAR+ixScL8CFafBjgQ7T4xAA+
RIuPDeBDtPhYAT5Ei09fwIdo8RkG+BAtPtagX8RPo19VQb8I0+jXYtAvUkWj
X1tBv8hWjX5VBf0iFTX6NRn0iyga/doP+kVcNfrlA/pFamn0qyPoF3mp0S8P
0C+6SaNfs0C/6EaNfl0F/aJ5Gv3aD/aZNNHY58dgn0moxj5XAftMDmnscxrY
Z/pIY59LgH2mhRr7PBfsM12gsc/uYJ/pZI19jgb7TPP/bp/pA419bgP2mVpr
7HMB2Gd68+/2mZ7W2Gfp38nuziXW/MW/01MhKyf/xb/TNaYmUX/x77RvMbuI
v/h3OnN3761/8e909beIyL/4d7rbw7T/X/w7tXrSYeBf/DsdNKLVqL/4d3py
WILnX/w73Xr80M2/+HfqvqFt9H/69zyID0mgJj7cCfEhWaWJD8dDfEhMNfHh
GIgPaTFNfBgF8SH11sSHHyA+pNaa+NAc4kO6RBMf9of4kJpq4kMTiA9paU18
eB/iQ7pAEx+aQ3xI12niQ1OID+lZTXzYE/ILclWTX2yH/IJs0uQXdSC/IBaa
/CIW8gtCNfmF4cWi/IKM1OQXAyG/IF6a/OIQ5Bekrya/cIb8gozX5BdPIL8g
IzX5xVTIL+gGTX5xBfILulKTX6yA/IJO0eQXdyA/Jec1+el4yE9JqCY/3QD5
KXHW5KdzID8lxTX56U3IT4mBJj91g/yUZGjy012Qn5JWmvy0B+SnpJsmP+0P
+Snpq8lPHSE/JXqa/HQu5KekjiY/vQr5KYmR+SnOv/Jc65nJXvHs47gptUQ/
B85/FOwrsUlyXwnpbzetMg47l8zenmy3ROzT4jy9dsaUCg79wso7Thgm+j9w
noNhX4lVlPtKSDfPvFFp/oU0Vn/AoyFinxbnc79x/NiZo/NY/eSwJqJ/BX+3
M+w/svZy/xHpsT3Htd7gWshatVrdr93tfFXvMtMPTC97qZDpHHCPEP0u+Ltn
Yf9RaS/3H5H+uAadKur2ah9fnDm88R/+Rgc1r6wXpKfccDnu09k/Vf1dA9in
Vt7IfWqkT7jZloh6tWrW5y27Tvumzmed0+kM0c/z/mj1qxY6f+xAV9inVh7K
fWqkHzzU10fUqw35tjm3/74/9irw7LERoh8p06ndzzvrzqj+7hTUMygjZT0D
0tPWxHYVdVoWgbfv13r/XPVrCSvPUNG/1HVpuSNHk4NVv5YI9QzKVFnPgPTY
oOoPRZ1W19xr+7btfqH63xeLKvweWUVPWRO4sP7mu+nq7zaGuhfFSta9IJ2W
z7MT9UmPveOZd26OOp9oj74fxg02UkJKxZwQ/Vv4uyuh7kXZKOtekM62Hp8p
6pPauRbrL/oAcD61S9zZvc8jl0Vl2gSK/jO1DxTqoxjWRyF9k3v02jZ8fnpm
rmVFPTvOZ/AUVl/0p93zT9B/dvVPXNQW6qPYG1kfpcYDASXWTeTzqzAi5qqY
L87nkMmgB8fWvGO9LNc0Ff12+LvjoY6OYR0d0k/4B7+w5fxrOOjsHMFPnM8a
840DDG/Gs9srKr0Q/XlqHz3U0bEjso4O6WuiO52bxvnXPcT2kuAnzsemSmCN
717x5FS30vaivxB/Nw/qLYm3rLdEuk38yMOnuHxX9DKJEPKO8xmk+73lwdAv
pO+YQi/Rj4i/2wHqLQnWWyJ9/ZKTwfO4fG/LWbdbyDvOJ67WjgWif9KiUp8s
ru+qnKyHulwyQtblIt06va4z/ztpX/ZZR2EPcD5f/M16l7lUSC4P/tRE9F9q
6nJpsKzLRfqc5q6fhP43HTZvmbAHOB/fzZdein7R0c+6BXfxT9XWb9Mfsn4b
6RuyPEpyvOiiHIst3bm9xPl87xh4UPSXOlrNqiT6TfF3N0D9NnWS9dtI329z
qa+wj33YpikD9/2Jb/UDuo0RfVxLt5W9E77ujGpn5kKdP03YCXX+SK/duc8w
0bfTalqtq1XfP1ftz+A+q7qKvi/rUhcOLEwOVu1MK6jzpxNknT/SS19pkyD6
bdrM8dq4afcL1f48tXvaZVQVPVr60utKm+6mq7/7FPpBaKjsB1Htc1rbQNEv
FB52MnRDbo46n3FjZrUeP9iI9vAa41J7aLb6u3OgH4Q6yn4Q1T5bnXol+nzW
5r01FvWJOJ9zXb237PfIJR2PVe4u+vnwd5OgX4mky34lpO+IrRrI7RHpmT0i
UtTl4XzyxjkPCNtUQBKynm+OvfrHXyjQZ0TcZJ8R0lfM/fSM2yNy/MC6EWK+
OJ/60PfH3sq+P9VuwzxZV808V8J8WH85H3WddlPqV1H/1/XJtjfVr/2p6whs
4vBT1Au+e2f6eVT/P3TPjUM2iTrOka0ddvm3z1fjUqVNI5OvB1LZ8vc/Sjeb
+ifecOmdeIol/GCX51UtfB3xh96p++KJEady2c4trj1tFv/ZL6j3+2DAxZZ5
7Hzf74599f74/fTHRf2MrKnsZ1T1EfBkPySeOM45o0+vd7TTVaYNyf3u56+j
0kuVWXVqq7+Osr3pktr831WcJwDO7JzEGeOcnnWcc0RdY61V5WqJei6kl386
2f7TzRzW81DTnD1t/9A/vAhbLepTbfTHBIh6VYyLjvZr7DusaRwb0+b9wxPX
Sqj0YX3jH9yOe8GOrr77+dSVP/RHjUoadj+UziJ+vaq5feB/rP+Pn3zdlqaz
sc4DfnQZ94ee725wwWV9PpvXbPV53bPGKv1lermn+fH5rKK3ZdJa/z/0Hz2m
Zy58oq/MPLLjZtBxfZU+KmbB4QPH9RX7Fe0q8n9X5aoe9LEqcbKPVT0PAfRU
qaPR00egj8otqY8oP+82t8kS9cHVIybWEPXCSA+n1ltE3bY7+znsjUOCKlcf
rePfcTlQyjcOeXm+ZZ5KP9LxXiyXG8XxGdt57tSfvtqK0FerrJJ9tUh3BTug
DJJ2AMc5PmbdwDcRRsrVoI0nLiX8UOkWkxLcuRwrzXofL/nlQKpqH26DfVD2
SvuAfO+oE3RI1Cs/b+VUUdQvIz3k/lQm6shfZxw7M//Bn33GnIXZfuv8jZVp
ta3Zr/h8lX5x8OBRemeNlRke/oHD1/+hu48f69R1XHHlkEGjGR1p+p/1fB+r
dVw+lM2mI8O6HEpX+bIP+pqVprKvWWPnlfnb/9vO1wJ7rsyV9hz5Yt99Yoqo
s6/+pt+uTY4fVXrKj5z7gp6/0bqDr+NHdX3jbKeK59uHGyv7kl7U/fwzTsWz
R+ik6h8fGSsFr6tYTn4drfLlPvRZKy1ln7XGjyijSoMfwXG29dq6X4yvk9no
4refcerv7qy5y1SM/6WVR+T019GqvysF/kXxkv4F+TLCbXChqPt/ELahcqf2
X1T60qYBMYI+I8+iJW3/RV1X6VG2R/HQKyWUOs2G6bO4Fyr+OywM07g+Kw0f
rL7Rr2mcSp8wOjON67NikDZ6/Q2u36qevu78Ury/clFW78HcHmj63JUOss8d
6X4QJyhDNXGCN8QDylQZDyBfrNa0miD0KN4rK/OdQ4JKvzi41Uahd2/XBTYV
fbGI24GqtKqQf+uKd4dGcjuN9OwLtKmQ/yXfBo1KFHZd8uUN9N0rFWXfPdJ/
QByi9JBxCI7zPtl2idDfpJK/jYVdR/rVey/nC/3NmNfpYTj3A8ivIIhPlO4y
PlH7NbwvbxZ6tNR2091FDxJVur9D/fpC7yomVw0XfU6I85oRJ0oLfQlKC8nv
xO0l0tMaZ3UR+nLtwRPbbof+0E+umWwh9PHsyel1hL1EeouttVK5PVWq3F5v
JOyreq4CnHvATOW5B+p5ERBnsjqaOLMBxJOsrYwnVT2q1Ke28KdNguMDRR8Y
0tuH9Lt1lPvf1490Wor+PMSt8/zMUcKvRcWETBN+TF133R7dWPw9k00JEP+u
+kc4h0HpI89hQPo3iGPZJRnH4jh9gwtaCn7cMBgYLPij+usaA2de4Pz74b3l
pOAn8msuxLdKExnfIl+6TYszFH5Qr2/XjqK/GekNtoW8/MD95qr1Z/qJfkHE
udsMx9HCHz2e8WK48D9Ib1yyXVnxdwsXlxDx76ofrFXWaQTnx97sS1bCXiI9
aeL9Gb85/3KXhw4X/ES+rIZzMBieg4H0DpCnMG2e0gnyEYb5iFoH3sT+tAOP
l6aP8LcU/ZRI/+CdM2K0aygrtT8mSPS5qvu5e5aHc//BGvr69RH6hHTy5pj+
Fa5vDsytjdA/5IsVnMvB8FwOpLtAHsQwD8JxRhdzSJvK7d2uRN0Kwv4hfc0M
/dQv3D7e7+58XNhL5NdGyI/YVpkfIV862KWt2cTjnDvpcfNEfyfSb3x08zv4
YidrGDRpaun/qBM76b5jflcRn4wsNV7ok1p/uyjJRuibjatJC6F/SE8+eKWY
E7d3pZcf+Czsn1rvt+WN3VVuH/e0q1Eg7CXypQGci0LwXBSk74Q8l/TW5Lnb
IJ8lmM8iX04CXwjyBelNgI8E+Yi4DQQ8iRbPhYAnQTxVfsE5LQTPaUH6Msij
CebROI4DyANppJGHdiAPpKeUB+TXfMivCebXyJfnH4r4QpAvSG8LfCR3JR8R
53eAP9Hi3xXwJ4g/0kOAv0TL393AX9JG8hf58hzOySHP5Dk5SK8J6yTkqmad
ZCOshxB9uR6CfGkDdo+8kXYP6algJ2lDaScRtz5gr8hNjb1qD/aKJEt7pZ67
Auf2EDy3B+lOsA5D7st1GByHgr2l1zT2diPYW5ot7a2a58L6DKko12eQL/XA
7hG0e6pfAztJDaWdRJy3g30jARr7lgj2jfyU9g3pXcB+0miN/WwE9pPWlfYT
+TIHzk2iZvLcJNV/wTobXa1ZZyOwnkZj5Hoa8iUC4gr6WcYVmjiEpso4RBMP
0O+aeCAK4gGaLeMBzTlO1EOe46SezwPrePSEXMfDcYIgnqFNNfFMJsQz1EvG
M2reDet71Eau7yFfdkBcQcvLuALpBOIQukvGIYjzKYgfaJgmfmgG8QO1kPED
0ldDfEKP/z0+oTdlfIJ8eQ3naFF/eY6WZp2WOjj/9zptKqzH0vZyPVat84e4
nZb3gbgd6Q4Q51NDGecjblsh3qbN/h5vU53WEG9rzvWiMfJcL806MKXLYR1Y
ky/QaZp8oSfkC/SczBc068N0lFwfRr54QtxOPWXcjvSREOfTwzLO18TntM7f
43N6Wcbnal0rxP/0QdP/jv93QvxPM+5D/I98mQvnqtGf3+BcNaTHwDo/vaRZ
558I6/nUWK7nI1/OQ15MHWVejPR4yKNpWZlHI26nIJ+l+zX5bD3IZ6mlzGeR
L1PgnDfaWp7zpp5PC/sI9L7cR8BxEiAfpwaafPwk5OPURubjyK9DsL9AHeX+
AvLlOOTFNErmxUjvDnk0vS/zaMR5BuS/dIcm/y0B+S9dLPNfpBdAfk2dNfk1
g/yajpL5NfKlGpyzR6rKc/bUfQfYJyLVNPtEH2E/iNSX+0HIl9WwPkZ7y/Ux
tX8N1tPIS7mehrhFwjoVHadZpyoP61R0s1ynUtfn4dw/ekye+4f04hlF+1Ak
Jwj2oXCcfrDORrZq1tlsYZ2NhMp1NuTXM9ifolXk/hTyJRHWtWgTua6F9Jaw
Dka6yHUwxDkT1pfoJM360hRYX6Id5foS0qtOK1q/IlM161cpsH5FSsv1K+RL
fzh3kSTIcxeR3gT2Gcl7zT5jFuwnktdyPxH5cgLWP0knuf6p1vnAeibx1Kxn
zof1THJRrmci/s5w3iNpI897RHoo7FeSspr9yrqwL0nqyX1JxNMV1htJFbne
iDi8gfVAck6zHnga1gPJSM16YMX+ReuNZLRmvTEA1hvJEbneiP10A6qMMGhy
/A6b3DLjW1CNP+ewNf9yfsZIqyeskZGXl6jfx/cf3izqv2PFZP8d0ifsOhXw
0OwZm9fcJ2znoW8qvYPVC+Ozvz4w406vJovzd3F85fXbcY+mfWUfNy8M6yn6
M+T7vtB3yZ7Ivkv1fNQmemVjl39mw+v+Cktp80mlHw5vdkmcOzzxxooHrsYv
1PFTgu7lin6VHiNDzjwL+6C+XwH6bdkZ2W+L9K3v3VaKczeOZ3TxsEt5pNL7
PIPzl8+HWEzYUXdDJI7/m0A/T52AyEzSwi8S37eCPmtWXPZZI73K3JiO4vyI
OsbDJ010uqbSFzTNHiHmf+1EnJOb8Qu1b6JqinW4mP86Nva26H9SzwmB/npm
IfvrkR62b2hHcQ7CuT4rPxeGvlfpUa9KjhTnHVt36ZouzufG8ccZXZkr+mGM
nPJmiv4wfL8nnKvAVspzFdTz0sutKyF+r1O5cc/E7yO94PqMcw24/AQG21UV
55Tj+JGHn1ceweWnWtuwI6J/Dt9/CudpMDxPA+lXttSue4nj1XJ190sCP5Xv
MD7Rjn8exifa8d3hHBWSKs9RUXG7O6HkA87vUPPjhoL/SGeAD2mgwccV8CHF
NPjUh/NzyA15fg7S3Yr1XibkNSE2yUnIr4a/5Nbf+Uu8NfyV5yYRPDcJ6ZGX
7O2Fvh1+bnDRgeufRj7Jj+L5E/8inyR6GE+2/kM+5XlZ5FpHOC8L6cYDbcaI
8xl7LEopM87pmko/DvpFnDT6lQH6Rdpr9OsQnJNGDOQ5aUg322p8kcsT+ZA7
rpU4twPp9mAfSEHH/7YPj8E+kFiNfbCF8/HIBnk+HtIXdQtb84L/nu3poe7i
/Amst1nTeYK4f8FWe/9CzRE7xP0Ltnj/AvqF5h879nOfd85We59CahXXAbtX
hNvifQpot8+WChX3I9ji/Qjoj4YPqS3OK47Unle8Y8YCcV5xJJ5XjL+7keo9
mesayp6cyA0Q50CodR17r7u8WBERiecY43zGjDq0YRaPv+2dWxiIeBnpteYN
WvWDx+slB8RsFfE1jrO1ddH5nAzP50T6i2iPFiY8Xj/5+vdpEb+jnzrnP0Gc
kxyJ5yQjvcKAKffm5Dxl1Z+uCBb7uohD+vwKVsVf7mSPB8VPFudPqOfYA1+Y
veQL0ouDPLBkjTwYghyyhRo5VED+2TqN/I8DvWPxGr1bCPrOTmn0fS/YGdJK
Y2fGgn0jRGPfzoBdJWc0dlXac9JAY8+3gx8h2zV+JB/8F3GS/kvtHwS+E+S7
uj4P/CV2Gv56AH+JqeSvup6wuAh/osV/Mfh3MkHj3/uCfycNNP59GfhxMlP6
cXUfPP36itA170j/8i/LinwU5fkynOdJNmvO86zi07mgx6UHRHdh+HhRR4Dy
lgvyRo5r5M0RzuEk2nM4F4C8kapS3tR7DVoUnUPL8BxapE+CebKBmnku3Fg0
H6Yn50Mi0t65v8omr732Rfmv/Mi2hfZs3mxoNkF6s2H3XB9VSWNthu8OfFgl
TaUnVIjbyd9jd27fv71t5UfyzPUxmfYqgbzsF1F3e7M45rFz5o251+dFau9j
/RwUPUHcH4rjtI+aUtq3WS5r8fjY95nXt0daL8wmDr6/yaHJ47om9MtnQ74Z
39ztvztyfUB+X19LXept/uNoXKyOMvvwr5wXofsiC4v+6NPag5yG/r6qp4TH
G3huORIYOWeMXqj7KyPa/JT3Md0VBkr/s69f9u59IPLrVYPRr8KLUZuf1ref
VzdSFHou6Pvjg5EjLY3LOPia8vw3aUXoXmPl8g+PES3bH46MWV1MCXcvTQeN
Geq41aiYEvMs7+zbjcGRcC9nWXpxobddixHFlWmD7UeMf3QkclTROOXomgoX
ZzsHllAWX7tnN0U3JBLvMTRoMKNZwzhT5XBiDdO8usciEbfiJe9VaTWUx41m
9drvWnlVvXe1bnf/SYUOqWzGyYvfyue/ZIhbF09LJ4H/yh5DKwu+IW5OY7+6
7Kvwi1nfNsjQmZHAELfc96f3+lQtZJZ3Wz9vf+MrQ9xG9I/oPMZZV+lQ562r
+fnvDHHbtLm/96h0PaWy31AvF7cUhri9mLii6+tpBsrHTaNXjP2RyhC3lrF7
jZdEGyomLXZUbWSWzhC3oGm7WyXWMFYOHG10ytUqgyFuti2DLVeLPoGL3Su9
aJTJELezLkmTEr2KKRE3K24Oq5vFELdBhkczyx8urqRHzwvdaZbNELcZA+Nu
RFeJZn3OdDJ6wp+I28DC5ASrlEQW5PiwW33+RNzqn9b5yOWY1TUaX0fINeL2
a3futWsXM9mrFfrlrvMn4vYkxPRd8Uc5LNLuVNsS/Im4JTqXcJ21No/VWpty
QzwRN9umjRsH6uSz3Ckuu8QTcZv6YsPLkvaFzOZ+r36l+BNxSz7q4pcepqP0
/NXhiXgibqeG7t5RJ0xXSRjX/pV4Im7eerPiTx/QU+wXBTQI40/Eren22iV2
rdNXFu855SSeiNs0L78G48YZKHWMXTzEE3ELjXi3ZSeXs5HvDnYScoe4pb5z
zzLjcvalUsEKIXeIW8NiZjO3czk707NgnpA7xG3DuApWQs6OxdddK+QOcZs5
6df3dlzOkj1bPRRyh7jZXH/mUonL2fcqbISQO8TN4bXRpBFcznJd3xwVcoe4
tezplejK5ayJ36ixQu4Qt4CIvh4NuZxVMThoLeQOcat1ooKukLNim44OEXKH
uCX3ThgVx+Xs07LAnkLuELduGz88Os3lbFaVi1uE3CFuG3o++rKDy5np9jY1
KnC5U+UHcCCIA9KtQK5IPSlXSO8Mekq8pZ5q7B5Zs3VnsrB7yJeFoZ6jOT/I
/WE7v+5YeVW9H/nWV7c9nB/kUenaOpw/qh1OAjtMzkk7jHxZ4+YaxvlBfHXr
DS+cnkCQL82rRhRwfpBmxlF6nD8E+bL+000Pzg861+3RkIrnvxPky5BWk25x
ftBtFmcdh7ulEOTL+MsdV3J+UE/94304fwjy5XHzEEfOD1qjo3FMA7N0gnxp
fDJiMecHnXeqYMAYqwyCfGn5YPcMzg/64J3XkeeNMgny5V7s2gucH3TDgOOl
OX/Ue2N7171pz/lBH0VZ1eT8Uf1Ot3IH7Lj+k23ps1Zze6DiFrD9RBDXf+J3
uvQ6bg9U3NqBXyNNpV9D3AInlhrN9Z98O/NjLrcHKm4TPvT35fpP1pScvJrb
AxW3lPMx1rPX5hHrOlYFM/kTcasfvNE4SCefxKX+Zvv5E3EbcqXkTa7/5Gn8
XTduD1TcrjlWKZsRpkP3DF7qxO0AVXGb+aK6RZgundXrtzO3AxRxM8y4O4Pr
P41c2z2A2wOKuCmBnQK4/tMoH7+onfyJuEV51bvO9Z9uNLj7xo0/Ebeh06Z+
5P6GzG6XltOSyx3idmiR8fsKXM7mzWzWT8gd4pYDcQLZJOMExO2sdWak7owE
Mvf98ZZC7hC3XdYzojpwOevcuam7kDvE7b3n5wmVuZw99jpVT8gd4jahx/ED
I7mclb9yY5qQO8Tt6tP21dy4nI3odMhCyB3itvXYe8b9DSlzyP/zYi53iFv7
Q11dxnI5+9FrYxkhd4jbnXqHHnJ/Q9rFHy9YxeUOcatX6NjvDJezVfuqdRFy
h7j1HFJjwS4uZzVnV7nH/Q+t2uLRhAj3z+S1fkby/ZVBbJKBvuuMoeEkd/h3
swj3VJJzu/bv1DkvWOC4A4eDLiaTjzXSZvtaZhO/vQ3tD2Z/YN/CrQNLnMoi
wwfk77S8o0M331plHD76K6td2rBqm6AC8vhMoYPvQX1aUb+tt8nI7yx7Zr2a
hjV16cV5BiHuw4tRUjJ6XOdbqexzXIlVMdRA3i9sSlvsCHyzMCWNpT3IWD7+
sCHd+MDQ5VV2GXqi/LoFn00zWddSW+entzShPQqMWvu6laPpi1o0bWecxT4o
P7vWcC1G9ZqalHR4YkZXXM1dOTk7i4UN7TnsxYridJVXqnGEexb50WlZO1Iu
lTkN/L3StlwqaWSU/yncXYfmOOU1iTPLYaefODV4bpZD8F7mGnbBowY2NVDG
LzixaEBTA1ovOWX3q/BMnlekjyrbM5PdWb3K9svD9yTmo/HgV/PM6LzkTrqx
HYorTWI2nPa9lEVqSJxXKq4B91YGkcwJEcEcZ/ZT4tx/++jGKXNekOvDFhod
uJjMEOcjgwJ1DmR/IBVD7sZznBniXNepZfuzo7+SdS83LeQ4s2iJc94yn7VG
I7+Tt4u8nTjOyiWJc8SV6Fb0Viopt8fmGsdZQZyrL9/pvyAljYTeXXCD46wg
zn2qlC4Zb5pJAlzKXOc4K4jzppLpoW2Ms8gwT0s/jrOiL3F2s7ucOTE7i7Tc
9fM4x1lBnCcHLVEEvgGpBb/5kyHOpUNslgt8rZaZx/EnQ5ynTjp2S+DrPOSo
mcDbSuJ8amlILY4zWZdfakbiw/fsqcR5dLOpp552KE4rxu7quPVSFtvsF12p
rkMi0bNQdGxv3GFR4YcstlR9R/K+pEdYOuQSS8PtQ+3Kp7O4+W4bu5dPJ17l
co5ZOuSTJT2q68z7wP3+q8wTvgG/SHxITiUdnQKS+Tm44aT1WezIL5e2E9dn
EZcdOlNfhRvQHclmwz42/MXY7OZWHxr+IkEn9Ma/sjGmtrO2DXpxLoX5zXka
5W2hT6N/6lVz8DWm1lnjhszYns8W2bcrPn17PsH7yv33uHSyytRRtrT9uKRe
po56X/mLTxZ5ESm6ysm2m5ryp6q/DUB/WT2pvz4zjG+G/yhHs92yj8+K0ldu
7Ih9MDNKn/a6/iTlVfhX4hfw6dIBnTesVuyAOUE6b8iQZRkWOjo/ybX167+c
7JDLbs9W9jqaxZMuXXNXvgovIKXn0/hHR36zQVvauepFfiHe8Tp1HMoZ0s4t
UjfuytRVPtiWWPCZ/SA6dvpPwn8Y090XPlecs0pf6Vz92pXmDVPJtyI+lqQR
qevdHvQzUr5sSs8LWpxOmrU2TCskZWipow9IC39j5ff08qeNN2SofjAC7Lni
L+35oe3Gge5Vzejb4NdxJTOLKd2v5rertiyLmGTF3PK1TCJt01p09Yz+zGy3
Vdrf0OwJueOc0lRHJ5MkDGv8fmmDLJZS/7jyKckv8p6kJ0p6mqSfMc/c9Cr8
J7lbr+Je8/d5bF28T7sNjjsjz0n6fUnfIOl7X+WmhLsXko6tZ2xav6WQdTt5
MXVw+N7IfZLeSdK7S3q3RwVWDr56dE3D/IYVYnQVj4gqG2/c3P9P+sVmunHh
PM8O7d1/3bxgfWWcm9X0PUuD/klv4qu/1tLBhOaf6Gj9aKChkvPTpPWNcgf/
SQd/UYLmNHJw+freSLGaPv/t6rWH/kk3L+JLSfr02pZg5mSi7NT5leyZcPif
dPvhhvfD3cvQMbansnedKaYMeW0Ve77ZkX/S9Yruoy9LH6Z07n1Cp4RSe0aL
ha0nH/0nHeXEHuIl5YuMly4X6ZEZTRo7IW+KralyfoZjo+7bQiL/RY+sG7vP
wfc7OfB1m03LEd9YV6+WthMerY28KuknJL2XpNeX9uc02B9xzl6R/Rkk9ehm
jezdQo8mfj1ZvLdZPCt3OvNXuHseuT6x0izPST/ZwKSwNU4lPzMq9Sv355v1
Qr9GmjwuaxD5hRVc+N3YoZwO9SRjapw/ms8GjZ+0Jc43kc2pWvgm/IceDbE1
Nm8fqqPoD7BJm3s4icsj6GOmcaqz0MdAr9htX9gP9nWxro/lHUP6MqzUzKjh
espmqzSnx5OTWWF30NOcRUYvZ3M9bXrsxKcWDXme+1bf1vegCY0yrXlnxSd9
5fsNx4D0BakshhglFy4tQedWMFnVqq+hUuf1wZxOwWnsq9Trr8vTagi9nqjo
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
Xjeud87VhOt1+yz9qqK+D/nSH+pI2V5ZR4r6cu3+7XG7OD86BjtXFnqDel3m
kH2TDVyv2aJTGVyv1bpTX6g7ZUNl3Snaw+XgF9gJ6RdQ33s+nJhfjev7gPNj
Q0XdEOI8GnAmvTQ4NwCcyTaJM+IWArgRxA1xiAEcyDANDg0AB9JB4oDfq8D3
Eu33msL3EvxenL8dzJ8MlPNHPfoJekQXSj1CvXACvaB7pV6g/AeB/NOLUv5R
rydA3EIXyLgF9VqB+IQek/EJ6nU+xCd0uYxPcD5LwE7SPtJOonzaQXxCjWV8
gvLmAXEI7SLjEJx/ZbCrNHU/2FWUn14Qn1A3GZ/gdy0Fe0sDpL1FOSmE+IRu
lPEJ6jWF+nOSLuvPMa7bDPE52S7jc3uJQ5/yMfal+Pc7XWpvJfBAvf4IcTup
KuN21OvBUMdO3sk6dpS3E+B/iafG/yaC/yXVpf9F3HpB3TtJknXvqNdnIS8g
PWVegPLZGfwyOSD9MuI8t6feZ243iVG/03ME3hgfZkIeQRbJPALleSz4a6Kj
8dfu4K/JPumvkS93oQ6fdJJ1+CjnQeCvyRGNv9b/UeSvSZT018ivMouL6vbJ
S1m3j3p9EPIackzmNagX78CPk0/Sj2N/x1Lo72CLZH/HokHPPHR0kknXKvq1
d5s9Y0rU9W0VDn9T+0G2QB8N2y/7aFqted43wj2FuD76EDdQP4G9sOnyfoB+
ArGRdDdJfynpOM416GNi32Uf03z5u1s8ZpSrePgbqzzL9NYOs2cE6/yvPxln
I+r7E/IKuyfPeaGO8x361Eii7FPDcUJ1zm7ayf9/lS8fEvn81b62/tAPSA7I
fkCkW0J/JfGU/ZU4Tj3ngUx8fzWf4UN2cTywv8Pkg88z0dcxullUedHn4STH
qSX7Wz/J/tYc+b4xvM/6yffxu5yhf4Fdk/0L+LtnYf6sspw//u5NwIHcljjg
ODXuFPWbkL2y3wTHGQV8JOckH7GfgvpvuSv6KKL3VMm+uzJIpU9s82aV6GPp
8CnETvS1PJX7QY9kP6+77OetLN/f2rrofXbiA7yP43hBvwbLkP0aSO8Ov0uu
aH43z6Coj4bsMYQ+Gt/qUbHlnD8THc2f/5/+/05/tLOlj030Z3JD0VlrZX+N
fdu79bF4DizQnTBgUALZ8XNYgyclI1nbiVW+Blo8YQ/l+8kL6leub3+NTPw4
lfD3Cb6//NSJXk9LRpL5PmtC+fvksXy/8sKi91mw5v2tMWMNg/i4HfY0rxzN
/x/O5zrMh+B8Bsj3X/56fF+M6+S8qkMMnxfWre2CujXWWdatYdxYC/wLGyL9
C8a9Q8FuM1Npt6fJOr2jUKfHKsg6vTKyDjMR6jCZp6zDzJf1lgFQb8k8ZL0l
zucA1AkTXVknjPOxgziWHJZxLPqRMRAfEn8ZH2Ld4BioiyZ+si4a60KvQt07
cZF171j/uRjq24mrrG8P8/6R5P4qjXwKXlnXYsZrZnDwxJB06zRSpm7yYAff
dBJOp76u5Z3EPis9D9X0TiJ7+qY7OvjmkGIz956Zb/qJNXdM7DO5IJtc+JZv
qLNMl/Z33tmG1P/G6ma1W2zmV0i+2BRccn+lS/u1buwQsiqXGZp3aXV0VS5p
0ksn3H24Ab1+Wqe1WdkfbMc3u6jyG3T/mf/+K6+cdiX5mqVDBnFYsODjMXGu
4tKINn513pGKKwtmvrLRoyUuukQtstVRrrDhzwq+fiMYZ5Yua6i3Q8SXXQeW
FPEm+sdjxUdUieXx34ylG2av535yqhzf7uibYDG+ndVp92113rEKcvxRhWd8
xPi7Nu5iOt++sTly/JSJBxQRv86J1XcQ+f03Of6sJL0HIr5cc0f/q4ivl0i7
2gz8AjOXfqG0xP+Uv05JgX/G1PA54ol9W2Wgb4vVk31biPOi+Zs3c3yZ7/O3
38UT+fux5JZatTl/y19t7cP5y5CPV68NGerB+Tiozb7tnI9shOxrawh9bWy9
7Gs7L/lrE15tRCfO38fZZ95y/jLk46ZN+y3Lcj76/crP4XxU8Hffwu8S7e8y
+F0yWP4ujt8CxifRmvHXw/gEx0d8TgI+JEvigzgsBByIn8QB+dgd+EicNXwc
CXykwZKPc/+bj3SJ5GPSf/OR+ko+4viOIIfkmZRDHL8UyCENkHKI45uBHNI4
jRyGghzS4VIO0f/6QzxD9GQ8gzhcBT0lT6WeNpZyYuBc1EdJgmUfJeLjAvpI
flYCfTwt+VX8SJEdIIUHwA4gvyxB30lDqe8oJ+HQZ0qqyj5T5ONcsAOkqrQD
jSUfv4O+E1+p71gf/vCeaauMBansUNOqISs+6VOs3/asdNrc9X4G02+lf6xc
gjEdId8/BvXkynxZT47vL4V6b8WkFdR74/j12HqTdP7e9cQ6iaLPBt/v9uxe
6Gj+nlOQd5bog8H3FejHoZmyHwffj4F+GTpH9st4F61fmVIjz58ndtikM/Nm
reNsfxtSj57GSYWsHLXzf39Nt1sW8w/96bXkWDGK79e/UZqQ34bKb5thV7bb
pJN58v2epmUL+XvKFW+jZYVds8i/zhv5v12P+tf60kY5n+MlPfP4vBXdctNN
xHfg/Mki3VNiPp2/+euJ70B8rAFPdk3iid+leyje1Z//f8NvN6uJ70PcegDO
bKDEGb/XvGPfzjp83IXdij0Xv4PjFBwsGocYyXHw/fLwPlkk38f5h8D8aXE5
f3y/E8yfOsr54/uNAX/6VYN/X8CfBkv8Ud7iQT5JgJRPnGct4DspJ/mO37sL
5JbktwS5xfHdQB7IZikPeF5Q6gd9/5Ft37G+bg1+P37+5x75vV06Xx1W4xPz
bLlmuU75HPXcrQdz7iVcLMb9gfVK48D+Ouq5W21brB7q3OoHy6lgsmLE/j/3
yC//bLPz5+w0FtL3Xe3+Zf/cF9/CJHnz9sOZLHVCxbrzf5io84ksRif9ev6d
5c5eaJH3/Lv6uz/mb+r8PC+XXQlyt3qWl6uesxQ3173T25o6ypozfde8qfnn
HEvj+MQvDcrrK7OauZfhT3X8iQH9naKfp7NPnpe6Dm/7Th1/pfOrgfx7FNPO
3obniyWp4zd4Om0Vn7diM2rAlZzZaeq5pvZ3z+7k81aaDIpz2Xo4Uz1/yb6X
56gRfNwomxQb8TuIZ8flEeOH1vhEKs1efofjqd5bOrPA8Zf4vZ97JrYXv494
zqxz0G5gqx8kcrXuBY6nem52148Zw3P5PJ4N3DpWzAvn07/T+srb+Dy8nWNn
iXnhfDyDy24WOE55ceQ3f6q/uzpp/mqB47cWqz7xp3pu8JqeBtcFjkHvz+sI
XFU8zTsPEThuKii/X+CK45s+9K7Mv5Pom3de5MLlSB3/U1YtIR8TL5ZIu8Dl
Bcd3enKhi5ADN7dtefw71HN93d9lOQo5GG7RMZZ/h3ruVu/JHaueO/SNkW2/
e/T8j3PzxprNelh1XDz7srR91Wr8ifczlvu0fsHhB9lslIfbI/HEc6L2s3Yl
yu0oYC2TJniKJ55DVTJy7dKlrnrKw6vsunji+BvfDV7mwH9v/bi73cTv4/gF
NGHF/pOJzDHOv32Xe/nqfAaOGjKNv0e86p+J6PEf508OTtKbyOdHTh86upzP
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
     "], {{
       {GrayLevel[1], Opacity[0.5], EdgeForm[None], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXf8lvP3x+/7Gve1bkRkZGTvEckKJZIRKUJIZStlhEoaZGRvsndkb5ll
l+wtskeyySj0ez0/r/f38fvj+rzP/b7O9b6v+xrv9zmv8zrns/LAob2GRLVa
7eCiVovVbpDWakfmtdpzko+QfGejVvtR8tZS+lntVtpurNdqf6rdVNsg6dwl
nZ8kbymdH9Ruru0g9Z+oceZKni/5MskH6rjTJI+RnEqepuNezmq1XXVcf/Xf
ps/fSP+kslbbV+ezgeQ7q1rtgGatNkl6B0jnZul8qf5TJE+VXNc4O+jEd+ZH
SB6l/inq/0cfn1T7nI7bSfs+4Bwl95e8o7Z/tb+7tg46trM+/yb5Dn3X/vqu
66U3ROPcq2N+Uf99au9X37bSG6P+J/T5P/WPlPyo5AWSb5b8vuS2Ood31H7L
+Up/N22Z+npJZ7r631V/b/WdLf3n9DnXvgskvyS5ktxH57On9i8ieR+1S6o9
UMe+oHZFbftLPl3n+Yeu4R6SL9Oxp0peQvv2kH6pdi/1n6v+5zVmoc9XS35d
8lKSr5X8huQ2kidJPkPHriR5BV3zq3TNj9CxN6j/bekso/66+s7W9w1S/2E6
t376juXUf6b0r9S+oeq/R/ofS39V9e+n/UurHaj+u9T/kfpX4b5Lf6L0B6v/
fvV/qv7V1X+x5JmSF5W8vY6dr/07aHtIfVN0rbZT36bSOV2fX1L/homug/pm
8rxx/uqfIXl7yWdLfp1nWN8zQ7+rleSzOI7fqGM+1fnPUt+H2jpK52X1ryA5
15gra/+bPLsa5yIdM51nXfLFPKM8Wjp2Lem8InlP9V+r/k+4/mpP1nmurX07
qP9yfX5D/Q3pr6u+tyQvIXkDnkHJPaUzRN/7seRvtX2kbTlty0hnY+l8JnkL
ndtM6awjuY/0r9OYn/Leqb1c37WJ9Aao/1jpfKf+YyQ/qH2/S15cv2U17X9f
8s7qP59njnuhe9hPz/btOv4eyf0l3yt5dX3v5pHfu6+ln6lvN92Lu9R/pvp3
l3wAz5a286Vzt9pE23aSh0n/JJ3DX5IfU9/i2naXPE/bHG1rantN+/sX/i0f
SD5ecgfJp+rYkbnHmiD52Ybfk1vVXqtz6Kjv3k/9N+nzF9LvJ3mS5K8ln6d2
so5dRTqPSX488zs9R31na/ztua6Sh0vejN8leYLkLpIv0Tijc5/rUzr2mcxz
xyuSP5bcR/I+0rm+4XsxXM/t3jp2XeYcXZMPdNwxkvtyvTN/LjTei7rux6r/
FbVt9PlLnm3pf6V2NNeH35j4+X9b7VrS+Vn7juQ9k/yL5ErtQQ3rvySdRfR5
lvpfkJxIfl9ypPb5xO/dE8whko+S/LLkGZJHSN5Meh9rO57nWe3sut/rV6Tz
snRGSl5D47wleYLkJSXPlDxK8vk658+lf5Lk0ZLflTxE8v46r3/1ez/S57Nj
t8PUP1VjDmhYfwv1faJtuOQ31H+E+s+UvILGHyT5bO4L84++63TJMyUfpv7T
eH913Bxtp0jupnZu3f07qP1O2wlhvu0s/W6Sr5D8UOJ5lefmyTDHfqVznKL+
fSRfrfP8Vv3jJLfVObyq/jG8j5IPabh/gnS+qbt/NfUfpf7zan7+f69bXl/9
7+jYcyQP1v6Vc++7OfZ943ddKfm3unWul/xj3b/9YOkvlvs8XtMYK+X+vtk6
/zf1+QzpvKu2fe7jH1f/gQ1fw4FqG7mfodX1HL6o7UPJS+p5fFrbddJZVL93
C+mcyzqjvju1XcQ8oPZJbVdLrjTOldIZrGOXkH5nyRdIfx3JB0m+SfJ7Oucb
1R4nnTbSX1P7jq0zkWk+lzxQ8jPSuUw6B0leWWO/yPfxXcz90hnKsyqdidI5
lPVKfb00/pX6nEtnJX0+XP0p66TkQyRvq997ScPz6nLq20X6l0t/RY39vLbb
eVZZS9V/PfOpxr9O7dE6dnkd95T6R3Bt1X+1+o+QfJSuUw8du6KO3UnjX9Hw
PHy0+nuqf2XJPdR/QcPz5NaSz2x4TWHdOK7y2nGu+k7NvDZ8rPFvUXuCxm/G
nnuYV7vo2AnSe1Xycep/VfvX0LaavuuF0vPDoWp31/cuKZ0dpX9Ow2vNlWrP
0PjrcU2ls6t0Fld/e+kM0nm8wPOsvn7a1mL+VLuXtraSJ+rYCZnXmF7SP076
s9W/LuuatoclXyOdSzOvPZtIZyjzFPOA9u+sbVHJy0pnXekcr/O8UPKFmdeP
3aV/dcNr1i6Sr5L8nuTl9Rs3jWyDfaa++dI/TJ+35nqXtiV2V/9tOqZfzXPe
4qnnvd3Uf6vkAyRvg77WoCX0uaf671TbnzmBaxfsh1U13i2V572VJT9Xej6a
zudgF03Q/rYa5xpsHJ3HjLrtnCf1vYuGMcdLZ2npnKXP2+q7Tk+9RpyncyhK
zx+P122TYlPtIZ27mdckP6xxSsm9OTeNP61uO22G5Kfrtq+6SP8c6ewonQs0
ZrO0HTZdOk/VbeMxVxWp56hVtP95be+p/w1sL22Hq39DjXNw6rVykvTrabCl
Nebcwrb1TXXb1KxrG0n/cOmsJ/lxfdetddvqT0m+vW7bdZCO+62w3F76R0p/
fcm3afxI8haSn5b+ZOn/yjql8/pR+p9LPkvtuNJr9BvSebluu3HZkklF84Hk
y6SzdGmb7y3W0brtxivUf2ppm/XtyO/Fstrelfx63XbyKRqjje7LeJ3HcnyP
Pj+r/la829iSPG9cS/U/r8+LSt5Dz9/Dkl+J/P1NbYupf0/1P8K11PO4Z+45
KNPvXT7zXMScwnxzL/NM5DnjEcmLSOdp5n2eKenul3seWTTyfDlZOqV02mWe
W16JPZ8xj/3De4F9I/mSyHPkXdKPWNMzz5OJ5GUlH8z9kNxa+sOk+4KO/Vmf
N1X/pjr/yVyvsB4dq/0deI7xXaR/kT4/K/3vpb+x+j+XXMdu4ZlVu5F0TpPO
NZXnZebkr6ST4FtJ5wcd15TOMdL5W/1Lqn9/nl21m+W286LI/tk12GySn6vb
Jo+5vtp2Y57XefbV+U2p+360CvfoTH3vcrqPV2E76/tPKW1fXcqcV9qHebFu
H4U54TTpLyP9S1P7MstKvhy/Cpsn9Xv9hM5hUt1+Jb7mFpH9zbX0W/aWzkqS
52Jv6/x7S+8OndfpkW3Xb9WfZ7Zdz1LfXmqvl/7aOnZf7WvH+LHXwP20b3H8
DI1zPn6g9i+iz3tzvyQ3sQnrXl/3UXuTjv1D/a3Uvy9rPO99w/PGEbxnhf3k
1SPb5m2D7fe1dNbnOkg+K7dddqXk1xq+Pi+wBmb24bDrvtHnDdQ/h2sq/V6S
35G8QP1d6rZtRkt3O8k967afsJ32V3/fyHPgddJ/q+F38038lcz+Wf/Yvinv
6bvY1Jn9uhul/17D/t0RsX1l3tMLsRsb9knn807pfEZxPWLbyzwnt0jnlNzv
O77pxYWvyW+SLyz8/Owe2/dtmT81ztuZfd3PJf+FbSA5KWz/YfthIy3Uvu51
27e/St6ybht1uHQ71W2L8j7xHmHf/iadrSR3B88oPE7Xum1i7OFdpN8z8px8
nvRfbHiufl/yebntzR/py/0eYgMDkGyo/uek81PD7+Z3amPpDNW+L9QfY7uo
v8F6m/tZxD7kveQdxCY8RfJOddvA/+n4HSVH0l9T+qfif6r/T/VvU7evwfvK
+z5N/XPV355rix+PzRPZvzhJ7bbqPyb2OoxP/YD0v8CGk9xR2zphfXlW+x+o
GxsZq2tTL42DPK/+h+rGNE7luql/oeQXIs+1yKepP2He1+eX1P9o3djLmepv
lJ4n/mDuq9vPmhLmDu77UOn8WRhjOUrtvMJrzc3gGIV9uqc1xu+Sv2KNU//P
hf2+J9X/a2F744K6+1ZmPsDn0O/cUvKK+u0X1X3sltKdX9j/fEbH/lXYt11T
OpfW3b+5+vYv7J+urP6L6z6HZ/S77q8bzxmtc1hK89KI1GMeF/zW2/X5Q9YD
5hzJsxq2RXbQ/qiw3Y4tBG4CZjI89nPNvXiY+U73bl3JR6n/4MjYyEjJR0pe
i/VJOp80bAPNVvsLdjLYlsa7vPB8u4H6B0pvbckPqf2y4WPvqdsXx7Y5Qbon
lp47p+n4O+vGB4apf0Hhe3WM2r8L93+lMeq5z+OucC+5j3drTk5TYzIn65os
qWtynD5vJv3jU9shJ2mM/wpjN/dIv5HaRwPj6t6w7QQetZPkPSXvDE6T2ZY6
MdhknPOj6ttacmfs5NjnjHxG6vPYIdgkH+ZeC8AftpF+V8mTtf8JHX+bjtkS
ezKzDbRN7HZr6dynvq0alqdJvkPHbFMzBnhH3fKd6ns+8+dL1K4v/TVqnssv
q3s+5xniWeL5WU/7z5XeJXVjnh31uWPNuAp9HNtR8vWSN5HcSfsfyvzbblW7
acP9L+h33VTa5rhF5/CA9l0n+VrJN2R+Rrmnr+T2BQ4N94Drv5p0PmMuqLsd
pXa4tgEabxPWV+wVsC7wjpptn5F12z8zNebNpfvW1TgLY/uA/dS3NvaZjv1e
/Wvr+x7FnuSe1e1frKf+mrZh+nyg9NfHzpb+BtiWiX0l8GHeVd5T1kXuDxgy
tuwtddu3j3GvEvefkNr2pX/L2DYtx4JFb96wvQpWdl7d63jX1Os68mUa56rE
88Pw1DYu+teo/xpwMclXq70i81yyWHj36T8UX0fHjMfeqHsNwo9+X/orqP9i
ya/rN26trTO2jY79um75VfV1Kj0Ps+50LI2FgHMsmxrrwKefkXp+APOYlXpt
GhR5zQHf2EnHdi69ll8bGw9B7iP9R6R/ZM3zzDrSWa9uvGep1JjPubExH9Y5
cIXlUmMLAyLbGuA/O+rY2wrbCVcE3ANb4jbdt21Ky2/xO0rbFT/UvfZy/v10
Di9pzBMlf1b3Gsv39sf3TY0pXQc2qc8bSV419vPbnjlB/TcnljcGi+B+aN9N
6pss+WrJ68fu49i9UvtC+EHrgNNI50LWGvxdsIaa/VD6kA8Br0uM0WEDr6k5
alF8UOnfmDiOsDZ2e92+z8v6fVtyL/V5kvS3Kr3mgtnRgoNN5x6WtjEO0/g3
JPazwLpeT4139dH+NzTuIrrGfVP7V4zfQe1Nmd953r1B4X3pp/bIujGNvaUz
JfUacbXOYQ2dc1N9P+l71lH/Y+r/VOO/r/s1QccMLu37gxufUBoTYE4aWNqX
J17zemEMATx8Fr6y5NN17AtghtrW19hvFcYiwMnfl8472EjS+aQwNgJ2/VFh
/ATc+7vC+OenkufrPO/V9oh+W2u11+j4kfp954ALST5O8qm8U5KPBiNQO0bb
ZpLPU3tD4WexnX7rrcR1NM4n6h/G3IEdqHaUtg7gUWqP0baO5I8YuzRO8oXa
0aXxYXylS0vbaUtovLVKvwP0b1z6+X5Wv/tX/e7/Yl+H3/Grtd0l+TK1i7EG
6NjzKj/bv2Gn6fzO0f7O6jtV8gWSr8Ev1LZA+7dV/wWV54pOas+q/G4y5q74
BhrzNsmTtJWSb8GHY10McjfpZHw39700xruh2usK23in6zval55fFqmM/YH7
raf2msJ+AfbRvsFGWjXEYrAZ/pL+3Wy6ts9xz1PP0+1C/AVbZXyI9WCHfM8z
ljvO8h2YhOQukn+Q/AnnGjneMTExnraF5DUbjpsQm7gysS+2mvrO1neeUXfc
5Fz1L1FzPOXsxLjW6ayTkpeWPIo5ODEmRmxlnI5rzbqqvrMyP7fgWWfX/V08
92fVjVkRT+F7lpU8A1uuNFa5to79F7uZ68N8oO9+XDrX63qsrfu4ZMNxmfHa
34b5imcGDKrh9+fkeot5W1s9cazozLrjM7x/xGjAzkbXjQ2uJZ1/YuOQq+j4
MZnHvVD9oyWfKnlPyScmjt3hK/2a21/aC9xY8l6R/ZHvc/skPcCN8fUk/67f
9KXkXSL7TT/l9p1+Uv9nkrtL/lry25K3kfwt73LuGOVXkt+U3EnyL5I/zx0D
nc4zUxqn/UPtV7ljr0XTvsjHul6LS75B12Uj/YYlJN8oeRN8YP2OkxLHElZq
Gpfrm3mdTALm/J/67tc2Xf2xdK4ujGenjFMY719E8hPS2VHf3ZT8OGuP5H/V
3qdtqo69KLwLzMPv1P28gx+Oio2X4c8wTzwR5oq2sdtVap4z7gnzBu8GsTLs
gZPV91Rp7HKs2mdLx72Yn6aFOQpfgHkFe2C12H2r1zwnEt/jWd1I53VI6WeV
OZS4ok651l79h6l/KcmbSR5S+r0YqvaO0rHDK3T97smNDTC3rhH5vRip/VNK
x/821rGHl34+z5D+3dJvi/+p/oNLv1PM78tHLaZXi/22UmGcijmlHb6t5EUS
Y9S4bMfqz32lseI09rXhPP/D10iMjYDtN8AAasY9huuZvqFm7CSNrPOxdLtq
8IV14y20E9X/k/Q/0L5LarYX/q7bXtpWuh8l1vkR26HhmAW4zQmSr5U8DPuX
E9Z3PBW7varm9WajyHPO4rHXh2X4XbHXAeaQ6zT2vTp2w8hryENhHTle7SOl
ce/x4EXSWUZyR+KPDY//lK5Zqu0CyU/ruRulZ/Fg7e8LloaNzrOj/UeW/l7m
9FWjFtiz1gHfrvT885Zu/v3at4vkB9S+lxmH5H3HR+5RMz+BPnTeASfgnGqO
9YN3Eqv6U/1Tdfwhkh/SlwzW+czJbOe9VbedsL2OezHzuDPU7tDw+M9K7ip5
Z8nbqX0qsz8PrjG1bj7AbM4rsfwA65XG/zQzH6Objump/m/gJoBB14zjfZM7
znufjntV+x6sm18B3g3WzbzE9/C9M7X/3sScCjAFdJHBJcCEGbOXjvs88+en
pftrZrwfPxq8vn/NfjEY/oCaYwnghmCGcBiIE6ADtvx77lgz2BnxADDD2wOG
iPyh5CHEM2rGzv6oG18ljj2v7lj2xNSxCsb/IbWtz3O7K75AZgz0I7U99Lmv
+vdUOzczfj1Nugskv1Y3L4KWe8ea+mbdPA24GcQ8iHcwZzF3gcP8qOP2Uv9h
NfMxiDfwe39W/1OJYx9gdlwbZPABvhP9vSN/B+Pfp/75+CK8Lxrn6IbfwT31
bL6sfZV0/4vswx3Gwhb7PQDHvgq7Qs9AXcd8o+9cAx+beQCsrjSWPUXyTqUx
0ick71Lahv1bYzQjY8i91feSxi31+V/mlch4+3xsssgY+Aiwsobnll8jv+Ng
s/g7dxS+F7eyPvK+sHZz3kHmfsE/II55e4ixgvEeDp4ZfJwF0m8dGWN/Dtyx
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
jobrI5GnfojGmFe51hJ2H/kV2IpbBt7aN+qb3HC9pu9rrt0FhgMutB3rZ25e
GvW3wIXAlE7LXMOLmCT5pvCgztX+B0vnMd2v/m6BowUfq02wgeCoHci1qVwD
omtljhycNsaAU4U/Mq5pPtWE3OcMVwZ7dXjTHKQ+6j9MfX9Urgl1pNqfK+Nr
W2auNUnu3A0N18z5vOaaiNTeAW/pUfpZHVB3jshjheMR1L85snBMsGfTHGDG
27Vprm+HzHUpmK/g1FHXitqzXOc5agcWvobUMwMbBLsjnxEeCDncR+gcf6yM
/Z3UtI9woHQvzlzvjHgy8xp1JImzrVXZDqe+3dXqv6XhuDExGWIu8PRfDfMS
vsCIpnO691X/+ZlrorEe0ke+Nxy8k5u2gQ9hrq/M2aMu3WbBl/lK8rbSublw
HUQwCbAJ6jtu2fS8QT7WO5XzjuGnv6v2/MocdmIfxBEejZ0bSUzkEckD1b9T
ZV/+cmz2puM90/DjK9eN6xfmbfjGl2H3NR2D6R/m4cnqP1jtzpXrKj5Tud5d
R+k8q3ZY5Xp436m9tnJtP9ZD5mvq9n0k+eLK+CJ4M5gwtalmSb6oMhZI/IQ4
CjWuPpR8YWXs8IPKedPgi1+qvaJybWByQYmFTY0dQ2OdoF4g7yvvLT4edg1r
G7UMv5Z8Jc615OdYoyrX4Xutci42dW1fVTuqcl1h3tOxTXNAR+Tmc8IVPTk3
1xRO6GG5/cLZse81zwG8zFV17Cr8Lmw6/DttH0heNDfmBg8a/uqIyvVYFs8d
M6Iew4DcvuD7sTF88P/7w3MypmmfFv/32Mo2VYdwH7GdeCZ5V+GSvqK+kyrX
P36Da1u5tu7rlWvzTpb8ptpzq1CLV+24yjVWZ6odWbmm6cLMvhJ5tDPUN7xy
nb+Xw/lTR3A680fluokvhnOjduBLPG+V6zXyrIDFvcScr74zKteywlfAZ6Cu
Uvum32tqJ2zc9NxObY8fMtvRg6S3SdNrPbU6yP3nN66An9b0PEBdhw25D4Xr
K6wnebfCNT8i6da1HST9GzPHzcnZnZiZB9I2vO9wUagPdGzTthBxyC8z+wED
gy+CD0L+YifJ1xauabpV0+NTT5S4H/E+6oZu0bTNQ/1RcAXwAfJ4ujf9nJCH
hI2Kb3hs7BgUsSjyRDs2vd5Rz2anpp8lcqT+yOxXUj9yR9apwvlS52TmwJD/
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
              "]], Polygon3DBox[CompressedData["
1:eJwtnXn8F9MXxuczn9nnQyJbpCKRNfsaJWQrREKEKCRSsi9RWUqLJftaRPZk
F7JkXwsVsoWo7PLLEn7Pu2f+mNf3njl37iyfmXvPec5zzrd1n4HdTwmDIOiX
BEGkv2vHQfChGr/WgmChFB/nQfBqGQRbaf+r0m+cBcFJifV31YPgZOn/kP7B
NAg2l3yu2m9ru1FyC8md9Pch9d9FYz2rbXe152pfT+n203iHS4415kWST5X8
ns5zjPZ9pfE7aJuj8V/ReF21f67060p3oY6P1X9VyWvq2GO1b4H6XqN9z0pe
S/IZkkPdxwuFrlXH36192+n8W0t/stq/S/+Q+p8m/TxtTdRuo/EeUHu/RhD8
rWMfVP/XdN7e6v+5+u+grZP060p/ivYtlfyl/v5P13Oajm8r+aPYz3Kx2ntq
e0PyUZK/UHtHbb/mfj5Hav/XOt+GGm9lyefr+I2kv0DyV9rWk7yF9N/o2P80
/nmVfpLkmyWvI/kb6R9R3266nmW63od1vevq/vqqz0L1vZVnrPNcIXk96VZS
nw/V/lrH95FuTfU5SvrJ1bNpo33farylup4p1W82S+N9o33tpNtU51tD/d+J
/LznS7+65Lci/16fS95Ix92g8ddS/3XVf6iO/VpbW8lbSj5P7fmF343NJb+j
44/WMfN1/M7a7lF7ko7fQPqF9Ne1vKPtjtRjbKJjW+t+39Q5v1T/lXR9R+qY
T9Ueg17tianvZX0d30bjf6W+ha5tqbYP9Pxf1nhdtH+W9B10/Gk65l8d/4SO
2U3td3V8N7X3lv5Q6c/XvhV07Ezt21ntV6TfU+1dpd9c7cu1r5X0k7XN1vif
6Bob0s+Wvq3O863O31S6PjrH1ur7qI7ZpnoeraX/XPpI+oOlX1XH/qHtCN5v
yX+qvaPu93Mdc6T27an+o6vzpTpujq5vkfpsVY23p+TTpa9J/zy/v3RtdPwZ
2lfn++Pdknyq5L80/jfq/z/t66K+Hfke1d5Q+gulX5n3Sef7QueJ1e6h/utJ
/lJyKnmJttt0/KrqO0i6fzTG/jp+fR1/lvYl0j8t/Rpqnyb9f9LfoPbFupdc
7Q91vsv0vP7V7/G69u2tfS01/sca/2/1/0HHry95geSV1D5G+1pJnhf59/pZ
++Zq/O91zm117FYaby/pr9c5Ngo9Rxwq3Qa6nqGJx/hQ55urfZl0H6j/rTp+
FelO1XjLtK8n76r6X6B9TdR/gPT9tc2X7ittQ3T8X7reJ3S920teTf3/Kvzb
rKYxvpf+LekP5Tlp/MOkWyS5qcYbyDeisX7gN1X/HaU/UO1vpY+l78scob/P
auwOvGvSf6HxXpd+b433vuSDpV8m/dnS95O8pdrjqu/7Pm2fqv9r6r+r+r8t
/SzJMyR34ruVvIH+fqfnt4r6/s3z1flXkP70av5aR/qPpP9T7b207a/rPTfx
9/Oa+nwp+Scds3N1fW2ZO3X8WZI3UP+31fcTXdPhkleS/JXO/4b0+zMu37vk
FyRvIfkVyfM13i8aYxf17yD5r8zv+2cao4fkmRrvVtYE3k1dw5mln8dF0qc6
5nXpZ6l9oNoNnW9fjf+D9NvpmNeZrzT2f9qOln4N6e9Ue6H0a+u4syUvUP83
JXdX/894vtJ/JzmT/gTp32O+ZY7it9T5B0k/p/C5md9m6viX1L8D86DkdyW/
KHlbya9Jrqm9k+5nga7xWB3zte5viY7fvZo/JulZ7yrdU6G/3y11vvskb1LN
j3tLHqOxcl3LdK5Huiskl2q/oO1gjXeQtqnqe4PG+Ej6q6VfUboZ2u6XfIrk
X6S/R/Jaur49dT0H6pi7tO8Ijb+i2qNYCyXvIPkk9f9J7bvV/zEdP0jyEsn3
S15Dcqg+D0q+hvlB9zJL9/iQ+qwnfWvJMyU/IHldye/q/o7VMV+p74W8f9J/
IP1j0m8ofS+d+3Btj0l3s/rcIv0q0o/X9YzSvo0kfyj5SfXfRP3bSH5f8lTJ
60u+XfKqkm9R/zHq/w/fQua1b3fpr5ZunrbWmfvsKv2ZOvZP9Z3C/eh57KHn
sY/0d2jf9tKfKP2Pat8l/S+69p9ZLyX31fVtK/2x0i+WfIf0zaU7I/W3dJzk
59QeKv2/0j8muY/6r66xr9K5z9e+9rw/up6X1GdLvje+ZW3/6vjja553lvG+
1Tz/MG/9F3vuY/7qJPk8yctY+7XvVR07THJN7Se1/Sv9PMmXSH+h+u8ieYjk
PyQ/xJwqOdP1jGC+lLymjo+07yHpr1X//9T+TP0vlXyR5I6Sz5H8t+SpzAmS
L5ecca/auki+THKi9jPavtbvfbrG/EPH3s16xHwvfSzdNG0tdf/v6f7v1b5W
3L/kd7HPJLeUvFjH3qn2Wrzr2rrp+Gslr8y9ajtI7Q20bzRzKd+X+s/XvmvU
HqZzbqd721bbTawtkjP9vh31+/6gPlfTX3/v1fE7Sre95M3Ud1Nto9W+RPs2
ULuttpGSh0tur/bm2q6XfLHknry3On5szfN7qPP3T71W7aN9K+p8nXW+XXXM
DdLP1vM4UfpFod/PXPpO0v+kccZLvkq69TXeSB27GnOY5F+kmyDd5Tpmnvqv
ov43apwx6rOC9L9JP1H60dLvpvN00jZJ8jjJY6W/Tn0vU99mGq/U8bvp+O3V
51r1+UC6furzbejv6ya1N9b5r6rZptxD/f7U+EdIbqjP2+p/tPp8Efr9DWhX
1877cZV+u0+0rZH5m91Uv+dsyc+pz+YaY3f1f0Tjd8IeYb3R9eyl6zlC/acw
/0s/Ifbc/La29VPbE89Id5v6H1jN/6ytb7IeYV9KXkXt17QdUM3P2EpvYC9J
bp7ZF+jI+6Tr+VPX82h1DVNKr9+PSd4N+0X6Zvgrdb8DP2r/MaltW76PvTXW
Xtom81vxjWN78X7VPZ/hJ9ykbVzN/sKqur/ddX//6ppux/5MbV9Mw9aQ/jDt
b5e4/3z8GfXvov5NtO+BwHb8LZF/D+z5P3T8Um19pTtB8s7YaxrjMOlzyb/o
uKaZbd/ttG+m7uewhv04/Lc3pN9fx78den18WvKekl8KPYc8rHPtJXlGaHv3
ackHSn6Ha5XcUdfXUuMdrn0fad9nOv5QteeGnu9j1qrMvmBXyW/p/Ieq/1rY
bepzv8bbI/Vvz3o3Vcd3ljxd8q+ST9SxJ2h7kbVQ+55U/27Sv6n2Ido3XuN1
0Hil+lwgua6/obaBag9UnxV0fc35Pev+Rgvpcm2D1R4s/XXYFjp+ZXxM/C31
31tyH8mPSH5Gf6dpm672RPV/Tte3t87/CnOh9q2l43ONf2Ldc9KDpf3dh9Vv
V74/jddK4x2pY+ZJnq/9vdT+JLQ9tVj3c67k/yQ/qvGuk34PPZt63TbqdOkP
ln6W2sdKf4Xk81hjpR+m47/jW9V2nHRHqs80Xc8BOt9/6vcY/oyufYH2bVzZ
C8+rfaD0gc7xpPSDdb6d1OdR6a/T7vM11rX4OIHPMVvtHtr3QWh/MMc3yewb
H4iNofP01L4PQ9ubhe53Ne6/7jkXOwyfD1sIm6gh/RrSP1KdD1v7cF3PsNQ2
93D9HZPY9kaepXZ37ZsZ+hu/QO0rI/v2PCN8HXy1qG6fZ4DkLXV991fr/Ydq
f6dzbCq5veRXpN9PY7wR2mb6I7f/eDR+mPRnSv9jbF8Ln+ufzPbZNzrmUOk/
wf6q7L1jsad1LQOZk9W+Ufue0HgN9d8ls7+YSHdyal+E9x8/a7GOP6hmf2tb
XdtH2Kyx8YMdJH8s+d3Y/i5+EvP9ITX7SwskPy15gM41QPLKYAupfdfDa/bL
sL+Ordk/OzvxetCzZp9soa73LPVfpvbDGqO/9O2wbSp76qLE6z22Cj5AN+lS
yf3wPSU30f210PVNq/t+e0pfYBNhK0m/sc71s87xdGB/ZufC8/8H2r+r5F/V
9021z5b+DPX/Sdfyo7bjJR/NnKr+c9X/FfXZRv0H4rur3YXfSttN0u+q5ztT
+y7j+9T1rCC5S2Z/Ftzl49jYCvjLI7qWfTX+q6HxpLXBf7QNVfs87AHuTf2/
l3wnNhTzGetT3TbCb9K/Lf05vBuh/WLWt71r9o9X1VjNtJ0n/dnSX4nvo+t5
Xn3O1b5dC9uXcyTvpv5DdPzu6v9s9fzm6/oG6/p+17F3Sv6WtU19T1b7ZJ4H
76/k/Wt8kLIf1PfU1L41v+lG4C/S74d/rW1QYnsHWwMfeZHk3qmxl/aSP5Z8
D5iThuujfWeV9r/GsA7pms6RvqvGfLnu61lT1x+W9k34/u/U9T6kvu0l3yp5
J/V/WPIWku+tGRfCn9isbnxoauq5kLmcPqfo+R7d8DzPvqs03qTMWEXGeqn9
H+r4G7CHQ9vlfNN8y9jn+Cv4wPiWnONeyXdEntuY48DXrmYNVHuE9m2jvnep
z4aSJ9SMTbaQ/rq6McoNM9s8vPsTte8Z9b038vj4sM8kttd3VXsvXc8jqX0y
fDEwFbCVY3Q/A2PLE6WbzJzH+6PxT9D99pb+wcQ+E3PbZL6ZyHMcc/NR0g+I
ff25/r6oPt10ru7Sv6d+V6r/79X9tMzsM2Fb8Iy+Tuwrnav2iTqmUPsl1nS1
D1Kf17ELdcxv0p+Jz6LrObVhOwj7h+97WOK54NW6/cUWqX2NN+p+v1gjmKsn
Sc5Sv48Pqn1pZR9hTxyf+nsCb8W+Ojf0erx26vmDsa9njdP1XATGIfmAwNgZ
9tMLdWNo73Ctet/O5L0Hn8r8jfAuzpDcI7MPge/wluQH1D5f+xar3Zn1ODVW
MqM63/uR7fUJkn/SPX3PS6brfVl9DpB+38w+GvPdS+pzG/6J9n2rdjuel+Sz
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
wvk33Btz5v8BfS7r5w==
              "]], Polygon3DBox[CompressedData["
1:eJwt13nUz2Uax/Evnuf34GlKFMOczJByRifLDNmylKGaZu3MNHSUZSwhSyQh
u4jHOtlFMrYYSyHE8AzjtEznYAo1SquSbFOyZZnXde754zq/+3rfn+u67u/9
vZfvr1rnvg/0KZll2UqWzzaWybI2ZbPsUoksa1I6y86AQ7DLbAm2PC/LnsTu
Kcyye1kxzRFsldhRNCXErqDbVpBlw+hupbmFvax/dC7LOtA/we9Cd5PCz2LN
6J7EumJVsQnYXVgt7DZWETumRmexGc1wdYbqb0y3XK1+/HPsBe316vbVVyAu
x9oJ+RXdMfx+mkNsEl1NrDHdG/y2cpZT4ws1rsN/gx1mU+l+ym9FN0euNux8
qSybZRwX89OcDGYDtRvm0vy8RPOofNXkG6PmaLYS64XVwKbzp7Ef83vh14vd
pe67Ymtpn9I+ycrJ1wdrT/d3ukfUrIj1xzar+SOsJVZeroewRvyGrB/Wh31u
nNX5N7MK6h6Vsz2+lf8D8XPMSzN+c7ZWjTWsgVyz1ahF35S/PN4J1o2dVmMj
toE14s+nu51uGc2tWM0YK/4wax5rIOZBuwf7Vt/SGEvMgXa7GDObaEwN4h0Y
S32/E/hfGVsn1oVfR4059Ef5PcRf1r8oL7FjWE/sCv9FNjfmDyvGunmm7myp
8W3jl8Pnq9EGu6d0WgOP4hciLi+thz1YV+w7fhEbgV2lfRU7bqwnWEf5LmEb
sM/4n8fzYl+K7cA6G3NtY54d64u/na4jfSe2mO5E1IjadHXp5tENoHlLf6n/
z8Ed7FuaXqy39io1FtC9QneEriXdG9ib7Hma28zpx/o7yLeVvi12Mp4Xq4c9
hPWhaYhd9FzPYTVLpv1XBzuLjc+lvfhgmTTXMb8x938UOy/2HzZTfyU1M3y9
2FfYfu48fkN8Nf9vbA82C6uP1RVbh23AxmJdjX+hXLXpPlOjE1Ycax7rHu8z
P405xt5A3O3YdWLHG2NvsS9jn/pthu2Qv5itkKt77EuaGewZsWfjrMKa629R
kM6FNfz9YuuKXY2tYRfoHmf91N3AX0S3TL5utOfkmsZGY5fjPGQPiv2l8X1C
u47mPfl+jr3K38QKaabG+SLfXTFPYk/z/0rbVP+d8c6wgYXpncR7mEHXgr4y
NivWn3Y5uin6/iH213R52h8ZyxV9RTQl8EfUXcFfyfpjdxSmPd83xoS943c1
9lLMEatN/6Fch1kRv4a6P8Qu8C+yHca1SY3D+sbxm6tRXp5DdH9W/zm5bmTD
Yg9gB/UdiLMDWydmLasn3zpxrcRfkO99+U7RrcHuxs5j72EnsO/4I8WO0i6W
7/5YX9h67ON4Z3gl+sNqDMcG8zfTtaYrjvGyI+oti/uDvgp/I91X2otpq4gd
GWsSW44tK0jvqgS/JNupf4uxHMFfM777aK9irdQ7J34GVgHbFudenDnYeqyS
2MY014r7k74x/K/5vzWuXcYyge73dO+LnUAzN5f2yWKsIXZcTHfsbbo/YJ9g
M2OPYx9kKddYOSfq/2cu5a3Knx1rHLuBdjr2dLzv2NfaK+g6xpyKfQafqT1G
+6T18CLNa3EH82uwKbEX1f0G3ynXdrFXsf38A2wEVh27EZtMVxpbF/snzgl5
j8oxWr6x2iO0j6txyO8wbAA2VPsYdtbvuBg3Njc/rdem/CbsCX392Rd04+O5
tNt5jj1xJtL+Je4sNgQ7j72LFfKvYWfi7sD6yfcU/6Oy6R56PuYq9k7cqXFX
0LXHBtDtpnkscurf7TkOep4RcU7iW+P9013K0jiepZtPtzeXxnQBm4AtwPbF
eYrdFXcvmxbzGd9IMc/8d+TcK0+dOPvY4Fgrhek5B9A9IMd0/jx1B8lzRr49
WE9x/y2TzoaV4h7LT2ulL23lqJuX1k0jrB9WBft37COsGf/OODvV3YlNUOdt
un+xZnEWqtFFzg6xZ+K7S39lbKC+nLgZ2DH5ZpdO3zbT+C0K0zNNxd7MT3dM
n9j/2m/lpfvmabFX2FLtFdhT+qbEmcu+EVskdjNWgWYu9r32/Phu0jck9rOc
9czBImNpq28U1qowrZ0hdGOwhfHNIH4h3c2e4fpcWo+TsHH6W+TS2hyGraJd
FOdGQTrjF/MP0B3Q/lnsfVYm7jH8tNhr+EXyDuIfLJu+eebId5++iTGnoYv1
aSzLsV/wW7P1cf973t/Ju0/cXtbSGC6K7V6Q7sr5cUbH+VqQ7s04+1bjx+Xp
m0vn4NbYl+zTGCvWhHZSYTp747z9AFtNP0jcoLirsXWxb7BxWF48szy7xY3E
pvHb4BW1vxTbm36zfJPxntol4tuZnY49jg+n20Z3r76phSk+Yo5i2/U9jtWP
+9Yc9BJXD9sU51Lct3QX4/5kC/lb8Ko0N7EiZWoYxyLsBrluiXdCP5k/nraL
9of4WvmW0DXBTnmOHtg+7CexD2Kv83fIVz3mmmYXXgobzApKpnuxOP6XxBzl
0h3ZOr5L4myL8WPfy9uF/3WZ9H0Y34nd9VXjL1Dj2lz6zt5izK/H88eY9b9O
9x/6zmXS92h8D8V3Z9f8tB5foCsvrkZBWptDY57E19degj9M9z9bG9UK
              "]]},
            Annotation[#, "Charting`Private`Tag$14039#1"]& ],
           Annotation[#, "Charting`Private`Tag$14061#1"]& ]],
         Lighting->Automatic]}, {}, {}, {}, {}}, {
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl08dPVUEYhvHxci+KYIxboyYmKjEuTASxF8BeEC6iImDBhqigIqJYwRIw
RhJNdEPsMRj39m78I4h74sKG6M72G1w8532+b+acM2fm3vG1jemGISGEXrxH
9PPJEOqxByWoxkJUZYcwTe7FPqxBDdbqF8o8NKARpRH9TbII+diPA9igXyY3
oxjTcRBNqDSWlluwCAU4hLR+syzHVizGDKzTPyxb4jpQiyWYiSM4igpsw9L4
LebPkq04Fu/H9jhHf5mcjeM4gfUo098hl2MOTuJU/AbsxArMxWm0YaP5lXIX
VmIe2uO69c/EcdRhFebHd+iflefi/mI3VmMBHjmLVgfyiT/mn+UT+UV+xVP+
TT6T14eF8CsjhOf8Bv/N+429UP/h3/lLftPYX/UrfosH/QG8jmcvf+ANv20s
wd/ysZn2xDpy1e/UE+LeqadkhfBQ3cLH8fu8no/i3byGd8kH6lLeznt4MW+O
a+EFvI5Pjj88dZUYwwe8v4SP5H28kCd4L8/nTeb+lLmo5h/laJTzD3KSNY6Q
E2WH+67JnPg8eRXZcV2elcOH83s8i19JDi4jZMrLiFt01yXFh/I7PMm7YFtC
hryEFL+YHNzOcMGlE7Y5dMiEnJr6///6B/F4X4E=
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{1160, 1328, 2155, 1329, 3009, 1566, 1330, 2159, 1331, 3015,
          1574, 1361, 2163, 1362, 3019, 1582, 1378, 3059, 2167, 1379, 1590, 
         3092, 1395, 2171, 1396, 1598, 3094, 1412, 2175, 1413, 1606, 3096, 
         1429, 2179, 1430, 1614, 1446, 2183, 1447, 3023, 1622, 1463, 2187, 
         1464, 3029, 1630, 1480, 2191, 1481, 3033, 1638, 1497, 2195, 1498, 
         1646, 3106, 1514, 2199, 1515, 1654, 3108, 1531, 2203, 1532, 1662, 
         3110, 1548, 2239, 1549, 1261}], 
        Line3DBox[{1161, 1332, 1334, 3010, 1567, 1335, 3053, 1337, 1575, 1363,
          3055, 1365, 1583, 1380, 3060, 1382, 1591, 1397, 3067, 1399, 1599, 
         1414, 3071, 1416, 1607, 3097, 1431, 1433, 1615, 1448, 1450, 3024, 
         1623, 1465, 3075, 1467, 1631, 1482, 3077, 1484, 1639, 1499, 3081, 
         1501, 1647, 1516, 3082, 1518, 1655, 1533, 3086, 1535, 1663, 3111, 
         1550, 1552, 1262}], 
        Line3DBox[{1164, 1338, 1671, 1270, 3088, 1165, 1339, 1683, 1274, 3091,
          1178, 1366, 1695, 3056, 1278, 1185, 1383, 3121, 1707, 1282, 1192, 
         1400, 3123, 1719, 1286, 1199, 3039, 1417, 1731, 1290, 1206, 3043, 
         1434, 1743, 1294, 1213, 1451, 1755, 1298, 3102, 1220, 1468, 1767, 
         1302, 3105, 1227, 1485, 1779, 3078, 1306, 1234, 1502, 1791, 1310, 
         1241, 1519, 3137, 1803, 1314, 1248, 3046, 1536, 1815, 1318, 1255, 
         3050, 1553, 1827, 1323, 1264}], 
        Line3DBox[{1166, 1340, 1672, 1341, 3011, 1568, 1342, 1684, 1343, 3016,
          1576, 1367, 1696, 1368, 3020, 1584, 1384, 3061, 1708, 1385, 1592, 
         3093, 1401, 1720, 1402, 1600, 3095, 1418, 1732, 1419, 1608, 3098, 
         1435, 1744, 1436, 1616, 1452, 1756, 1453, 3025, 1624, 1469, 1768, 
         1470, 3030, 1632, 1486, 1780, 1487, 3034, 1640, 1503, 1792, 1504, 
         1648, 3107, 1520, 1804, 1521, 1656, 3109, 1537, 1816, 1538, 1664, 
         3112, 1554, 1828, 1555, 2206}], 
        Line3DBox[{1167, 1344, 1673, 1345, 3012, 1569, 1346, 1685, 3116, 1347,
          1577, 1369, 1697, 3119, 1370, 1585, 1386, 3062, 1709, 1387, 1593, 
         1403, 3068, 1721, 1404, 1601, 1420, 3072, 1733, 1421, 1609, 3099, 
         1437, 1745, 1438, 1617, 1454, 1757, 1455, 3026, 1625, 1471, 1769, 
         3132, 1472, 1633, 1488, 1781, 3135, 1489, 1641, 1505, 1793, 1506, 
         1649, 1522, 3083, 1805, 1523, 1657, 1539, 3087, 1817, 1540, 1665, 
         3113, 1556, 1829, 1557, 2207}], Line3DBox[CompressedData["
1:eJwNzz8oxHEcxvGPuj+KwXY3WJi40YjJ4F8x3HiROmUgpygD5TArMmE6xcSA
URhIMYi6K4MFsdn8Hb2Gb+/neT/1/f2+LcWZfKkuIorOZiJivz6iNxmxloro
w+uGiHI6olVfxn5uSx7AW9sKl9O3cYTbk0fxzrbDdegHOM39ckd6ST7kOuVz
HG+MWOLO9DJecD3yPU7Y1rkbfQMfuEH5BadsFa6m7+Irl5c/8Vh/lk+w6rtf
XEFPet8l9yFf4aMtxRX1DFa5P7mGT7YsN6m34xuXcM875vRZvgvn/Mc312T7
wW5uwTaE87aU3GxL4zC3imO4aMvIbbYsnnIV5x8THzcu
         "]], Line3DBox[CompressedData["
1:eJwVzzEoxHEYxvFX4a7uFiOhZOKIMuoUxhvImTBwBoM6ymCwOYrBZBKFQSzU
WRHFYqTYRbEYySnlc8O37/M8779f/dsKC2PFmogoYLs24jgZcYKt+ohSImIV
E+mIdn1NXseOvMnd9g3O6Lu8hyN5yn4g76NPP+Uz/KQiyvq5XEa/fM03+HO7
0u/kWwzLDzznrUe+15/5CTm52f4qv1U3/YPfkZe/+Bsv8i9XUPT9pJ7wb0l8
ymnO2lM8qzdyEyryor1VbsG8nuEu1Hmrl3uwZM/yANK+b3Abkgex4jbCy/bR
6jtu45xHya3TPi3PoMPtki9wiH9qfTS8
         "]], Line3DBox[CompressedData["
1:eJwVzz8ohHEcx/Gv8uf8icXE4sp4E0bj2Q6li0XR5crgb1EGBrKhRJlMdwaL
7W5UFqckkzhlVMRidHXK64an9+fz/vT8fs+TzK1OrTRFRM5z1hxxlYjItEQc
t0aMY6Uz4qAtYlA/xAnuXJ7Ee9sRl9ILOMddyvP4aCtyI3oJ17gaV9LX5TI3
Klcw3xWxy93oe3jHpeUqLtpOuAf9FF+5jPyFy7YiV9Uv8JvLynUs6e9yGZ/c
+8fN6t3+75b7adzdeNfWwy3oA/jM1eUXfLMluSV9CD+4hHM+cVjf4NO46Tt+
uV5bDce4bds0btnaG2fbOnCG28c87tj65JStH6+5gucfhZ449Q==
         "]], Line3DBox[CompressedData["
1:eJwV0ClLxFEUhvEzIC6o4IJxwrgkGZOjSZujBosguDBlwC3oYDAYjFZ3Mdlc
8AO4RZsLfgC3aHPBKjj6+4eH533PuVy4N1MsjS6mIqKI/YqI9aqIDWxVgjcx
VRfRoW/LOziQ97jLfJez+iEf4VQumJ/Ix8jp53yBn9qIM/1KvkSffMO3KNtd
6/fyHQbkJ5531zM/6K/8ghE5bf4uf+BR/+JPjMll/sObnKr2MJScL+gNciO+
5WbuN2/iab2V2/ArLyVvltuxoHdzDjXu7eUeLJvneRD1zrfYDctDWLUb5xXz
Cc4k/8iTWLPrNJ+RZ5FN3slzSNv9A3C/M4A=
         "]], Line3DBox[CompressedData["
1:eJwV0M0qxFEYgPFXITUuwcbShluRK8BSDCbE5Gt8E0IIkRU732OQkmxkZ8fG
LGQWU67Ayu8snp639+mc/+nf3N3fka2JiE781ka01EU8NUQ01UdUMxHP5or9
ER/iABmtoj2Yy9o+72EXf87/aPfmD22Ht7GFqnbH7/abPNsYscHr+NRK/Kat
8Yy2yit41W75RVvmgrbECyhpRX7U5nkuncWJ/bd33JiLWoGnMZneo5W1a/OZ
NsHjyKc3aV/alflUG+NRjKS7fTenX5qPteF0p90Q59ClXaR/oQ3ylDbAWbRr
57yo9aV3aL3cg1atDf9sgj3O
         "]], 
        Line3DBox[{1263, 1322, 1826, 3143, 1551, 1254, 1317, 1814, 3140, 1534,
          1247, 1313, 1802, 3136, 1517, 1240, 1309, 1790, 1500, 1233, 1305, 
         3076, 1778, 1483, 1226, 1301, 3074, 1766, 1466, 1219, 1297, 3073, 
         1754, 1449, 1212, 1293, 1742, 3129, 1432, 1205, 1289, 1730, 3126, 
         1415, 1198, 1285, 1718, 3122, 1398, 1191, 1281, 1706, 3120, 1381, 
         1184, 1277, 3054, 1694, 1364, 1177, 1273, 3052, 1682, 1336, 1163, 
         1269, 3051, 1670, 1333, 1162}], Line3DBox[CompressedData["
1:eJwVz78rhAEcBvCvO5wiBqQYJOUWma5wkxTp3KDLcAM3XCYDJhP/gMnEYGNx
i2zqlDL4MZyFzXCyyeQWBgOfd3h6vu/zeXvrHatul7baIqIqrfaIyY6I266I
iUzEul7qiVjTHyzLdu3DsmxbYAX9zsbZjr1XZm3zbEa/slG2aU9JNvm2vNhH
7GXvbdi/OyMG7QPSYENslVXYJ0vbU3LH+lmJlVmTtfSX3LC+xNzP9jed915T
X7FuVnTfsyc9zRr6kmXYorvOrnWO1XWNpdmc+4JV7DX3uZyyP1mx5ZNnfqyP
5MT+K0WWSza2r/fk0P4jBTbl+YA9+rcHOZN/bTwyRA==
         "]], Line3DBox[CompressedData["
1:eJwVz78rxHEYB/BH7pyiZLnFIBMbCwMWIgYMfgwopysGLnILKf4BpUwMynCm
W7ApSigyMGAzEINkcimr1w3vnufzfn36/mjKLo8uVUREVkqJiOvqiCtpTkWk
qyJm7Ou1EV9sTbcqDZJknzURQ/yd5XUrUid593+TEZ3sheV0i1IpH/oW/bN+
3nlOUu7/ed4jS7N7Nquf0GfMb3bJEuyGNeqn9JPyyo5ZyX7Bxs0xedIf6N/s
C+6fshH7sNyy7bL5/gfnEzZoDsgZy7q/wc+di6zX7JEjlmE5VnQusG6zS348
q8Cn2Z7zPusov8/9dnOX9bNN+w6r17fZW2WL9bE7/3co/982NcM=
         "]], Line3DBox[CompressedData["
1:eJwVz78rBGAcBvCvOudON0gGRRdlkDplECW5ulKXojtRsnAGEwaTf4DNZFJM
usJANouQUgaLH5OJGAwWg0sGnxuenvd9Pu/ydlfWyqsNEVGR70RErjHiJhXR
1xSxpIsZpj9ZL9uwZ6VsG2cl/cZ62Lq9VfK2AhvTL6yLrdiT0m/LyZO90z7n
3bL9N+lu75B71s5m2SL7Ys32tNyyNjbN5tkrq+kfuWQtbMb52f6hR7x71+cs
w6ac79ijHmYP+oylWNH5gl3rQXalj1mCFerv2IL91PlEDliwkm3Uvcr39V49
7E8m2ZD7LtvSm7Jjr8kEG3DfZkf+dihV+Qci4jJk
         "]], Line3DBox[CompressedData["
1:eJwVzz8ohHEYB/BH4a6wMJmO2YSFhQHL3eBPcQvKMVC6W1gwmC0ymJSiZHDb
u1mknJTBxE0GkcigpAy3+LzDt+f3+36efr1vb6kyU26KiJL8NkfcZiNq0peJ
6G6NWHHeaY/4Ytu6LclJln20RczyN7ap25CudNr/a4kYY8+soitLRt71/fon
/Zr7avqW/Yb3HlmOPbBlfVFfMr/ZDetgd6xHv6Cfl1eWsIbzNSuac1LXn+o/
ndftX7Jp5ym5ZwfsxffX3RNWMPNylf6z/V1ec6+yCXM83WNLrMIS9zM2ao7I
j7fO+SI7cT9mw+ak/SHziBXYnvMh69QPOg/IPsuzqv+7kH/t9TcQ
         "]]}, 
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzklOAkAURdHvzG4T7kC34NQBiSNG0qnY0WgUNsB2QDdih/0CBAWNMWCH
E04Nbn7Vfe+naqlYW6/OREQGT7MRJ3MR/zjGZCHiDI/823zEEfeHwzT5Ifcg
G5iFxYg6/4MaXrl72aleXlblvlDBL9fBnfxF74AbYT/t833uVtYzc3b3+E/s
4oZv62zwO+4fKOOb68qe7Wy7v2Mrvclf8yv6m+5DlHDFLXPF9FcUMNa95PPO
feTSv7gLbtVs6Te5pjca5jm/xmcxBRboOXw=
         "]], Line3DBox[CompressedData["
1:eJwVzzlSAlEUheGLouUUygLcgsMKTK2yyoy01RRSURkdYTe6HLSdADPFCRMc
+Do49d/7n/d6WEnKO6VcRGzL81xEez5idiHiEv8WI65lwH9zF9wM7i9FNPiR
ua/7wj3uXJ83n+En9nQb/If5lJvGE/x190qe9O9ci5vCXWfr/Jv5UTfEhGvq
c+YGPvDr3Ku9bg+s4Y9797oXe9X+LwXnavwdv2Y+zv5JjiTlVrnD7HukImNn
b/mD7HmyrK9yN9wmNiXN6B0dfZffshdlAh2nNBM=
         "]], 
        Line3DBox[{2291, 2449, 2577, 858, 3177, 2290, 856, 2576, 3176, 855, 
         2289, 853, 3041, 2575, 852, 2288, 3128, 850, 2574, 849, 3175, 2287, 
         847, 2573, 3174, 846, 2286, 845, 3040, 2572, 2448, 2285, 3127, 844, 
         2571, 2447, 3072, 2284, 843, 2570, 3095, 2948, 2283, 2947, 3039, 
         2569, 2446, 2282, 3126, 2445, 2568, 2444, 3071, 2281, 2443, 2567, 
         3094, 2946, 2280, 1046, 3038, 2690, 2450, 2279, 2909, 2898}], 
        Line3DBox[CompressedData["
1:eJwVzjlSQlEQheHGCXgaqajwIGAZaiohVZaBoYGh4yIoVGJQ3AfognQLIPPw
Gfx1uv/TdetWb5+vnjIRcYnIR3RRTiKS3YjKXsS3XOUicjKPVPfIZ807WOq2
5QP3JUv6LbmJhe6cz5g3UNSFLHN9OdcvuRVOcM8v5Bwz3UzecT23x+YPf5vy
Z9zEPsURUnvLzUQ3so9RQIl/48f8q/zFIf/unRF3qu+YD7ii+UX/x7e5/f8/
cU1uyF3IGn7Q0H26GfA39jqusQYejSq2
         "]], 
        Line3DBox[{104, 465, 1621, 103, 464, 1620, 102, 1217, 463, 101, 1216, 
         462, 1619, 100, 461, 1618, 99, 1215, 460, 98, 1214, 459, 1617, 97, 
         458, 1616, 96, 1213, 457, 95, 1212, 456, 1615, 94, 455, 1614, 93, 
         1211, 599, 92, 1080}], 
        Line3DBox[{349, 337, 1801, 648, 335, 1800, 647, 1799, 334, 646, 1798, 
         333, 1797, 645, 332, 1796, 644, 1795, 331, 643, 1794, 330, 1793, 642,
          329, 1792, 641, 1791, 328, 640, 1790, 327, 3081, 2308, 326, 2195, 
         1014, 2194, 338, 502, 1112}], Line3DBox[CompressedData["
1:eJwVzklOAmEUReHnQIWiEJ3YYRN1Iypig4kmDB26AE1Ad6Li2DHYIyDqalwI
3z+4OfeeVwW1dXndvJqKiHNZKEb8ymkW8YPlHEsR8/omjrHhdst37A2pcOt4
w33rJ+4jXOPmsMZX9aF+7DbAnBtzZX0Vv/DIrc0/2CuSc8vY4vr6ofsnlmSf
W3L70Ov8e/Jchov8Gx7wO9y9XbT39Nf0PfwLFmSXe06/x/Uws2exm57ntu07
78+k/8dH+Zcntz9uWs7sC5kA8ykhUw==
         "]], 
        Line3DBox[{2334, 2501, 2646, 977, 3193, 2333, 975, 2645, 3192, 974, 
         2332, 972, 3048, 2644, 971, 2331, 3142, 969, 2643, 968, 3191, 2330, 
         966, 2642, 3190, 965, 2329, 964, 3047, 2641, 2500, 2328, 3141, 963, 
         2640, 2499, 3087, 2327, 962, 2639, 3109, 2971, 2326, 2970, 3046, 
         2638, 2498, 2325, 3140, 2497, 2637, 2496, 3086, 2324, 2495, 2636, 
         3108, 2969, 2323, 1053, 3045, 2723, 2502, 2322, 2911, 2899}], 
        Line3DBox[CompressedData["
1:eJwVzLtVQlEQheExRO2Bh3AvoChqEWAkywQUVLAAzRU78RXQBmjmAxrBKvhO
8K898+9zpnz3cHG/FRE97BcilphsR5zu2HcjvmSTO5YnGOue+bb5CA3doZxy
n/JW35IHqOvO+Ga6hRtdI93jFjLX5+kdrnVPfGauIdNV5SM3lyP9H1dDl6tw
eximm/YPc1VXkmVc8XX+Pb3j3+Q/LvlfewUd/Y8ccLn5Nf21f6PPZdwLV0pv
ZRdrzHQrroix/Rx9bADrOiDw
         "]], Line3DBox[CompressedData["
1:eJwV0MtKglEYheHPmZmD8g6aW2bZTVQg5CxnWtoBikgaei8GHfQu7DQIKsuy
KIrm3UTPHrystV723vz8c43DjYNMRFRRm4pYwQd+cxH1fMRgOmJfr3B9+S7v
uB/9G3tY5grOnvIT/Yv7xC7W+DZ/qb+lt+Um1+d29CXuQr7K23Q/nUMbZW7W
2R4/1qto8atcizvXX7gb/QTb9qJ9Jp/lNdfBll2yZ9wbyXU0ub90B0/2lTzG
fTZiwX7E0D5CBfPp38iuNxrpG+wHFFHn/wHGpy7T
         "]], Line3DBox[CompressedData["
1:eJwVzzlSAlEUBdBHpmjGCszVENiDQGsXZiYQGSAISkHmfpxHXILTAigVRcBQ
9sAxOPX+vf/3q+q1eittZiIiYW85osgvVSbZiM3ViK75yICZ/nUlos9YPuaB
exJvp+5TRvIRFd2dectEv8O784a+Y95wzY/+xc4eQ7nNFZeUvR273+ZQLskX
5jnfugrrupZ8xilfume7ujTlgpzzZmSWOdD9udvnU95i7vy2FJF3/uBJ7pCn
SIETOxq+3f3/D2q6KgsIajEX
         "]], Line3DBox[CompressedData["
1:eJwV0MsuQ1EUBuBl5vYSnsD4tE9gdhgodRl0xqAGkoZe8C464wHcFUOthyga
kYYSEenItwdf1v7/fdY5yZmr7CxVJyIiZ3cqosCYjWQ24nQm4mg64oF7/vRP
uiYv8iF3fMttft2v8aw7YNE7OuYtP/oy67oTz7Z0N1ynfX1P16AvN7niSz5m
5H6Vhi63f2le8KFbYV5Xl885Y6jr2quzL4/Mbd71JfbSrrzFm7zMp3N3MiJz
HvCYdskoUkj/wndqdjfdv1LRLZDzD/W5NjE=
         "]], Line3DBox[CompressedData["
1:eJwVzjlOwmEQxuH5lwoi2iuLotwBV6QngZbKVoUzmLC6HEBtbPQKegC3ThEP
5PMVv7zLzCRTOR10+llEtPG4FNFCfTliPRcxyEe80lv5RP9Fd/GnW0MRN3LT
rGz3Wd6RV2kB13xXf8F/8jWs8H3dC72Sj91+0G0sdHnkMJOPzEp2n+Qt+V6e
0o7uXPfOV/GbfsSEP7TzRiuYp/8w5g/0m+7K/B0/opl8Zl7if9K/yMz2067u
O/2IvUTq6aWbodmDvEEbtKf/B4oxI7I=
         "]], 
        Line3DBox[{2472, 2375, 2612, 910, 3134, 2711, 740, 2611, 3032, 908, 
         2710, 739, 3159, 2610, 905, 2709, 3158, 738, 2609, 902, 3133, 2708, 
         737, 2608, 3031, 899, 2707, 736, 3157, 2607, 2463, 2706, 3156, 735, 
         2606, 2462, 3132, 2705, 734, 2605, 3030, 2959, 2704, 2374, 3105, 
         2604, 2461, 2703, 3074, 2926, 2603, 2460, 3075, 2306, 2373, 2602, 
         3029, 2958, 2878, 1011, 3202, 2702, 2465, 2601, 2915, 2901}], 
        Line3DBox[CompressedData["
1:eJwNyzdWglEQBtDxmEOnLMBFGDD90CGVUEHrsSaswQ0YGlHMAdEV6A4wKzag
i+EW98w337w3v10tVoYiYovHyYhNMlMRbbM+E/E8HXFp/6VLwr/ukBQX9h8m
vL23b8gtf+fkc7ms/za/WOfOraZ7cj+zf/LBGn+6A2Y5tb8z7m3Lvirf+ts0
S7o385UVbvSJ7kR+oUOavn/7HMtj7jV5Wb72vmGO6Kq6JflKN2ofNnMs6npu
eyRkybDrzZHbgzcL5o4uT4EB5Bor+Q==
         "]]}}},
     VertexNormals->CompressedData["
1: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
YtL3+ObaVFqfBl8ldTXI+gJCbuQRHsUnpEtpfQb/OzqXn6zvbUjNRcJLuCNp
Zg+sU3DyRyNE1vdSRGQom6z306OdtN+3yXNv/0HWZysmZ014CecUy1E87ecu
ldIj63O6IsIH600YGZoC65xuWXVGjaxPe+meGn1Y7yRneu7be3SmFpH1vUm/
PA3Wa1ehT/H04HnuQNaJvGokU2GdZ+2eU/6s3+moSNaJ3Npn2cE6u5h12mee
cCbrRJYf6ztgnXqR/KOdYo0o9VKpaUZcBUrrD2U/iuvBP64rfYfP5waod5pO
bUT6uo8UTbs6cWdr6W7Y1/xHvGfJvpDkurcmsC9W9ucReF70vhbP6l+t6LTx
cbFVv1pxuNZutdEHDchqg3jftM4KlPJFvCSSuxcHh3WowOf/Jlnf5rZvRJ5b
bzz5tKUL88TPpP1rP7lkD8EHKciKjYsQfFKOdajC87vOmitO29aGkn3O7Z26
rQ3/HF624YRpPfLa0R0WKFqJXuiqud3S7sVbwx6uh8+thAe1w943ovuBzbni
rl1YoEOU1sMu3983Cc7oneuRD4Cz1bX9m+B53WVnGpTOtaF7nUoD28614RuT
Jg72oc/oufPDLHn1SqSUEtH0J5D0zdNSQ/ic+8iFr63Tm5DK1J+W8zO68L3d
3VRHfPN2bCTnhSoWJ/9LJOfltWmc/jvbQmS9RmPb0F9WX8Sv2DbMrRHT37+9
Dh3PlE1cbpCN1KKmCrI39eN+HZMh+Hzlk1N9c2wq0Wik78In+b14zh3TQfjc
QvdBjOauJmQ1fb/owfYuzN+7hP47eZeTB84WtSGrEN8/Z4racKrbB8pjpZkt
BqCvB2o9raDv+Jm+G7+SK0b6Dqk/jZoPfZeWf5vyrbjntaugr8f1gk2g70rc
K3/C+bYKu3aROkDfT6x/cWhqI05cw6a+KyDBZDrpR1TYdEYR+jFmZiZ9fpGM
tszjuB6UHCf++1lcBR5y2rYLztF1IZ9ZzZYupIvvmHPZN+KpTP8O99o+AZ0W
949eCP1r5+S8A57/+ah9axR3Lwo+UHRBsLMC27wMUIDzUpa6aLvUtQvVyA0L
XXnfiA8sYVN9P/yZ3w103fLbX2Po9wWNr+n5HrK82EfqA03R8xELEK3Egg/M
D9BzFNBfJJTRhR5fdItumd6ER8oF6DnO1pHIAB+g8FVg4D3pvxXptgbwfHZ4
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
lL5fueoc38eBYmzPV7rxwc1e5JboR+unwNRRYZt5Nc4rOuxP6hNV6d2k7+9Y
l7/tLarFR3nFvpL6REhLivq/6o/yYVKf+NGYg6W1QCu6+C+Svl8x/DD+rd+G
o1TKdT9VtKPgwVs0Pk1IYCepT2x52NNga2UbSj21URveX28pE8mm2I3NHBcw
dRxvR0m/d1P/azOrb5P6xNn1xzcGT+ej/dJDNL9ZrfeekvrEQ+NJVqO1Fcgg
2YLm15Brfcvpt/34scj466TUQuS8hZG+/+akjTupT+w6mHRUTbsQ/V7mQd9/
j3eHM6lP/LqOafvC2CzskBtA398atcWU1Cfm6ezYfPr6G9y/QIHGP79q025S
nzhldGTAWj0bZ7TnnYT3r9S7wPNJchB78GrwX/qbi7MfzdD3D6/NTyD1iXMZ
V/sW9zXi24vVl8D7+1oOPCP1iS9cZnK7caMOf1/WR/03UNoaSuoTC9v/liT1
iRsmfWj9s22wUjMo68aMysjuXVgb5uPLou8Pu1wzIS9Rgz+lnlQh9YkDOm7R
+GfsmdLc+KsRm+h8XEHqE284dom+/6besQP8hnW4azJQk9QnrmRbRN9fnRW+
6lFRHbZk9M2zKOzD8SWtx755DaCUBqmx5y8S8Law8EXlLK3YjOsEzbtWtZHL
K9YXWGfRQl5St3jFkWn6uQHJhfG7+TEeq3x2iNQtfm/8lsZtkexagXrlQOxq
Vv2Q1C3eJWNB62r4sowV55372KRDO43ULf5p+ZN+bnb18fMhLxLQn7OqC+Bz
Xef6SPnNrJ/RlQ9l1ef6iG1nS+ll+140eFBv38RoGno2ufj2NZVObD6dRe2P
R8ZYdovmoJV5f38z13fgFtHOMrDzzZxWX7q2Fsn7a9ZwJLbi96L+1P59rXI6
z64GxNTwymT1RDMO0K+XZZLrRo6vKm8sFYpEawdP2vz72Y0trn+n8fdSEusL
I/j9/vr0MohD34wyff7FsbzB29vKkZWq8+DIiS58MbGR2od0g4+phFaj8cZ2
08oFnbgtKWMWp4UuKxQIzyTPZzsAeQxfWofgedbLNpv7ZlrROf4+VYPJZnzl
CiOtz12LxM1kCD8YPp6Wgzi3KajS+PvvV7pO8o5uL89hg7zLq269yLqkHT0T
jj0zkfoFKahsqsiY6sMXUoSofcFmxWzHw4Vo/z/F00fv9WHutW8ugN1Ro2ap
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
IHngsGniBXj/aazUSnVPt+idsi/hifBsydcQNz4f6Z15f1jPJ61FeHXm6bQ5
8MxCbyW1i4PewzPP4Ty9XAE34M1wlqEVtHcoL+wwIrziXq96Anj26OQi+l63
tM806NznSjyVEVYM7+m/HLWheGY7r6kWJflb8fPAH/C+sf3AEI0Lp/JfFJF4
gE9JnXwK8cErJp+2v/9RqBxF+MDxaFcjxJMVMjPvG488YeG1Inrk5NLbA3rm
KvOD6lU6I+VDFNGvnA2/voH+cdZup+ewXWIVFGWbl4VajFYPp5e24nBmSbrv
gLvtxYrlhz6gDZnz86B+v+zEY7r/ztzgUGOG9QfEJzUQBfvv7v8Io+2cXgbR
t7ryUfqE0/RG8xbM0s9K+38Sb71iqXkVGtSUPg7n78Zz69C69Jp3sQzYj9GQ
bCoB9fU8Kem0n0aOHww4n+SBLVst7Ls84dNN24vLXpfDeSUhY+c/K4xU468H
1Gj//JGTz+DcYbYj34RuGxTj5QUz+7YU047lwn6Vplkx6rB/ZYFxIO1nHevp
a3Aujd6a0dawrnzMfziTtv+oU2Gz9GpFY9JFTG+tP+DBv+cw3+efOX+5cMPN
681bvNXa/u7rSVs0s59HYanWTt5bl9TcP2bQfkKuVW6F84g03LaoFm+8hwzE
Zp7Li3nlQjg/4tixOTeVA14j00WGtH+15xkIxm9TMzEYaVCMONQlaP88x6fO
wviFmy/Ywv7FF4/7Z/rnGm36EteEtD8tmTM9WIr4o0do+86b307COQjLi5lz
z3RWoI8LVWj/IsphZnDe8YdtszjhXPZaIUuKz4vnczqHCP4P57pfg/1hFsa3
aD+eidIG8Pcmos/eQ3+cnPG0vWhnICfs59dbJb8SzsE6dkOB9l/P+oB/NvGf
Ol57aTinXMVvZt/QzXh0RYT4D59F+QDsn3tx8g7t59GfSFtF8vxxXsPLAI+D
357RduH9Lsc+EryCmoS0AL//6d9MN82T9I8DRiLFoP9Nf/uPdOIsIv3j2Kid
vdA/yp7pR4hVgS+d2K9tgXUrnKPCWjGzz7posVQf7K/uP8JuDvY/9nLlzDnw
1q4n4Fzg4RL8C84vL5L5TvtX2z57CvZ77Fx09xLgoxX8mfbT+XC+IuwLzvNb
4wz+eE5jdg20K7culif/x2zS057gvyqbpx/Qc5KXn9eB83zPbhrJBPvudeux
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
      "]], {}}, {}},
  AspectRatio->1,
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  ImageSize->{436.0638902520917, 396.52102607609464`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0.6666349577798647, 
   4.9999996428571425`}, {-3.6055511268834852`, 
   3.6055511268834852`}, {-3.6055511268835763`, 3.605551126883213}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.938803885320764, -1.6604130412037097`, -2.2212762157970727`},
  ViewVertical->{0.9215342833693966, 
   0.24014911620539434`, -0.3051277872639929}]], "Output",
 CellChangeTimes->{{3.9426193805441513`*^9, 3.942619394727148*^9}, {
   3.9426194293762417`*^9, 3.9426194755777073`*^9}, 3.9426195501256905`*^9},
 CellLabel->"Out[33]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
YuFLHKbRa+ns7DTFBw2B3OabLi9K+JdkJA0uKv+BBx4Yo+t+kZoVh7qpQ+Aj
J2qaFbGzw1XF57kNxllRhk5xLxHDjks6DCABpvg+yrMTBjQFZ4WzS923bx8K
Vj311FPYtYyzSrwc0mHdmLgbbRHwZwkI2Bs7HbgZhPJpUfYDOergZ+IizVGB
Kc6cNg5R9m0aYz2CcRb+vhw7vHVK8lC4Ylw52wJ5KJuwy0OJAZkDzYdmBHSm
i6ikoR2u/r+++OKLwj7c1MOKAbVd/GS1fbx04uimQcFLkmL34bvU8u5du3Yp
L8Rqtnqiz4gym0bImntjNZu3EgymxK4Dl83PlkQZWhM187X9qSiz5Z2YxVB6
RM04AVSBmnEU2cYmuSz7/12U2XRNnHMyGgPtjvg+XaMu7ao8iDiipQUMptQC
HJDTCH8/sB+BifwTcQQTfkT+7OwsulK0gTxCl/2VuK9mYpp844Ypz9nPhPf7
c1FmY1LcS6XTfjNRlZlRuEtoYS77vr2ML/A/JOBPVtthPzO+zk/b25IR/l6s
WiuDPpeAP1ltux0qbrTbEzSkrNaWLZ9LAJ+sti22u5UFf5Kg9b4buwLsx/f7
LxKQVyeqFVPEFtNm1X9qv+Vcy4nYhVln8AVRZpNdWbOY3nXipeZtw1H+fYKG
e8Z+NM6W/yjKbJIpa26K4YMquEH+PHZy1t38jv2uc6r8ZQLMRM8lHbpFbzw+
Zhk33FP2Mq72jgSYyWob7bvzBX8+QcMdj12V1VX/VQLMZLWi+7DT+xcJWk1O
jttmRf46AWayWiF1dv3/QoImOxYrs+YVvpgAs4CoNhhrHquF/1OCJnsCRTzs
/psEZMnKREbYU+EvEzTU4/b9+AB/kwArWa24A1Yq4JxQ9V8laKtvx07dOoP/
koAsMYEoD/Axef/rBM31mP3+8436uwRwyZr9MWis1v1iguY6IspsAwhRrRO9
Rh4ZPGg5AJM1++w3lC/9bxO02CP2/RgYUXMSJlhgqSao/S6YnMnqa+wnxCf5
XxK04eHYBVpZISfc4RnhPfCIGQNmTlYvfa8tO/4+hoPVkA+LMpuVFG/kOGB6
LfLE3TCdp9k6fIZfStCK34o1geUB/yEBebJa8V6P3Ql9OUErLsbKrJ7oKwmw
EzdX8YgGvtkJ/bcErbgQuzdW2VcSYCdrrojVHO+E/iFBAx6MHc1Kla+KMpus
yZrdouZ4bcdRvpKg7Q7Earbcm5xbsCmbrLncThK3ydcStN28vYwbg9+843Gf
rMxlv1J2MHcmaLE5+36cHXcl4EvORsv3tE1suYq7EjTXfnu1jPc3EvAlqxXv
OFnYxu9ua6t99lvEV3VPAr7kxHCJvQH4Tt2ToKHihiCWSK1MAJestjhWhUXM
ygQNNROr1sqGexOQJastFGTd7HTuTdBqM7EzsG75vQnIkjXvEDXf7HRWx26P
1f2I0bvdna224JL1FcSawbpfa+1Nw831oP0AfKPWJIBLvpWcb29xrnZdguaa
tN9rbta1CeCS1ebZq+UbuD5Bc02IMpsbE2fLSo7xM+ItGrwwaLJ6+dkMm5Jv
SNBmD9hPg6sXZ52EuWz0RYhnMYEO4GT1OeJlNr+zKUHDjdnvP/dDGxLAVimq
zY61s3UPNydowlFRZnNnGxOQJqu9X5B2s6JvTdCKI7F7ZBm0zRZpsr7MWH3x
lmdbgubj+tiZbUmAmOhqlAxR381GZ3uC9toVO2frJm9JQJmsOT1286wblZ6g
nYbsZZwT8nJsEiZ6MPOTFzaXk5GgnQbtmHB7yquySZisNlVssrmb+xM0kpxt
sY0LUxNQJauVR7TlQpa9rfiCd9qviqFOS0CVrHab/eL4LLITNFnEfmM4BzIs
pGRlkkWbl4nLYauhxGSK3XllJiDLLaoVyfMx9c5L0FY9sVO3zNf9CciSNW+y
12x6mYIEzdUVq9nqcbITwCWshpnItnFqoZ0Mbq6u2KGs7iY7AVyy2g321uXr
K0rQXHLaxJYKOQngkpOY5qeS4j4dY//cisgLU9vNwzMFJQka+KZ5ED68BMEG
oTx8RBFD4Dv48FjKz5ysi9Vt5VJpgmaXEyS2bksmB0YJmDxFKCom0qnB6urq
Zs1RqvisDA+peZ7Q/ODTglyXzaHcJ/a29RauWOtZoLTY7xHvJ1sUU/iYU+Z5
ZZWXjjkavfzMfG85di6O2J1ZMk9E3pS19pvLFysNrg2tZvuJsGIIu2LPBTlL
F5LXzH8iZ0xHYbNjblFmw03OyiB3LCmVWNqSQ0xq8selPvaBPnl14tOCH+uW
PDESLMoaY2diJbs0kLbckUc1P+6Fv6/cdFTh8D5m40RXaWctFDuqJQQyB2yp
JY+K65tUYh8u+krcUVfGqrc6Nm/slltINcTKLJGQh7SlkxhCmD7cJhI3jbm5
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
RnbsIPexcXnDyntey0hLP1tcXIw7HhFw2Cyq5EZ+hgfNZR/e/H8oJJ864Skp
fjLoKvp5Y3HecuD+1A8996dfLL0/7b2yjO3L29evW966Zt2HWRs2vFuyffNr
oZy0U6PlBdSdk7Mq3rIRbfP1lb8u2bLx95T4lyq2p0aL1m6lJs2EZmcpt6CF
6e66KTwICAE1dI425a3Spmq81CA7KEHRzE5absdzNL3eVVRODeULOGhRqyRr
e3x1ekthcTR93WYkN9apLOjU9gSCKi0aSDBaispo+xbavg4lek9xFdUayCxV
UqK56zOW77t7vVFKYNLrqNYg0VPKW+lANXUMWzpAISEqorKpqoDyGaLARxTU
kNik0gVvJw3MI8iriIJK6nc8wijdRR5146Y3m/KLoz6X62JJZib1Nfccz127
kfVWjo5to4pcGwI26aj9o6XjNgjSkwUFBcvbtm1bTk1NXS7LzV7Ozbx/uTg3
51+Kc3M/rCjacaWiuPBfPMV0Scv5+ZRTUb+77IPGKs8fvGUuReWl839VFJVc
qSlxIT6sKS5T322trlIcv2urrvyXqsKiy2600iU3vdz5vjs/77flubmv7ayp
0QcJrTfbSt3qT0Z9PiX5xQd8gVOTPj8aDu2mTQdqjcr0XNUoTUunG1yamo72
4uZy8NKp95RU6b0l1dqe2pDeUuzCrhnUoLVhhzZTG1YctNFL4aNnTQq2ZtKL
Wotd2CqjSeVdP4ndCICtCDpsATWuiyDwUoOHtD01DfTYQOCURbesXms2NsOX
jkWaGt28eo2STEYlVe/Io34krfj3BVtzlncU7FjesmmrCn6UJMr3jeQgNqCF
0brsK6V3tI3CZAvfEetWLKspZlf+1BrrpX31LlLZu6Np997zy1DaujdH8rf8
bHfBNqM3C+56k+m6pVNeg/RbTr/rvl/7tmf82peW8a6H7q56vjQjTfnk8rZ1
W95z3X//xbLsLGqmbIqcN3uqq97s8Vb9ostb/c++otI/tNV4L7d6ve+2eb0X
mvHtsotN+ALMHypdrv9VVlSMRyIDy5RowFP5QbjGZ8bFphrflRqX50JrjV9R
322rCSi3nuvy116uKC7+XUVh0SX3jsI3+/x1v2px1/yqpaJGHwo0nB4JNLwy
Wtuo/uQBaibnu2VZOb8uy8x+raW0QpsJtqp6ryvgxBq1dmuJxyhLz+J2JgLq
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
csAsTD2gl9DyEWLNbI1aWa7aCLA2lqzSjBy6R1vJ/1SZctXULXq6FEBG6VxF
jdB7YaKx6502t5SurDyJmRPdm1Ct1gGEg0lLZrEivoyy7AJWFiiEEBu09T5q
9mS9vTIIEExeAB0ek01wxolY2mZU51XpES95bW1/J5XpHVVhlGtz9EzV5rrG
qa6dvl6KHpQh9M6qEPahajpRV6cE9D8J8kgJSRXP9dS3vNtBg0uoan1REJ0x
d8z1hUFKp1ayYBFARjfKC8DopnZRXnfSTW83Arl+Gul4jOLt5GQqm7RxCVjR
5ozlLauzjCoCrJZgy1u3heRsfTDBaD2erZic8duk4gsCf8qU+Qo3RF79VuVS
f1360lAwa/HkjIfo2kLyZRKWatJFUtYDuij6lupJxc4/t1MiRn4kcmFpSHFG
LrwwBE0TeJ0ac4AxIvHSS5NEV07k0suTMh6kl1z+6R56yeXTexYfnqw3Mrav
Xwp781W6Gxl001tKytEdansamoEWjbtdAEsMx6BhBOIMmeyZcJcw3k1ktMu9
7JZy2Un1spuabeag7rGau0Pi6uyelsjFyabeU7Mt/eCKe0LioTrHpfdVtbCC
OUGUg2FaIRwTwYSgng9dGa0XkSnZHM3bvENlqaIeuCAYLdnuAVPRDBpG520p
RLdbEEKHWRiiaERE87YW0/YsPBp1RY2EByKMR4dRX0xmIJq5OUvvrG4iACdR
4tDmuieB4ySwzSkmBMP0bIJSCojeQViOmVieHmuKfNAUCP2mriRI2jiizVGf
DApJ+gxvXiUIJLM2YBJolKXn0vi3mgncE6C7mReg3qeN6MvSJqpatfHKZm3M
06Q35LiiORvyjOp0uvrN+Ube+m3Hs9emQd7qrZkCyd3fxIaA1qcvt8W8/ZK/
iBTtEf/iTEeekbpx1VKgbBt3mQ/tLCVF60DXuTjXX27yFnnnuT6TN0iZ5C2Z
eNsFQWPeKBYXdtcsLoz6ibuXHlCwZNaWGqvJcDNvycTb3kj09L5I9AzH4uEH
Gyga1ciHr84rKZErr39z8ZHp8FLYX7DU7C+EgGGcBxGDyJF956E+AOsGZCRi
lQRYLyCDjSe/xX49BayRenlN9frJ3taBDyaoQ50RjguQEXJu9I/kn+r1vup2
FahhUQem6hRHtGRbBegCaooa3bp+MzpI0qH9XRMIdHC0TAZftDZpBulYE4FS
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
xM+audy+D5DCm42SrGYrHq9QpZlTz2yw4uLQvjPM2IgU6/D++OAPf7Brsw2i
1Ph/2qRj/wvZsTE1codW2sYDXuS8wtl6iAXueUHg6NH8KAQukzYEPiJyh0/F
a6Hs5TEPZA0RUMv2X+tzrlD12tGDNczXr7arqZEbaeg2RB3GhO74XswdQtrQ
tJc1HS40u26X0jjLmnXve7nAadKcpGxy++fZWUrgSsirc6qFI3Ot8IS6PIvW
Lto7Z/GlGR83cYo1rOwpKBsVyElP9vdfbLeOkIJDpE19+oKBs/hOQ8j7goop
Bsm5xays7IW0+bmujoB7IHXJG8m+/VOPeTKvQXuNhH2XL5XB207q5WUl3VSX
gjt3Rn1ZVdr+66yMgsFmrE0acWk59P015BMr8mCco+9a1rfRWt0LfZvZyadI
391WWloN6fsi6dtP4T8zvtBj1BVd0N6wkkjgNSc6gm/+t7+mJn7WqKYgXpHb
ZiUmlFn7dhw2SnOarYT4UlJ5o7WHRs3M5HIzI7EcXdyKiSmwdr6zF+EkYpOl
YajCQ27BFKJwkT9E30YmCQ6p4RECF0kknFPI6uJzpWdq3ByxvUrWIoWwthPc
HdvHskaunnCn6jA7h/B6D4ttsR0JD8nT0yqEiIFx4wJ7fUYs7jgkY5z0czPG
c3NC2V53t+YvnmNu5um5efF2bd5jazvd1vYW8dy9Z0OfDT5+9CkLWrVs7uAr
rH8SN3r32rIoEjf9B0jDNetQNon6NRL1tEvYUtzzk/QfP8nf729H9xbt+QKL
+8JDXFZ1wVDPoaBxIXxtazA6thQat4OMjOnOvIlFDISt/Qnp+T6p+wwULnVN
1foJ1R0rM6sJ+v5lVETiTE5m4Uj5qRbVvqFuyic3zLzMKjMvo9LKyKwzWqW2
m6upKnupuR4zmiq6rZS0WqNBaNuoL+4yM+ILqU4adfoFKzm5imZMGjt2RVE+
iTIqSd7cwFPrgtvwMghb3k1mQlSWifsRx8WdMmMj04J79sVau7btu7F7Z4Sz
K5Si/lMh4JBb5n3HjiYxHEGcwisZV1xd+hk6s+rSblWrYVE06CUxLPo2xmsS
NIvaIzq2krYzLNpXAVqumsThpEe0cd25TmpKtHF5AYlL9jOQt08sAPEuurUK
2GFqz8fZ2mnX4iOvUjn38nn/9esXUa9C6rbKWfjcwef5VZ+jv87MSP37nTu2
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
xY88J1Ge7ef6LqM828/2XJK10kiMSRGNPVbLV4V/Wx4+PLtkaudsHj7UMowS
NWK3xcmSCf8uECg4giXP0yhPlfQZZFVM6o2iUJ1o4SqUy3blP6BIcUvwDQsm
C9R/wWSBVgmBemYL1Ldg4kvr314OhhS88D1jg3mWGhveWsprr/VvLYG6ErNw
FYVPee0gxNYbyXUt/LvwY6Cx+s3FKFFZR632yNKn76aAKuoruC9AuYrKutC7
+PU3QKwt3tzDFShWFC2KzXHZVzz/t+qjjz7Cdimsr69PecMhV0dZ/WP63DyS
6/WJB7IpElK9b0nVRUV0AepUrwWtXhvz2kroHT8adUmN4lF47P8tvaq0wSyj
ozadGlxGj/3tyV9MtzX0DJ7u/Bhzpko19I9QokZidIpeml/NEu2fS6I2mYr+
fUi6OlVQGv1bVZRcnWQKv20QKdQG09Xh9DqrKEXNLo6aKpZRJcAIX78Np/5S
oyqKVPmh1ixk6pDonDUUZBoOMt16wI9EZdAEma60+fpy9HX29vwl0SqOofAt
cWDx2MTnvrMVZYqCNdbhmnbdm/RhMWTENfSy643+EqdUqRhC4WWC1bYh1ErZ
w78m1raBKFUUKgZPFCpWVooJbykBdrE+f2/lKpUFKJ8Xpx+JlyXgC+HMN5AI
vYpbk46XwrFeA4VenTpl139Fm7h6T7ZEfLis6rVVIN2qVu3qmK9kbwvJft8u
WZvz30DZ6lUlDf4k67780dVPO5sGRGt0TZZW4fwvY2HVS/Oq4VSZpXUOzeJN
xdaLygJZWkm3Momerj/H89K0w6hZvMcFql0gnR/0OuDUrFVbFS6uLq1TuD84
P3wOyisKeF0YPmaEM38srirKFgTsr7bWitpa841qKwu32BTuchJuoS2QytEp
qBYvMG6lK12hXFspA8yRTNeLK7q+eg3w1StJle0fVcpd0jwUKUpUdEtVINRG
rKZ0WVf1Uyb56xQE4Renkl2TfPMHXpF50yFYxzvY/oQ/R1OmbyhUWVtRrPpR
T6tDqC4Uqkoldb6/bIoq1T3F9ahQFSUKNQG8f1z/4NSnnY0n7AIlfbLvfxuL
ql6aW2XERyWDOEfNWOooqDKatphFVUV1KktsqXQI9Yk6lbYP2jyl9Ts6pV49
NylHz0nKAW12aV1WTRWdUsusZNqSxTupbau36JlhO/9VVdVDVTUbxAkCDckE
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
\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"8154249a-3575-8648-803b-504c18399b32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"ArcCos", "[", "x", "]"}]}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9426186825982533`*^9, 3.9426186964559155`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b88f0256-8d0c-4b4f-ba66-12079cae8986"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["2", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["x", "2"]}]]]}]], "Output",
 CellChangeTimes->{3.942618697035988*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"b42ecd6b-c0b5-7148-92ea-0896ed6e2cf5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Expand", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "x"}], "-", 
      FractionBox[
       SuperscriptBox["x", "3"], "2"]}], ")"}], "2"], ",", " ", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["32", "3"], "-", 
  FractionBox["64", "5"], "+", 
  FractionBox["32", "7"]}]}], "Input",
 CellChangeTimes->{{3.9426050138174686`*^9, 3.9426050587384605`*^9}, {
  3.942605137792694*^9, 3.9426052713084145`*^9}, {3.942605638886854*^9, 
  3.9426056418119125`*^9}, {3.9426057495007973`*^9, 3.9426057843050365`*^9}, {
  3.942605884055649*^9, 3.9426059105949383`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"5e9f784d-672a-e141-bb0b-7bcd03362cb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RevolutionPlot3D", "[", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"ArcCos", "[", "x", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"RevolutionAxis", "->", "\"\<X\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.25", ",", "White"}], "]"}]}], ",", 
    RowBox[{"Mesh", "->", "None"}], ",", 
    RowBox[{"Boxed", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.9426180972534714`*^9, 3.9426181169388676`*^9}, {
  3.942618292637417*^9, 3.9426184045059795`*^9}, {3.9426184654142017`*^9, 
  3.9426184709965153`*^9}, {3.94261856277034*^9, 3.942618595663679*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e1d20a06-e90b-5b4c-a93b-5125497e51b2"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJxtmHk8Vfkbx4VcWVpkiBKVLKMsqZTqfg9pSlowlSUtjFQGZTJTyYgiooky
QwuRTBJFlmu77rltolAUWaqxyy5LEq7fOffb+fbr+6p/vF69ntfxnPd5fJ7P
85nndMh6n6iIiIj2JBERMernddvk7OBFR9gG1qV6SYnZvMvXFU1G500hXHXZ
lxeap4OZFofrp/7N4V0uyVLXHmcRKe9rJtTNH4B4B7McyZNZvHzd/V6vqiQI
9Tx5w2z3ZyBVTTVOaX8mz2fr7I0H7kwmyh5rZqibVwCHhoLk2I0ZPNZgZIzW
SXEiRPdxiXtdFfBUOaqTr5nOa3D79YniRjHipyinVo57Hdg1cLZQZyyNdy1X
w71cWpSg2qX+1YPEkT9EjUJSeSGei1dY3xch9mSWnVM3bwRzFj5pDRtP4UU0
nCWMSgWg4ECMkvnFZjCnMGzqi/W3eUahRVPVukbBbBW3m+51rSDKX4T72TaR
59dS7OZU9gkcLzc2vKjeDtbZpF11UEjgrdVJnIi1GQKvA6fwOe6d4O7E9Z3S
m+J458O0tdMsP4BlxtWb6jjdIL6rj5PVFsnb8WBPzZQd78GFnps1ExO9wCrB
j/zZcrhA57P1NIPHGwDDOaWiZsvS50Okl8v8+hcJEoizW87ni8rlg6RYtJqD
IHoy4hw4e5fjvfIB0iEj59zzCHHEecu2LbsvP+8nM21qEl4HiSHOhzySVlgV
fyA11H/558xRUcS57MrxO3ML+shZpbf0ZjhOQpx/b7/AeWPVSyqWXi3YaiqC
OAdOTXy1Tr6bvPzb8igFAwFgOF8y7ZoektdB/sGx0d7OH0WcvS0aHDuM35PH
4gPTV2uNIM6mTsfsks60kHKBXftO2n1EnGNsNndrBTaS+SUfZ583HkCcH+9b
7aQo+44sE2MZuBv2Is6T4hv+NZ5bSfrKt1fO6G5BnF2MIxel+i4jVZaJKBpZ
/YQ4B9wIdNx4U4y/2zbYTspmAjCcF4amxdnfF+XLnxjTbm0fBwzn8pTc+NV1
k/jrdvl2/ec9BhjOHcOXXmf0i/A1Ta7kCVijgOE8T/2+wj4JEb7SKdeGWWEj
gOFcZyqoOK0tIPUrimrSZT8BhvO1kMHZr43GSM/m5TLlfh8Bw1k0265T1vAz
eVL1Y9y95kHEOWKseGe7/CdyIvp0gN3SAcR57mJ97+uvhkgrtTlTig58QJz/
ZNUE9zgPkNl874/PenoQ56fSW6PiU/vI08cCMyViOhDnuU2nXFbN7CTHFt7X
PRbVgjgPrB08+FqiiazTE7fMs32HOPsu/uUyb9da0jgkdtf2Jjbi3JwUPi/Z
T5I/+cKK6MLdrYgzGB49pv8Li6+8XWueun0L4qzrk9m92kyCH2MnFq69rRlx
3j7vBH/d/Mn8QZ1ZAR4WTYhzluxM6Suj1Hccy3q4n92IOE+KWd29oUyU77rc
N2WrTgPirLWg3mU8ahJfndWyZPL0esTZSmHRsSfbRfin3LIvZLx8izgTXR1H
A1gCcr3xpEhf1zrEOaOnk/1+xSjJUrcg3GqrEee9/yx5+6PeJ7L4gEBpt3wV
4vzSpVImoWyQvFu3WUp+ogJxDpYZNPqroY9cnTRDqbOiDHFONS/MqcptIyfe
ne0ESY8R50C7235LNTaQx8Y9D+rJaCDOsyO8hm9TnGuMDH2Ld7eSDOce36eW
NGfDF+caNOxbSIaz9I+Hn9Ccn1n9q7toWzPJcPZZoB1Nc26qjhbxtGgiGc5r
vPPfX6Y4+yWGqbiyG0mGc+d/HSU0Z/nM5kYrnQYS6cbtGxtozoKeYjPW9HqS
4bzXQcmB5ly/Oe1g9su3JMN57uatZjTnuurDc0+51pEM5/FNC6bTnGc76nkd
qq0mGc5nwuIzaM7hjk79e+WrSIaz+YKZ7TcozgN3R30UJipIhvP9OR+Uac53
R7tn9FaUkQznvW0TYTTnG4pqHNOkxyTDOTtP24bmXMQqIpbIaJAM57GTwZ3m
lG48OnLYX9pmAnHOVpDTp3Vj7ribWVv7OOL8s8DPiNYNb999I/XeY4izTMQr
T1o36q+8zJ1gjSLO6veCOM6UbjwyKahQChtBnF1MG1Ro3biX2czNkP2EOIu0
nf6titKNjz6p9ZRuIM6VBpJbaN1IDVrlkt48iDibVus9e0/pxpG2qpX2SwcQ
51UuysNxlG74mPjcoXQDca6zdZandUMqOkS5tKcHcd6wW8WQ1g3D1yWprJgO
xFndtPehMaUb9wOvfaZ0A3GeEZ45XEXpRtzcUI9823eIs2Si0kJaN2K01/rv
aGIjztsP144sofbgXyz2kvIECT7D+Zm532Ylag8qXDl5m9qDfIbzDRUfnTRq
Dx5X3fGa2oN8hvPzXP0Vl6g9qDoruZPag3yGc2h6+HxLag/6e9lVU3uQz3C+
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
ag==
     "], {
      {GrayLevel[1], Opacity[0.25], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[
          TagBox[Polygon3DBox[CompressedData["
1:eJxNmHm8F2MUh2ckRFSkUPd2b8u9kSwJ2VJJskRI2kQlUioSIUslt4gsKaWy
Zm1DdqVEsmTPlp0QhbJVKM5jnvn8/HE+75w52/e878z7fmdKew8+adAWSZKs
TZOkUoxfhaDXCNkpye5tGbKj99Freq9yyKqQkpC9Q2qHbB2yTciuIVVCtg0p
Ctk+ZIeQOiHbhVQNqRWylTG76YttF3MQX1df4ne2JjH1Au83Ma4M+Va84CgX
BzkaO4KlzHrYGtoD+RrYJ/qJIa1D2oTsbhy46ts/fqXWQq8cGL6LsTikib2B
d09H+t7DHNgaWRMc+4iXfO1CDgg5MKS5+PDdT3zo+3uPPvY1Dlwt7BO8B1sP
LIe7JtTZOnB+H2NTa5Qbc4i+4D3IHMT/YGxLcZUZ08p8+zpPjM1C2ouDHEc7
guUo62E70h7I19Y+9ze+vn0eYxy4jrD/5q5HM/UT7A0sa8TYIeR4r7FViX5X
x3hoyISQq0JGh3Q0Duw3h4zSdor4WIdO4kPv7D36OD+kV0jvkK72Cd6frN8j
5Axr8Bz1FBN4uzhHxJz2P7zbBc4fYzw25HR9iT/Vmu2tSb6TrM14csj2Eftz
jN1C1lp/QEg/64HxLHsgX1/77Gz8EfZ5rrHgOtP+8eujH/p59gaWQfYG3sGO
2Aaao6cY21hjiLjJ91vIpSHXhFwkvrNDLhQf+jDv0ccFxoFruP2B93LrgWWk
a0OdK8UE3l/0p94V+mK7zBzEj9CX+Goxn+tiPCfJnosh1r/KcWjIOHGQ4zpH
sFxrHWw1Is+vMV4cUmGfw4w/0z6vNw5cV9s/fqP1Q7/J3sByg72B90ZHbOPN
caVzxjqz9reYi9zsp+w97EF/OPeTQ3YKnL/HOCZkivfpY17IPSEzQqbZJ3hv
tx5Y7k6y94d3604xgXeqc0TMHfpim24O4u/Sl/jbrDnOmhPEPsNxYsgscZBj
tiNYZloP24P2QL4H7A+9dvS4McZ7Q+YYB64N+twfsnP4rI9xUsij9gaWh+0N
vI84YptrDmwPWRMcf5rviZBlIfNDFoQ8JSYwPmPMTO2z7Olp7dheMseTxs8W
+0Jrg2uRI7ieNR+5FtsDa7hr9PVXjI+FPGcO4v82/5KQpdYBY0n4Nw75J65f
FSu5X9YOxlccsb0uPnK/pu98891vz29oB/t71qS/OlFnU4wvhLxlP8+HvO1I
H28ah22zscuT7Jnguebdet989PGhWMH4sZhYhxX2g/6J98DOOcx5ytn6ufXA
UhTYkpB3kozjwAs49+E+nPmc/Z/ZGzFfJxlnqh7yhTnoo5JxxHxqTWIqW5u8
8Jha6vAb+AK8YaXX8KWq3uMdhh/xHufcihF+85F90+eWacaH6iUZh8Ke87La
1qtp3w3Ex/lbKt4G6jW8VxLygXP8svFlzh2cgrN6T3HBHXLexNhY3E20Ub/c
+K3SjDvuZR24xD7mhRc0FwtnPmf/d9YpEl8zY0qM29uemhuT87Am1jvAvNQ/
UJ0Y+EJLc7RS3ybNONBhxtNjzq0YD0oK/LI8KfChVvaNPedlLaxHbThFW/Fx
NrYRb1v1Zt5rLb52xhB/lDr52quDBQ4Cr9g2zfjQcfYAl4BjrNaHHjgfOCfO
EmtH/ajJmX2iOE5Wb2mODuKAF3QSR2f11sZ1FNOp2sDYRR18XdWpB2foacwZ
6lXTjEt1tyb2nCsx9nCeOomPmr2M72xPfbVzzvZJCpyplzF91H8UzzH20NeY
HdOMo4xNsvOcs4lzcYc041j9xQF/GCBGeMVAccAlBot3oH5wtH7WA8f5+oEF
XjHE2kPVc141yJ7gBRe6bsPUextHrnXep0b1NOM9l4hvuH1Qb0SS8QRiRqqD
ER5ymTWx51zpCm1dzH22NUcZD8epsDb42JNHJwXONMqeRqufa53h9lBhTF/j
h2ob57xzfnDuPCkO+MN1YoRXjBcHXOJG8Y7XjzOZs/RBcdysH1jgFROsPVF9
hDnIWzPNeNKtrj08YrI9TDDXtdaYIt6p6uCbpk49OMOdxtytDkZ4yHRrYs+5
0h3afhdbhTXvMX6KPTE3tdKMx9yXFDgTfuu9nuhcTBfTZOM4mzmrOQ9fTQpc
dlxS4FizxDFHHYzwjbnigGM8It65+k0zbqY45um3S5pxo8etzXo+kRR41cP2
9LTrzbo9o77RPDPM+6w26sxXB98CderBHeAQf3k9T4xwieesiX1RUuBSC12z
mdbfLc140ovWY55eER9n4FJ7gHsssael6nOssyApcCZi8m/j9mJd5hrgCy94
XSzwh5z7vKkt50bYONM4C5taG1613Pqc0++bFw60wvrwA/hRifxus5g+NOYl
496z1xXGbLLuYvF+Yl6wfqpeP3IWpxkPqpRm3AXeAh+CF8Ej4FNf/K8Hrj93
XXle4eec68QW2zf2nGd9Zr1iey8y77fWqed1iTm+0RdcW6QZDmyr9GV/ZJ9k
b4QDcNbDQzgj4TT8NzjM+y21rUoK/0TWaOe7nbOEc4TvcPZ69nnOLM6y47St
1rer/t20rdG3u/49rL1aLP3MeY62tfqyL7D/jrGH3+zpYu+zJw+wx/7q67Q3
tUeeo7HGXmONddbsby1ysA+yH7J/sKewN00y5g9zjPF+hbb1+hKzwRy8Dzw3
y1zvja4/ewL7A/sY3yq8t/OUjd5jDvjfAcbF+vDtwPvJe7pEfZP2x82Zf+ds
1rduml0v1/a3vtz7Rx94P88rz2ppjKnfAzx3/O9r6rMAf+VZ+u9/aZp9H/AM
wr95Jhuk2T/KSubaZG7mnv9xh7rm8J78WYDD5c8dHHQvnwX+Zx0rrtR3ieeI
/0fdnLsNziXrBl/p7vrDCfq7zvCbS1xn/nfkzwv/LMa4bnwP3+t68o9gkuvM
uTjWOpw9rGnDNNtT6rpfsm/mc8++f59rxbfoC64n3+SPOR91/M5if2NfZv9u
lGbzXuSeUuz7W+R95mB3r79Msvmt575TVzysZ2Ov343rMveo1Hz1vSauPM32
C/I1Mif3Wb9qSZajoXnKrVXNPGXuL6ViYm3+BXW5thY=
            "]],
           Annotation[#, "Charting`Private`Tag$13016#1"]& ],
          Annotation[#, "Charting`Private`Tag$13038#1"]& ]],
        Lighting->Automatic]}, {}, {}, {}, {}},
     VertexNormals->CompressedData["
1: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
      "]], {}}, {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->All,
  ImageSize->{479.36966341670757`, 150.8392559027972},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.060077899222344175`, -2.756444693440677, \
-1.9617347675024268`},
  ViewVertical->{-0.9941207115481057, -0.06627779526115557, \
-0.08562280494359097}]], "Output",
 CellChangeTimes->{
  3.942618117794836*^9, {3.9426182942196655`*^9, 3.9426184049693737`*^9}, 
   3.942618471686081*^9, {3.942618571620165*^9, 3.942618596340357*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"30101ff4-cca6-404b-8e99-7738e20ef546"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", "2", "]"}], 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9426065791326237`*^9, 3.9426066287829247`*^9}, {
  3.9426066653172646`*^9, 
  3.942606666926899*^9}},ExpressionUUID->"7a625512-ec6e-ba43-a908-\
eb5ce80b0a42"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
Zr4=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.368417, 0.506779, 0.709798]], 
             Line[CompressedData["
1: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
Zr4=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1.9999997662703457`, 2.}, {-1.4142133633666665`, 
            1.414213390227226}}, "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           Automatic, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.368417, 0.506779, 0.709798]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-1.9999997662703457`, 2.}, {-1.4142133633666665`, 
           1.414213390227226}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          Automatic, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         Line[CompressedData["
1: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
Zr4=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-1.9999997662703457`, 2.}, {-1.4142133633666665`, 
        1.414213390227226}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
       "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> Automatic,
        "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.368417, 0.506779, 0.709798]]}, 
       "HighlightLabelingFunctions" -> <|
        "CoordinatesToolOptions" -> Identity, 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{389.9999999999628, Automatic},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-1.9999997662703457`, 2.}, {-1.4142133633666665`, 
   1.414213390227226}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.942606612503744*^9, 3.942606629673321*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"018c7743-0fd3-bb41-bbab-e04d3581f00d"]
}, Open  ]],

Cell["Binomial ", "Text",
 CellChangeTimes->{{3.942618155553051*^9, 
  3.9426181583450336`*^9}},ExpressionUUID->"4693c3a8-e07f-1044-be97-\
5fbe8ba07670"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "3", "D", " ", "Plot", " ", "of", " ", "Binomial", " ", "Coefficients"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "maxX"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "x"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"Opacity", "[", "0.8", "]"}]}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x (Degree)\>\"", ",", "\"\<y (Coefficient)\>\"", ",", 
          "\"\<\\[Binomial]x, y\>\""}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"MeshFunctions", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#1", "&"}], ",", 
          RowBox[{"#2", "&"}]}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxX", ",", "10"}], "}"}], ",", "1", ",", "20", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Slider", " ", "for", " ", "maximum", " ", "degree", " ", "x"}],
       "*)"}], 
     RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.941840312030073*^9, {3.941841406070741*^9, 3.9418414188388987`*^9}, 
   3.9418414674121*^9, {3.94260538724938*^9, 3.9426054203384514`*^9}, {
   3.9426054503694363`*^9, 3.942605503306492*^9}, {3.9426055688701*^9, 
   3.9426055692477436`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[24]:=",ExpressionUUID->"e6936b17-e969-3d4e-98f9-0c605b1372b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"2", "D", " ", 
    RowBox[{"Pascal", "'"}], "s", " ", "Triangle", " ", "Plot"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Binomial", "[", 
          RowBox[{"i", ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "x"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<Pascal's Triangle up to Degree x = \>\"", "<>", 
           RowBox[{"ToString", "[", "x", "]"}]}], ",", "Bold"}], "]"}]}], ",", 
       RowBox[{"FrameTicks", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "x"}], "]"}], ",", "Automatic"}], "}"}]}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "5"}], "}"}], ",", "1", ",", "200", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Slider", " ", "for", " ", "degree", " ", "x"}], "*)"}], 
     RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.941840383540165*^9, 3.941840459775442*^9, {3.94184144015485*^9, 
   3.941841463579176*^9}},ExpressionUUID->"a34b8e4f-181b-9b4a-99bc-\
df93d9d94eb7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 16, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`x$$], 5}, 1, 200, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {288., {147., 151.3219795239258}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ArrayPlot[
        Table[
         Binomial[$CellContext`i, $CellContext`j], {$CellContext`i, 
          0, $CellContext`x$$}, {$CellContext`j, 0, $CellContext`i}], Frame -> 
        True, ColorFunction -> "Rainbow", PlotLabel -> 
        Style["Pascal's Triangle up to Degree x = " <> 
          ToString[$CellContext`x$$], Bold], FrameTicks -> {
          Range[0, $CellContext`x$$], Automatic}], 
      "Specifications" :> {{{$CellContext`x$$, 5}, 1, 200, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{327., {183.2072265414754, 187.7927734585246}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9418403851340504`*^9, 3.9418404642603035`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"56edc849-421a-c845-90d6-bc5579bc0c53"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "Binomial", " ", "Coefficients", " ", "for", " ", "Fixed", 
    " ", "\|01d465"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"Binomial", "[", 
            RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "x"}], "}"}]}], "]"}], ",", 
       RowBox[{"Joined", "->", "False"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
       RowBox[{"Filling", "->", "Axis"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Adds", " ", "vertical", " ", "lines", " ", "to", " ", "the", " ", 
         "axis"}], "*)"}], 
       RowBox[{"AxesOrigin", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Ensures", " ", "the", " ", "axes", " ", "start", " ", "at", " ", 
         "zero"}], "*)"}], 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Adds", " ", "frame", " ", "for", " ", "better", " ", "appearance"}], 
        "*)"}], 
       RowBox[{"FrameLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Degree\>\"", ",", "\"\<Coefficient\>\""}], "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Proper", " ", "labels"}], "*)"}], 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Adds", " ", "grid", " ", "lines", " ", "for", " ", "better", " ", 
         "readability"}], "*)"}], 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<Binomial Coefficients for Degree x = \>\"", "<>", 
           RowBox[{"ToString", "[", "x", "]"}]}], ",", "Bold", ",", "16"}], 
         "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "20"}], "}"}], ",", "1", ",", "36", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Slider", " ", "for", " ", "degree", " ", "x"}], ",", 
       RowBox[{"matching", " ", "graph", " ", "range"}]}], "*)"}], 
     RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.9418404235188*^9, 3.9418407051977673`*^9, {3.941840807816839*^9, 
   3.941840808254305*^9}, {3.941841475672756*^9, 3.9418415115760384`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"49ed4761-e414-0844-bb9b-0b447d03611f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 34, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`x$$], 20}, 1, 36, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {288., {92., 96.55902917117484}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 20}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Table[{$CellContext`y, 
          Binomial[$CellContext`x$$, $CellContext`y]}, {$CellContext`y, 
          0, $CellContext`x$$}], Joined -> False, PlotStyle -> {Blue, 
          PointSize[Large]}, Filling -> Axis, AxesOrigin -> {0, 0}, Frame -> 
        True, FrameLabel -> {"Degree", "Coefficient"}, PlotRange -> All, 
        GridLines -> Automatic, PlotLabel -> 
        Style["Binomial Coefficients for Degree x = " <> 
          ToString[$CellContext`x$$], Bold, 16]], 
      "Specifications" :> {{{$CellContext`x$$, 20}, 1, 36, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{327., {135.7072265414754, 140.2927734585246}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.94184042459054*^9, 3.9418407079009*^9, 3.941840809129307*^9, 
   3.9420224909596243`*^9, {3.9420225219260426`*^9, 3.942022535041279*^9}, 
   3.942605066588131*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"78f44f53-7395-a447-a307-a5c0d9bbe338"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Binomial", " ", "coeff", " ", 
     RowBox[{"VS", ".", " ", "Normal"}], " ", "distribution"}], ",", " ", 
    RowBox[{
     RowBox[{"Binomial", " ", "Distribution", " ", "well"}], "-", 
     RowBox[{
     "approximate", " ", "a", " ", "normal", " ", "distribution"}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"data", ",", "mean", ",", "stddev", ",", "norm"}], "}"}], ",", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Binomial", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "0", ",", "x"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mean", "=", 
         RowBox[{"x", "/", "2"}]}], ";", 
        RowBox[{"(*", "Mean", "*)"}], 
        RowBox[{"stddev", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"x", "/", "4"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Standard", " ", "Deviation"}], "*)"}], 
        RowBox[{"norm", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", "data", "]"}], "*", 
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"mean", ",", "stddev"}], "]"}], ",", "y"}], "]"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "0", ",", "x"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"data", ",", "norm"}], "}"}], ",", 
          RowBox[{"Joined", "->", 
           RowBox[{"{", 
            RowBox[{"False", ",", "True"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Blue", ",", 
               RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "->", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Binomial Coefficients\>\"", ",", 
             "\"\<Normal Approximation\>\""}], "}"}]}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<y (Coefficient Index)\>\"", ",", "\"\<Value\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Binomial Coefficients and Normal Approximation\>\"", ",", 
             "Bold", ",", "16"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "20"}], "}"}], ",", "1", ",", "100", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Slider", " ", "for", " ", "Degree", " ", "x"}], "*)"}], 
     RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.941841103168127*^9, {3.941841547160446*^9, 3.9418415530357013`*^9}, {
   3.941841662976153*^9, 3.941841691346401*^9}, {3.941841900881935*^9, 
   3.9418419280919747`*^9}},ExpressionUUID->"d5772b6d-946d-7d47-a90b-\
f6cc1814bee0"],

Cell[CellGroupData[{

Cell["Automatic Integration", "Section",
 CellChangeTimes->{{3.938278504910383*^9, 3.938278546620672*^9}, 
   3.9410779676307125`*^9},ExpressionUUID->"fe546ddc-304a-d14e-83ae-\
f923d883f19a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Pre", "-", 
    RowBox[{"running", " ", "check"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<<", "Rubi`"}], "\[IndentingNewLine]", 
   RowBox[{"<<", "MaTeX`"}], "\[IndentingNewLine]", 
   RowBox[{"ConfigureMaTeX", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "\"\<pdfLaTeX\>\"", "\[Rule]", 
      "\"\<C:\\\\Program \
Files\\\\MiKTeX\\\\miktex\\\\bin\\\\x64\\\\pdflatex.exe\>\""}], ",", 
     RowBox[{
     "\"\<Ghostscript\>\"", "\[Rule]", 
      "\"\<C:\\\\Program Files\\\\gs\\\\gs10\\\\bin\\\\gswin64c.exe\>\""}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{"expr_", ",", "var_"}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"TeX2Str", "=", "Convert`TeX`ExpressionToTeX"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Steps", "[", 
             RowBox[{
              RowBox[{"Int", "[", 
               RowBox[{"expr", ",", "var"}], "]"}], ",", 
              RowBox[{"RubiPrintInformation", "->", "False"}]}], "]"}], "//", 
            "Flatten"}], "//", "Most"}], "//", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"RubiIntermediateResult", "[", "x_", "]"}], ":>", 
            RowBox[{"\"\<=&\>\"", "<>", 
             RowBox[{"(", 
              RowBox[{"TeX2Str", "[", 
               RowBox[{"HoldForm", "@@", "x"}], "]"}], ")"}], "<>", 
             "\"\<\\\\\\\\\>\""}]}], "]"}]}], "//", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<\\\\begin{aligned}\>\"", ",", 
            RowBox[{"TeX2Str", "@", 
             RowBox[{"HoldForm", "@", 
              RowBox[{"Int", "[", 
               RowBox[{"expr", ",", "var"}], "]"}]}]}], ",", 
            RowBox[{"Sequence", "@@", "#"}], ",", 
            "\"\<\\\\end{aligned}\>\""}], "}"}], "&"}]}], "//", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\"\<\\\\, d\>\"", "<>", 
             RowBox[{"ToString", "[", "var", "]"}]}], "->", 
            RowBox[{"\"\<\\\\, \\\\mathrm{d}\>\"", "<>", 
             RowBox[{"ToString", "[", "var", "]"}]}]}], ",", 
           RowBox[{
           "\"\<\\\\int\>\"", "->", "\"\<\\\\displaystyle \\\\int\>\""}]}], 
          "}"}], "]"}]}], "//", "StringRiffle"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.938059158634596*^9, 3.938059187871776*^9}, {
   3.938059445202175*^9, 3.938059448217097*^9}, {3.938059694787599*^9, 
   3.938059696365534*^9}, {3.9380597954575653`*^9, 3.938059802732033*^9}, 
   3.938061508128525*^9, 3.938061962853916*^9, {3.9381932263333015`*^9, 
   3.938193227598425*^9}, {3.938193263262894*^9, 3.938193273236141*^9}, {
   3.938193369430638*^9, 3.938193429871331*^9}, {3.938193931457819*^9, 
   3.938193932097988*^9}, {3.938277792762482*^9, 3.938277793949974*^9}, {
   3.9382779037143764`*^9, 3.9382779074791183`*^9}, {3.938277957405105*^9, 
   3.938277964871979*^9}, {3.938278243529209*^9, 3.9382782578383675`*^9}, 
   3.938665411339363*^9, {3.93866552691683*^9, 3.938665527416912*^9}, {
   3.941077971302576*^9, 
   3.9410779850682087`*^9}},ExpressionUUID->"25c9498f-4174-e247-b16e-\
00529d7a28e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"CacheSize\"\>", "\[Rule]", "100"}], ",", 
   RowBox[{"\<\"WorkingDirectory\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"pdfLaTeX\"\>", 
    "\[Rule]", "\<\"C:\\\\Program \
Files\\\\MiKTeX\\\\miktex\\\\bin\\\\x64\\\\pdflatex.exe\"\>"}], ",", 
   RowBox[{"\<\"Ghostscript\"\>", 
    "\[Rule]", "\<\"C:\\\\Program \
Files\\\\gs\\\\gs10\\\\bin\\\\gswin64c.exe\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.938277775907175*^9, 3.938277852429537*^9}, 
   3.938278336855976*^9, 3.938278661976431*^9, 3.938665093902872*^9, {
   3.9386653889383545`*^9, 3.938665414338625*^9}, 3.938665447747917*^9, {
   3.938665512685789*^9, 3.938665532337435*^9}, 3.9388045220557156`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f56f6041-aa13-0f43-9b21-2b0dfb7fe4ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Input", " ", "integral", " ", "formulas"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"F", "=", 
    RowBox[{
     RowBox[{"Int", "[", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"3", "+", 
         RowBox[{"4", 
          SuperscriptBox["x", "2"]}]}]], ",", "x"}], "]"}], "//", "Steps"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"F", "/.", " ", 
     RowBox[{"x", "->", 
      RowBox[{"b", "-", "F"}]}]}], "/.", " ", 
    RowBox[{"x", "->", "a"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"3", "+", 
        RowBox[{"4", 
         SuperscriptBox["x", "2"]}]}]], ",", "x"}], "]"}], "//", "MaTeX"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "0.5"], 
    RowBox[{
     FractionBox["1", 
      RowBox[{"3", "+", 
       RowBox[{"4", 
        SuperscriptBox["x", "2"]}]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{
  3.93866526997843*^9, {3.9388045375209446`*^9, 3.938804588649533*^9}, {
   3.941077998130926*^9, 
   3.941078013974476*^9}},ExpressionUUID->"61e57f94-c5a2-ef42-b729-\
e0fec96fe7d0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["209", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"PosQ\\\", \
\\\"[\\\", FractionBox[\\\"a\\\", \\\"b\\\"], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GtQ\\\", \\\"[\\\", RowBox[{\\\"a\\\", \
\\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"||\\\", RowBox[{\\\"GtQ\\\", \\\"[\\\
\", RowBox[{\\\"b\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}], \
\\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               FractionBox[
                RowBox[{"ArcTan", "[", 
                 FractionBox[
                  RowBox[{"2", " ", "x"}], 
                  SqrtBox["3"]], "]"}], 
                RowBox[{"2", " ", 
                 SqrtBox["3"]}]],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
           Rational[1, 2] 3^Rational[-1, 2] 
            ArcTan[2 3^Rational[-1, 2] $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"PosQ\", \"[\", FractionBox[\"a\", \
\"b\"], \"]\"}], \"&&\", RowBox[{\"(\", RowBox[{RowBox[{\"GtQ\", \"[\", \
RowBox[{\"a\", \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"GtQ\", \"[\", \
RowBox[{\"b\", \",\", \"0\"}], \"]\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + $CellContext`b $CellContext`x^2)^(-1), \
$CellContext`x]], 
          
          HoldComplete[(1/(Sqrt[$CellContext`a] Sqrt[$CellContext`b])) 
           ArcTan[Sqrt[$CellContext`b] ($CellContext`x/
              Sqrt[$CellContext`a])]], 209], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
          Rational[1, 2] 3^Rational[-1, 2] 
           ArcTan[2 3^Rational[-1, 2] $CellContext`x]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.938665501297855*^9, 3.9386655366177063`*^9, 3.9388045265702763`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.93882430801293*^9},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"ff43c8a7-4880-cf4e-9138-36f984944432"],

Cell[BoxData[
 FractionBox[
  RowBox[{"ArcTan", "[", 
   FractionBox[
    RowBox[{"2", " ", "x"}], 
    SqrtBox["3"]], "]"}], 
  RowBox[{"2", " ", 
   SqrtBox["3"]}]]], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.9388243080249386`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"33002637-4d1f-6e40-999e-9fd91f293b42"],

Cell[BoxData["0.1511499470195182`"], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.938824308033001*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"92d5710e-901b-0041-a901-75b13785dbfb"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.006942515967786726], 
   {Thickness[0.0033185226326020553`], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v6Ibn/GD4wO9iWOtadlmB0YwIDV4QwI+DA7
yGwUm8+0gM0hDQxY4XyNTyovZ51kh/NNjIHgM5dDjGqEzDkbFoetXhss5lTy
OKiD1HEywfnbwfR/exgfrG/zL3uweZzccD6EZofz/Z94XjK9zORwuHtfk4ky
k8OMmSDw1/4G722x1G/scP5aIR2+dDthON9jzdHlDD9EHb7s+7g1fZqQQzTI
fTGSDu8XrVc4a6HgUHH/xy1jblmHVJD3jqk7gKwzFlZwaOH1Xz8lVd+h9PA2
15mxig71v60KznUYO/wHAXslhwO1shbpImYOnTaeu9KUlB2SY++4MVdYOHSD
+J+UHY60LQ8/xWTlsEEvbzGjjYoDD8i4GVYOb4q3iv7mVoX4S9nGoebThoDs
Xwh+CsicHWpwvtS8OM3TAeoQ+19YOySEBKkvyFSHxM8dawfZ5S889OarOVwX
+uR4/pq1QwPL0X5Dc6j+yQg+WN4NwQdp+//QyuHErh29bBfUHCRA9mywcpjS
3hp1OUYdzj8Gkv+A4NeCw0HDoQTojdP3EHwON9VSJi9rOP954sJrJu+tHU4d
dlqbaacOCd80Gwcmzi755HeqcD7YPhkVOB8SD0oQ/0pYO6SD+GWKDupvefcZ
rLRwuKMpu+Z/sqJDI8gf7RYOO4KtIv67y0DCv8PIQaRyUslZFnGHJyD781Uh
8sdFHfhjA+4bHVeEyKeIQMNH2uGBa7zjrItCDgq7FuxLfSfi0KrArnrmi6AD
OF8UCDosubX8sWEzvwO3I5/XjJcMDi3itayZx9jh/ABQugxmgfNh6R2Wn9Dz
FwDb4V2k
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4t8xuUf/FTk5mBiDgIkDjL9RL28xY4+Jg33T
o+MznBF8lsWTrBj3OsL5PP7rp6TucHSQmReneXoDgl+yVfT3aTlTOH8DSP0d
azhfYuoVzgwlGzj/hnRNopGqjcPF/Hj2czMR/NsgutTR4UDb8vBTl6wd6n9b
FZzTcHT48630wZxEawews7sdMPhgdRzWDulpQLAOwVd90jzv7C8Ef0337QwG
f0eIOyIQfJj7YXyY/8RB7vZC+L8iYoXp2cMOcP7+WlmL9CmYfFj4ep9gt529
18FB4y3vPgNLE4flLzz0/gc6wvlg9S0I/mqQ/dsRfHD4eDrB+ejxBwAL/Lsf

     "]]}, 
   {Thickness[0.0033185226326020553`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.1391, 15.103099999999998`}, {
     53.647999999999996`, 15.103099999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJXIGYCYr+LE2P+FZs6pIHAMXEHGL/m/o9bxtoyDn+/
lT6YM9HEIUY1QubcHHmHDXp5ixlzjB3SQerNFBy+7LzV9bfUxCGcU6zd+LyC
Q4/XKxYTRVOH8sPbXGf2KsH5MybwV5llq8D5LJxd8sl+ahB71UwcZObFaZ7e
oO4QKb79IsM/Izh/I8i+M4Zw/kwQeGkAcYeNGpz/Ikv72/RaFTj/w6L1Cmc7
lB34/ddPSfUwdBCIDbhvFK4McXcZGn8bgv8fDAwdTIyBYDOCD3M/jA92v54q
XL8vKNyaVR1A2oyLEXxpkLsTEHzVJ83zzkYh+ODwDTR0OHXYaW1mnSokPI9C
+XLqDrelaxKNnhrB+fpaK4UvfEHwwf6NNIbzC9Z0385QMHGQmHqFM+OQGpwP
cz+MD3b3N2WHRpaj/YbiJhB/zVdyOA0yZ58xJPxmKDocblsefirJ2EH52qNg
hh4FiPt/GTnMANlbqeCQHHvHjXmFEdTfCg7RCo4fk32MHFZ+e1lxJkHBgRcU
/hJGDtWg9BStAIlPHiMH4cpJJWdDEPxSUHqRRfBD3l7+OOOgvIND06PjM6QR
fHGQv4IQ/MeJC6+Z3EfwwfH22BjO/7IhIHtWuInDjmCriP/pMnD+A9d4x1kX
xeH8/ohuf8YJgg6fQfx2Y4cW8VrWzGP8kPj5aATnF28V/X06DsH3B8VjsqFD
NCh//BFwmA4KZ25DhwPd+5pMlEUcbCsjVpjmGkLC+5kwPH4PguQPi8D5b9py
u42qxeD8tUI6fOn3xB28T7Dbzm41hITvZQlIPOkj+BBzDeB8cHxON4D4Vx3B
/7Lv49b0MDFUvpgQhL/c0KEH5H8DXnj8wvg3hD45nk8zgfNh5cN9UPh9FHJA
Lz8AwRLhGA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4gjx7RcZ2hwc/oNAvbQDjL8j2Crif7qMwwa9
vMWMOQj+bemaRKNQBB+sPs4Wg38GDFTgfImpVzgzlFThfKl5cZqnJ6g6XBX6
5HheDcEHa3tjg8Fv+G1VcE4DwYeZD+PD7JcA6VtgCed/2Xmr628pgl+8VfT3
aTtMPticHmk4/0D3viaTxVIOh9qWh58qQvBh5sP4MPvR+elpQPCMC84vXF6y
4V8/J5z/Zd/HrenX2B18Lk6M+adsC+fDwgedf533tlhqGSecDzMfxofZD4sf
GP8N7z6DmVkIPix+0fmw+AcAcX/7ug==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAGIw7fgx+cxXF4dWBXbVM1PEHWB89zVHlzP8kHDI4fy5
ID0ak3/hatgb/Wh1OP9p4sJrJucRfCbOLvnkd+oQ81wR/JkgYIngsy6eZMVo
iuDX/bYqOKfh4mCgtVL4whJ1h/21shbpMU5w+2F8mHtLtor+Pv3OGYP/pi23
28haGM7/su/j1vQyQQeHpkfHZ7x2dohWjZA590fAYaNe3mLGGgRf+JPj+bRY
TL6JMQjwO7irljLNanB2ONC9r8kkmd8h4fBl7dSfCH7b8vBTRioucP6a7tsZ
DP4uqOpPIvhTvrHFz3jjAjcfxofZHyG+/SLDOQT/hKbVpNPxCD4svGH+g/Fh
/ofx0eMXxgcA+2XUpw==
      "], {{39.925000000000004`, 6.24219}, {37.021899999999995`, 6.24219}, {
      39.925000000000004`, 10.7469}, {39.925000000000004`, 6.24219}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lG1IU2EUx+/KklH5sumScnpnSkQqtS0Qszp+uPeuCMwXcsHCLOaMMqUM
BlkfFJSaipmRmsnI0AJfsBdMiSXESHROxJcP0/CF0hQtFRJLdPncZ3seCDrw
fPhd7nPvOf/zP0d1OTfFuJ1hGMnWSd8627ZO1erOjGofHZTrLUmSPAV42YGi
WQFZKDYFMETpQ53jCnDtL8hU/6Lc6XqwYZylrN/bMcjMCMCgsCog89PQYeOU
AC2yaD/TSQV+/l6AgyuRc7VSGb6fIYAGhTwAFvbYjtTso+zTUBkv+cYTFu/3
8DDFZSTWJgcS7kyN17sFOeFi1jfKkRaE83HyoGu2NzEhwVCfED1cO8Pj9yAE
2mNvNEhCBdhwb8XHMPhjyLFvqgVIlypKNAMsNFvGshmTAAdGp1OZcRUErSQO
ZLX8n7UozzHK16W/raZ1AetZqoKQx8PS7F4BBJRPtoro8SG3YLFmhCX8anXO
7LhEWdS3Lhx2ID1GBFgozrGoj4djveYp705qqzKG6AhzUbe31cbpcD4JLOFJ
pN8UZUvC6a6saRWu96cAJtT38xGQ/y54va+Vcg2KZMpne3xPPFUK4H/x3IR6
loWeQ/GVff6e/t1isZ8WeE//I4BNXL7iKOPJ/UmbX53mJuWYCuva0VGOMBRO
f64u4qBgYs2luRZGWNTDoCTcj/SNVsJgboav8z4Hyi6rzfgjFP+/ivK99fg8
p5WyWf/yWH8Dh/sRp8T1NnLYn1eVEPW1qL7fxWH9DCrs50Se9FesP4ey2I/X
lONG7Tnabh7uoPzHWMJLz9vYfh3lboutUFsUjvXv4Em9om9eePQL8+Sfx2Of
PQrG9V7goQT5/a0M+zGGzkv3XWWcaZwjLH5vmLIVzUMrZXHeyz38JgBk6Ht2
Ds+XbyDu/6BHL7OMsFjfLjlh0bdMENavi8N+exiE9XpGOS0/8onbTLn0zLyP
NtnLcsLefeFlnE8A5hoO0Pi6T/mRfnm5uCm9Vx3JExb11vNQhvbdUgCeF7PH
fzMyrG8F1U+s/wu9L+4ThUC48bsu1t1O2bs/UxaHlqszg+Hf/foXOLQ3dw==

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4hkzgSDSy4E/NuC+0XJFh+UvPPT+WyL4JVtF
f58283LYk1/zdmYolK/n5QDSNrNTwUFi6hXODCUvB+Vrj4IZbBQc9tfKWqTL
eDlU3/9xy1haAaL+nCecP99G58qsfQh+cInK9P8cCL7qk+Z5Zyd5OpwBAR4l
hz8xuUf/LfJ0mA2yz1PJQcHxY/KZs54OK769rDhzQclBZ8KCH4b3PCHu4VR2
EPnkeD5N1suh28ZzV9onZQeY/wJuSdckXlKB81t4/ddPcVWD86dP4K8y09Zw
sG96dHzGZ08HA62VwhdSNB3aloefMipB8C/mx7Of++kB53d7vWIxWenh8Pdb
6YM5H9XhfA9QQLSrwflyoIDdrwrx7wUPSLgtUnV4nLjwmsl9BH/KN7b4GV8Q
fLD9Ip4OsiD99xH8mk8bArKr1OB8Fs4u+WQ/dYfEw5e1Ux96wPmsiydZMV5F
8N/w7jOY+cnDITn2jhtzhYbD6u7bGQzmng6nDjutzbynAXFfBoJ/XNNq0unj
CL6LainTrB+eDpv08hYzzlGH82HhCeO/yNL+Nn2uioM+KH7WeToIgNJTurJD
hPj2iwxmnpBwr1R0EAbF11YPh96Ibn/GC3Lw8Pqy7+PW9DIEX6RyUsnZFAQf
rH+mrMMWkDtsvOB89PQMAN65PhU=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQvfSFh97/Sn8HYzDQcIDxDbRWCl94AuULIvjyjh+T
z7D6OzxNXHjNhF8Tzj9/NeyNvrUWnH+gVtYiPcXEocfrFYuJoZ/Dwbbl4aec
EHxuN9VSplfGEP5MBF/gk+P5tKV+EPuuIPglW0V/n7ZD8FWfNM87O8sAwm/1
c1h8fx/fnM8GDg5Nj47PcPZzOH3YaW1mnKGD7oQFPwyf+cL5Z0DABMHfope3
mHGOj8NhkPuMDOB8XUX5LzlhunD+epCFvloON6RrEo10fSHy39QdRED2X0Xw
Z8wEAk8/OJ9l8SQrxl4/hzmLlHf+Udd0kJh6hTNjkZ/DBrC5CD5MPXp8AAD5
ga5F
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQLTH1CmfGIj8H+eUvPPT+aznA+DLz4jRPT0DwTxx2
WptZp+XAsniSFWOvn0NK7B035h+aDubXjuaaZPg5mNrsDZqmqOkwYyYQaPo5
HNu1o5etQMPhjnRNotFdXzhf5JPj+bStCD5Yv4Cvw3rVJ83z1iL4R0HyAbpw
fu1vq4JzHPoOb3n3GcxU8nV4nqX9bfpffYfW5eGnjFx8HZbc38c3J9nAAWTM
2SRfB3GQuw8ZOPwHgfm+Dt1er1hMFA0d9tbKWqS/QfBNjIHA2w/OB9vT4Ofw
eUNA9qzpUP39fg7XhUAON4CHx+E2kMUI/hkQ0EHwp07grzJ7re+AHr4A48Sh
eA==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlGlIVFEUx2dUsiTbLMecrIykmXk68yZNI4pOQdAyMvdZaIUtai6pZVBG
i5FhVrSQReLaYE3khxbFSa0Ii8Q010RNNFpsc0qh0igjy959d+Yd6MD98Hu8
+945//M/xz82LSLeVaFQKMUTJR4X8aw5nGUwrRSgoXblrZ0WDpx86WT25o4H
HATTWC5AUtrX7KedHAx61vAFS5C37Kr7WxGMfOPMiySFyIH+c76nVnFQ3vcp
t4IX4LinuexSNgdjNNQC5OVMPhSaooVoev8LgSf3754bt0cDP8dtyze1IGcJ
ay5nViBL960EPsRceR4yWSvznbCRxzs8dDLPsmzVNuXo4CbNp5SAuVedETOk
A/Ns7+RwG4H4BDFOBMImVXW7otXBTwxw5HZV7NEeAgHvsywthTx01e0KyRwm
cGbtZ7cQfyOM/1WSaPMWZHb/jwtoBCFXHs94ZlsmsOe/ePY8QIBjbnXnjf28
rMdGmocF+drrmknFcchSfb4800MnQKl9tX5MyTO9FiGfLI1qXGhCtl5cogyP
duQjIJvbL0T/tSI/POK3OHG+EbppvWECNFE/bDXCvd7Tf+JVyM007ERmSSdR
v+5pQyvarvPwbrrf0w/1hL2XysM66qcqAqrczglJEUbIKRkxfjyB99O2ubfO
PIisWk1GfTjkuSu+xTUrCZTrd1uVxQaZJb9NR5b8OqoHe3WZa78bAXsy9yPv
pZ793wNZqnMK8tLAzsKPUx35uRhYvV4E2roiBw1qA3iJZSUEOfrfxzM/b0c/
SPXvR5b6UYCsHngb6ltCQE39WMLLPFxOUgqjkKV+ePFM/yKsN5H68iIBU4P7
sqJ0R/4HCNTTeeA5Vm8qgTfUQI+0zJ+ROC/URsF6ZOl7OmRpHlTI0ry7E+a7
hxr2vXkEbNR/nzWsrxqHXle1Mtv3Vs74PYAs/SdBx/TzI9BP57VMx/SahLxh
3/y8sRGzzGepbu0ONiA794WTpXySNbAqIN2lcCKBILpvfiyQ++Xk2g4ufmYE
sqS3qFcj9dcrDZuXDAL5dD57tEzfU6jHBFr/bbwv7ZMm5PU0fx9BZuf+zKTz
rcJ96tyv/wCklGv6
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KF0RscL0bH6IQ39wicp0fQMHGJ/bTbWUKcvAQfVJ
87yzSQj+zltdf1PDEXyQtv9TguB87+pmfZ8uBF/TatLp+hpM/uG25eGnjBD8
P99KH8z5qO9Qu25bUn0ngg8zH8aH2Q/jH7msnSqZhODD3I/OR/ffepDH3mrD
+aY2e4OmJerA/Qvjw+yD8WHugfFh/oXxYf5B54v0eL1i+aIN58svf+GhV68N
9y+MDzMfxofZD+PD/Avjw9yPzof5DwD4W9AI
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4pjco/823Q91mD6Bv8rst6UDjD9jJhCstHKY
sOCH4bNzmPw/30ofzGFE8G9J1yQaqVo6bHj4cuqmHaEOBlorhS8ssYDIz0Lj
p2Hye7xesZgctITzb4DM+4rgP83S/jbd19aB4+eC9M2XMPmpaUCwzBauHp2v
/pZ3n8FNe4cI8e0XGcIQ/G9s8TN8QqH+22nnoOD4MfmMZaiDz8WJMf8m2zq0
LQ8/ZfQlxEHlSfO8s10IPsx+sLtNQzH4sPCE8T9tCMietdwCYn4uNPwSLRy8
qpv1faYh+E2BnnMbjiH4sPh4nLjwmok8In5g5gMA6JLYqg==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQHSAnluVbHu5QsKb7dsYESwcY377p0fEZ1lYOaWCA
yYeph/GXv/DQ+//QwkHm9SMzqZBwh5kgcNLCQeiT4/k0TwR/0SQrRl8dTD7Y
/GxLVPmZCL7EvDjN0xus4fyvO291/Q21gfPB7rlg48D5c0H6Zq5whw8bArJn
uds6PBGRPfn0fZiDxlvefQYrbR1q121Lqj8b5rC3VtYi/QpUfjWC3+P1isUk
F8EPKVGZ/t8mzOFp4sJrJvoIPo//+impGTZwfn8wkMFv43DtaK5Jg3eYg77W
SuELT6wdCuLZz0nGIvggZ6fmI/gHQPbUhDnU/rYqOCdhA+cvBYVnIoLfCzL/
vo3Di+3rmZ8nIPjg8A1F8EHBwJAe5vAfBOJtHWJyj/7b1B3mUM9ytN9wuq2D
V3Wzvs8qBB8WHjD+G2AwzfwV5nCkbXn4KSUEH+Y/GP+GdE2i0VRruHs26OUt
ZuyxdlB90jzvrFqYw5QJ/FVm3VZwPlj/fEs4P0J8+0WGdRbw8P7zrfTBnEQL
h4qIFaZnZyP4YPeeQ/A3PHw5ddOHMAcHUHq5beFgYgwE/8McTh52WpuZZ+ng
CVLPFO5QvFX09+l7FhB7pMIdpEHpp8DCYcKCH4bPrND4Xgg+LP2DzZ+N4MPS
OwDTcmVR
      "], {{91.91559999999998, 26.184400000000007`}, {91.91559999999998, 
      25.014099999999996`}, {91.04379999999999, 24.6188}, {90.52969999999999, 
      24.6188}, {89.94380000000001, 24.6188}, {89.4547, 
      25.049999999999997`}, {89.4547, 25.6234}, {89.4547, 
      27.200000000000003`}, {91.48589999999999, 27.343799999999987`}, {
      91.91559999999998, 27.367199999999997`}, {91.91559999999998, 
      26.184400000000007`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4jQQ4It0+A8C9RYOMH7db6uCczcsHNqXh58y
ehEB5+fHs5+TvIrgL55kxeh7JcJhf62sRbqJJZxfz3K03zDdGs5fcn8f35xm
Gzhf/S3vPoObNg4cPxekbz4U4TB1An+VmbWtg6bVpNP1ayIcxKde4czYZOvg
qlrKNKsjwkFfa6XwhSO2DiBtM/MQfLC9Kgj+zltdf1PZofYft3Ho8XrFYsIY
4cDhBjSoy8ZBC2Q+AyYfph9s/4xwBxNjIFiM4G8x/3EoxQvKP4PgvwG551K4
ww3pmkQjUwT/SeLCaybzbeB8sH+SLOF8WPg9AAaL8SkEH2YfOh8WPwdA/l0T
7vAF5NFWC4eZIHAVwZfwCPgj8RrBh/kfxm8K9JzboIXgg+PbLgI1/u0Q8Vu7
bltSPS9afLNg8mH+g/Gng+JztjWcH6Pg+DH5jg0k/VhGOHzYEJA9qx0anhkI
/mMR2ZNPpyP44PBaFOFg3/To+IzXNnA+2F+GCD5K+C5CuA+U7IxnRaCGZwYm
H+b/RSD31kSghu9SBF8cFL67I1DD9yJa+P5CC1+k/AUAP2qSMA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{106.46299999999997`, 30.890599999999992`}, {
     106.46299999999997`, 31.075000000000003`}, {106.288, 
     31.075000000000003`}, {106.177, 31.075000000000003`}, {
     101.59499999999998`, 31.075000000000003`}, {101.48399999999998`, 
     31.075000000000003`}, {101.309, 31.075000000000003`}, {101.309, 
     30.890599999999992`}, {101.309, 30.70779999999999}, {101.48399999999998`,
      30.70779999999999}, {101.59499999999998`, 30.70779999999999}, {106.177, 
     30.70779999999999}, {106.288, 30.70779999999999}, {106.46299999999997`, 
     30.70779999999999}, {106.46299999999997`, 30.890599999999992`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4gSBCMstG6IdUtOA4JmNA4w/YyYQaNo68AO5
J+Yh+OkgdXkI/vqijIlvc6Idlr7w0PvviOA/zdL+Nr0XwZ/8jS1+xh8HON/8
2tFcEwlHhynO3TnPs6Mdur1esZhIOjqsd39YJRKH4L9ffszb3DPagcd//ZTU
Dw4OE97W2JvqRTv8B4HrDg4sYXy6m/5GYfDB7tzm4PAmcIdcK3c0nP/kgtLt
n2oI/vfgx0tnu0Q7XMyPZz93EcGHuR/Gh/nPv3d6npAzwv9bTpTtmy+E4Lts
+/z3CgMmHxa+YPeJRjvEKDh+TH5j47AdKF3hiOD3AI1vjkDwG6YCAygfwd8w
FxgisxF89PgDAI3Z1eU=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYCYvY1MlEpzHEO3G6qpUyvDBzWF2VMfMsS53Bd
6JPj+WcGDhvmvl9+jDvOgd9//ZTUEwYO34MfL53Ng+D7mHc6Jsgi+O4Pq0TW
ySP4z3+v/HhJNc7BoenR8RmnEXyY+TC+MQh8NnCwNY3b5akS56D+lnefwU8D
hw7HhKcXlOIcxKde4cxgMnQAOdeaPc5Bel6c5ukCQ4fr54AuuhvrUP/bquCc
hJGDBw+Tdvu6WAcNkP5MY4cpzt05z6NjHQy0Vgpf2GIKca9trENy7B035hUW
cH56GhC0WcP59/fxzTHOcnBgCePT3TQ31iHh8GXt1J+ODm8Cd8i1Ksc5/AcB
dme4+yd/Y4ufwYPg93i9YjERRPDbl4efMhJB8O1B4aHs7NAzPU+oWQHBnwMM
bm9xBB/sHl4EHxYfMD4svnbe6vqbKu7sYA8Kvz2xDstfeOj9n+nkcF7p9s+6
rFgHYWBwpx11hPjHNNbhDTB4ZjY5OJwBAZFYhz/fSh/MKbR3MAHFA3Osww3p
mkSjVls4HxyendZw/v5aWYv0LRYOGXtKJkuoxDrIgOKjwdTBN0kgwnJOrIPq
k+Z5Z3cZObhs+/z3yoZYh8WgAHU2cmh5DQzAs9DwPmYI54Pj/7AhxD1XYh1O
H3ZamznP0KEE6L2a+7EOz7O0v03PNXQQaD5wauFTaPxFGDqgp18A0zw6qA==

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4jNgEO/A4aZayrTLzmGB67bPf/cg+OxrZKJS
dsc79Hi9YjGZaOdQP9W5O2d7vMPUCfxVZtp2Dm+XH/M23xjvsL9W1iKdxc5h
wtsae9N18Q4+FyfG/PtsC1HfjuDPeQ/UUI/gi6xzf1ilguAfUdhQlJEZ7wB2
1hs7h62f/16pKIx3mAKyj9ve4QuQ+7It3qFkq+jv0372DsfL9s2X6oe6J9ve
Qbb1deAOoP29wSUq0+/bO8D8d1zTatJpdQc4f8o3tvgZLQh+pPj2iwz/HBxy
hZoPnJoJ9Y+Po4OqIQcwBBD89UUZE9/KIPjfgx8vnf0lzuHzhoDsWe8d4HzW
xZOsGKci+L9jco/+S3Jw6JmeJ9TMEe9QGbHC9Gy0g0Mon+6mufwI/p+VHy/5
SiH4YPu14iH6sxD8i/nx7OcmIvjFoPA45uCQIBBhuUUAwT+vdPtnHReC/6AK
GOKS0PgUdHR4E7hDrtU63kH9SfO8s1qOkPgIQfCnAKPveTOCb28at8tzTrzD
/X18c4xvOcD5sPCE8d/w7jOYKeUAiZ9yaHqaZe8Qu8uThwlon4kxECy2c1gy
Gxjjv+Ictpj/OJQyyxYeXr6g9NCM4IPjsx7BB0ebj63DnpLJEiz74uF89PQM
ABekUqE=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lAlIVFEUhscZt3FJSiuxzBaDbFyy3LLee8eWaRktzWjSsm7RNNpUjqUV
oVlZRLZoZWgqamiEYBQhFS2TGDXSlCQUKRVGFi0WBUNT0Xrve2/mgNCFy+Pj
3XuW/5x7JqzPX2ZQKRQKN7r1dCvpPjv/iv33LgL5bUee5Zp5cHLM1NbARwd4
yLm+yE+5k0D467KGh+U8fD5/T5dYhNwYEvMifBvykc1vf7YWEHjAVjEPt9kB
MwG/pRerDLk8JLV37bCYCBzLLAyv7ufAeOJTsZBD4Jej6GV9AQf6mfTAEuS4
NTQALfLpudSDQKDrzpwLeQ3IqT0nVv+xI4v+x/LA+TxtNqcQEPa/stbo5Pzm
EdCPvtqjsPCgWjEs6nIagd4xxeumPxGkeDII2C+lm2rDACopxmcTMKl/NBl1
IOVnQLb/frzr/UZkJs/hLUP+U336mH0OoOM+jcBI4Py7hdF/YwFmsEW53zKs
foYPclRl0/dYT2RJLwG259IAqX7BDWsibB0C+Co1h0YVIFdvHVHWsQPZq21s
9oZSAi3MwQCyrsuLqwsFF1sjkk/a9AAVnV+nrM4n8JctI0Bv97fMAcMQzkK2
0nRT0gkYN9KlBem7mEDj7MjHteMAnv3Ys+km1bvK4bm2ZjlI8Sfi/VPB7rQC
yKs2zOpfOhyZRlPR6Ubg6OIP7nE9gotJznOtqgY5leVzUNZHReDNJo2jukSQ
6uGBTKM/V+eNLOqnJvCF1fuQIOWnlt9DkwCsHS0BBD76W6adCQGg3cT5hGF9
hXjaoJHIvuxAAjK93RgyiwAzp4hBdtbbyWJ/DgpS3lSflaw/jwtwo5AqlCD3
c6oAWUyfKLlf43kp/wgCpe53K2KtHHjsoy9gPL4XMb+RyKab1GAQsvg+/If8
93b654Cl+zSQwK2S0CRjC3J79NZmt1//59OVAbsTNDyEe9KAAmR9F8jzQY0s
9qsSOfTgYMY1x1oo+Zls7g5GrmL2bJyLxfptkf15yfMliZPmTRAyk2/FRGSq
Rl+3hoC3dnKRspyDSaxBpxGXfafeop5GTpoPKXjfxgZIGrKofx6yc37uZfcT
cZ465+s/U/lnmQ==
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{122.22599999999998`, 
     27.537099999999995`}, {133.51699999999997`, 27.537099999999995`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4vinF5Ru6yY48Pivn5LqYeUA45sYA0GylcPc
98uPeWsnOHzZEJA9q9zK4T8IqCP4yrd/1mWpIPjsa2SiUpQTHG5I1yQapULN
U0xwKNkq+vu0n5UDf4TllhNx8Q6nDzutzYwzdngClP75L85hyf19fHOKzSD6
f8c5SEy9wpkxyczBtNMx4emPOIc0EJhm5vD898qPl74i+E+h/FQovwOo/MIn
hHzpvvlS+m/jHL7svNX1t9XMoTZrT8nkHXEQ/302dTgPtL5uU5zDobbl4ace
Ifhg+y/h5oPN22rqAAoe850Ivm+SQITlHgT/DAjciXP4+630wRxBMweg76zv
u8c7FIPCY56RQ/lLNUMOn3iHSPHtFxnqjBw8eJi02/0QfP/e6XlCwQi+vWnc
Ls8YBB/s/9h4hy3mPw6ldBk5HFHYUJSRGO9wXeiT4/llRg4fLwFdpJPg8Adk
v6KVw0wQAMZvSuwdN2YLRHzHKDh+TLZB8GHpAQBPVwAy
     "]]}, 
   {Thickness[0.0024923632324354347`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{129.283, 26.2809}, {133.51699999999997`, 
     26.2809}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJHIGYCYv27KmyNSxMczoDAHRMHGP/Lzltdf1tNHQps
ua4vnpLgIDMvTvO0gpmDzqa575dXJTi8yNL+Nt3XzKHDMeHphb4EhxtCnxzP
t5k5xD+9oHR7boLD32+lD+YImsP5BlorhS9sQfCTY++4MUdYOHz+e6XiZVuC
w0a9vMWMZywclG//rMvKQfC5mbTbxQIR/NlHFDYU2SQ4eJ9gt50diuCrPmme
d3aXOZz/JHHhNZN8cwdGoPabTgkOJVtFf5/2M3cAeafAE8G/7JskEBGI4Idb
bjlRFpbg4Nj06PiMagQf7L9tCP7yFx56/xktHH6v/HjJ1y/BoRikX87CIVkg
wnKLR4KDNDi8LBzY18hEpQRD+RMsHIC223KlJzg0shztN5xu4RDKp7tpbjaC
zw1SUITgzwSB1gSH6+DwRfBh4QnjfwXFl6o5RH9dgkPBmu7bGRcQ8TUhuERl
+npg/Ozy5GEqTnAoBMkXmDmAgl8tN8EhRsHxY3KOGcS82ASHA7WyFukpZg6g
6NgTkeCwAuTfRDOHpaAABvqfAQQSEHwvUHy4Ivgab3n3GWiaOSx03fb5bwSC
Dw7vWARf3ZBjjUwWgg9zP4yf8xwYwl0JDofaloef2mQK58PSK4wfIb79IsM9
Y4f986X071YkOEhMvcKZMcnYof/QV42YbAQfZj+MD7bPK8Fh+gT+KrPdxg7R
Kdb3/R2h4a9u4gBMrT/rvBB8sPkB0PAORfDB4TYTwQenx1smkPD2hspzmsLT
I4zPD4z+99YIPthfJtD09swEzr8jXZNoNBXBX3J/H9+cy8aQ/OcHlQ81dgAl
r+vZCD7Q9/2HehF8WP4G52cBRH6HhScAVVTM6A==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYCYluu64sLShMdNN7y7jPotHaA8RtYjvYbfrdz
WFwAFIlOdIgQ336Rwc/RoWd6nlCzQKKD7oQFPwyXOTk4Jjy9oMSd6DDfRufK
rH1ODgtdt33++yfB4f4+vjnGv5wg+j8nOIhPvcKZIeXs8PdKxUu1jwkO9k2P
js9QdnZQvv2zLusDgg/k7Sl5jeCH8ulumvscwY/uP/RV4wkmv315+CkjEQRf
H+Q+PmcH5jCgAU8THP6DALuzQ7jllhNlzxIcWBZPsmJkhdoHdN/OW11/U887
OWTvKZkswZHokM35c0F6tZODdrvYzXPyiQ7GIHDZ0YGbCSjimegg/MnxfNpa
B4j7IxIdvmwIyJ6Vbgfnw8ITxudyUy1lijJzuKAEFNBKdHiSuPCaib4x3H39
wSUq0/8bOGjEAD0AdL86SP9PA7h/wO5/j+BfFwI64BmCz++/fkrqCQN4eMH4
sPCE8WHhDePD4gPG/x78eOnsLwkO0vPiNE8/gLpHItHBARTetw0d4oHRfdsx
0cFAa6XwhRZjB5B2w5hEhy3mPw6lcJk5TJZgCePLTXSwrYxYYbrWHJ6ezoDA
HEsH9PQGAH5EJoA=
     "]]}, 
   {Thickness[0.0033185226326020553`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{83.6129, 15.103099999999998`}, {
     141.85199999999998`, 15.103099999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYnVDjjUyp6Ic2hXYVc9cEXJ4v/yYt/lOBP/L
3ysVL7dFOQhXTio5yyLk4LLt898rG6IcWsRrWTOP8UHUr4xyYAABB16HDXOB
IoujHPZ372sySeZxAOpWM6xA8B9UiaxzT0TwweovR8L5PdPzhJpfRDp82fdx
a/o0PofjZfvmS4lHOcwEgUghh/hdnjxM2lD7GoQd1shEpVjPj3Loj+j2ZzSQ
coD55wwIrJGB8+9oyq75v1kBzjcxBoJiZQegax5WtUQ5bDH/cSjFSxXiHm0E
378X6CCg+2B8sHvmRzqcBpn/RgnOD+cUaze+rwDny+9asC/VT94hQSDCcssB
BB/s/sMIPsx8GP/JBaXbP59FOnTbeO5KY1KA81PTgOAYgv/ANd5xVqGiw4qP
l3yTbkQ67M2veTvzqSLcfBg/Y0/JZIk9CP6WE0AH7kLwt8u1vg7cEenwHwTu
KzrwA5174lgkNHyVHZ4snX1E4UOkww6HpkfHZ6g45As1HzilGAXndzgmPL2Q
hOCDze+KcuCPDbhv9FwJzoeFP4zvuubocoYIWYcWoO1yqVEQ/5+TdNgOTF4V
ltD4PSAGD0+Q99OescP54PQwk9Vhwtsae9NtUXA+enoGAFdtTFw=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJVIGYC4pKMiW9r6mMdqj9tCMiu0nSA8Z9naX+bvlfT
4YjChqKMyliHjPwPrSe/aDpcqXipZliA4D+5oHT7ZxqC/0LNkGNNSqxDQkiQ
+oKTQPmls48oJMQ6PIoQ336xASovE+PQLF7LmunG5PA9+PHS2VOiHdYI6fCl
35N22P7575WKidEOIW8vf5zhKOPwHwT6ox0q7v+4Zdwt47DlRNm++V0I/na5
1teBHQg+f4TllhNtCL5MVIr1/fpohx3BVhH/1WUcfJIEIixNoh2MQWCyhMOG
ue+XH9OOdhCunFRyVkXCIX6XJw8TkO++5uhyBgkEfydI/3NxOP+Ba7zjrIni
DuvdH1aJ6EU7BIHcmyjusBzo3Q1GCP4C122f/5og+B5A3e1mCL6Peadjgm20
w8HufU0mh8UdWl4H7pBLjYb4e76kg8g6oAV/oh0u/z52fV7kZ3uQdjHGGIcX
tY+zz6/5YA8K3g1MMQ5bvTZYzKn8YO/fOz1PiBvBnwP0nrc4gu8CdM4ViRgH
8yRdO1aHj/YT3tbYm8rFOMyaCQSSX+xrwBbGOgTckq5JFNJ0kAUG7466WAev
E+y2s0MR6WOTXt5ixhgEH5Z+AFOtEMQ=
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{117.714, 12.712099999999998`}, {
     123.56699999999996`, 12.712099999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxd1G1Ik0EcAPA5TS1E0w1nbs69OP2QBGkiouBfynRZrBeIUd0pMl8imxBW
FhMsy2UaRmamflCIMEFHSZoMW5SWfTAzMcowVmjpSClLSole7p7H3YF/uA8/
7rm3///u0eaX7i/wlUgkPqRlkiYlLaBLdcgyiKGZxkoYeN0dFh9chBVgz8j7
NHYZQ7251uQzFglDmrsnijMw/KPRpoTr22tLZqswfMjMzWh5pYKoi1/29Tsw
hKC97oQ4DbPszLWyF3465uyupx2SOb04TymG+8nLTyy7DPB29NeBaQO3sN4k
Yt7R9+PPRDuCgVLbQvNrPbOwnkLHXJNmdBbqtFDXZA2r6kfQ+dNTPvJNA6c9
sVsDh9Z4grugkMRnBCM0dmuZvfv3Oovu/7mOjT852JfZHKWHbYkkBrnT3KYr
TS7uC+T46ofcQn6dq/NF6IFkP9X9BoEFTe307Y+BrI9n5Y5ozDwV43+uUc8t
7DONOztIutluxdCzxXrL5wi3d/9eC3mv18Ke/I3mlBIMN2n9UzQwUNYQ4XcQ
g5x+b1HD8ClXW2Q6Bpt7+V1ijkrcP6mPheYhVgV3FsfJFKvjN6mgl6S/fAWB
XRNgGFlSgtxBTjCPIO57jKfFoxTr6UFgNphVo1Pc0c52V4GVWxwfCWaSDtMC
N3Iag6S/ua8u2NKT1JiZXt/UXO70JOw02jDMVx+vTWhVMIv5kDGfV1SsO1q9
Hh6oyQXNxuCpmD72Mt4fLtH66Li7aUH+IubKRvIAHiFQ3gtvk+YFwteOZznJ
nQhmaX9XMNjoAo+ReC8Sg1l952j/fAizcH5HKLPwnkJlEG8PnxwdRlBM8+0v
h/fkOll7uMV3yC3Usw6J5z0sYxbyXxPKbJoxjic1bICJcnKBxxAsuRZ7i274
svp6PXO7dUhTye39PxjofMYgWPv/+A/e1uVO
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.42393516842275014`],
  ImageSize->{144.04395516811957`, 39.29269240348692},
  PlotRange->{{0., 144.04}, {0., 39.290000000000006`}}]], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.938824308044958*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"60e3e30f-3b3d-4645-a155-4e0ffb7da1c5"],

Cell[BoxData["0.1511499468945182`"], "Output",
 CellChangeTimes->{
  3.938665393780937*^9, {3.938665428975857*^9, 3.938665435828842*^9}, 
   3.9386655013134823`*^9, 3.938665536633306*^9, 3.9388045265859222`*^9, {
   3.938804582229153*^9, 3.938804592851633*^9}, 3.938824308176962*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"26a26c17-2224-2e44-baa2-4d7cd3b9ae2e"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "2"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "2"], "-", "1"}], 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}]], ",", "x"}], "]"}], "//", 
    "Steps"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "2"], "-", "1"}], 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}]], ",", "x"}], "]"}], "//", 
    "MaTeX"}]}]}]], "Input",
 CellChangeTimes->{3.9386653090197344`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"d2e6dcc2-125f-2247-b435-445f9d713d0a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"d", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], 
                    RowBox[{"p", "+", "1"}]]}], 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]], 
                    "-", 
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "d"}], "-", 
                    RowBox[{"b", " ", "c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]}], 
                    ")"}], " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]], 
                    HoldForm], TraditionalForm]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["396", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"NeQ\\\", \
\\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"b\\\", \\\" \\\", \\\"c\\\"}], \\\"-\\\
\", RowBox[{\\\"a\\\", \\\" \\\", \\\"d\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"NeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"n\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"p\\\", \\\"+\\\", \\\"1\\\"}], \\\")\\\"}]}], \\\"+\\\", \
\\\"1\\\"}], \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"], " ", 
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"d", " ", "x", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], 
                    RowBox[{"p", "+", "1"}]]}], 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]], 
                    "-", 
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "d"}], "-", 
                    RowBox[{"b", " ", "c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]}], 
                    ")"}], " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"n", " ", 
                    RowBox[{"(", 
                    RowBox[{"p", "+", "1"}], ")"}]}], "+", "1"}], ")"}]}]], 
                    HoldForm], TraditionalForm]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"x", "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Int", "[", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["x", "2"]}]], ",", "x"}], "]"}]}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           
           Defer[$CellContext`x - 2 
            Rubi`Int[(1 + $CellContext`x^2)^(-1), $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["209", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"PosQ\\\", \
\\\"[\\\", FractionBox[\\\"a\\\", \\\"b\\\"], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GtQ\\\", \\\"[\\\", RowBox[{\\\"a\\\", \
\\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"||\\\", RowBox[{\\\"GtQ\\\", \\\"[\\\
\", RowBox[{\\\"b\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}], \
\\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "2"]}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["b"], " ", "x"}], 
                    SqrtBox["a"]], ")"}], 
                    RowBox[{
                    SqrtBox["a"], " ", 
                    SqrtBox["b"]}]], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"x", "-", 
                RowBox[{"2", " ", 
                 RowBox[{"ArcTan", "[", "x", "]"}]}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[$CellContext`x - 2 ArcTan[$CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"NeQ\", \"[\", \
RowBox[{RowBox[{RowBox[{\"b\", \" \", \"c\"}], \"-\", RowBox[{\"a\", \" \", \
\"d\"}]}], \",\", \"0\"}], \"]\"}], \"&&\", RowBox[{\"NeQ\", \"[\", \
RowBox[{RowBox[{RowBox[{\"n\", \" \", RowBox[{\"(\", RowBox[{\"p\", \"+\", \
\"1\"}], \")\"}]}], \"+\", \"1\"}], \",\", \"0\"}], \"]\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + $CellContext`b \
$CellContext`x^$CellContext`n)^$CellContext`p ($CellContext`c + \
$CellContext`d $CellContext`x^$CellContext`n), $CellContext`x]], 
          
          HoldComplete[$CellContext`d $CellContext`x (($CellContext`a + \
$CellContext`b $CellContext`x^$CellContext`n)^($CellContext`p + 
               1)/($CellContext`b ($CellContext`n ($CellContext`p + 1) + 1))) - 
           Rubi`Dist[($CellContext`a $CellContext`d - $CellContext`b \
$CellContext`c ($CellContext`n ($CellContext`p + 1) + 
              1))/($CellContext`b ($CellContext`n ($CellContext`p + 1) + 1)), 
            
            Integrate[($CellContext`a + $CellContext`b \
$CellContext`x^$CellContext`n)^$CellContext`p, $CellContext`x], \
$CellContext`x]], 396], 
         Rubi`RubiIntermediateResult[
          
          HoldComplete[$CellContext`x - 2 
           Rubi`Int[(1 + $CellContext`x^2)^(-1), $CellContext`x]]], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"PosQ\", \"[\", FractionBox[\"a\", \
\"b\"], \"]\"}], \"&&\", RowBox[{\"(\", RowBox[{RowBox[{\"GtQ\", \"[\", \
RowBox[{\"a\", \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"GtQ\", \"[\", \
RowBox[{\"b\", \",\", \"0\"}], \"]\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + $CellContext`b $CellContext`x^2)^(-1), \
$CellContext`x]], 
          
          HoldComplete[(1/(Sqrt[$CellContext`a] Sqrt[$CellContext`b])) 
           ArcTan[Sqrt[$CellContext`b] ($CellContext`x/
              Sqrt[$CellContext`a])]], 209], 
         Rubi`RubiIntermediateResult[
          HoldComplete[$CellContext`x - 2 ArcTan[$CellContext`x]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.938665467790081*^9, 3.938665599165537*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"059cdaa0-b6d9-8244-9a24-ed26b8b57552"],

Cell[BoxData[
 RowBox[{"x", "-", 
  RowBox[{"2", " ", 
   RowBox[{"ArcTan", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.93866546780567*^9, 3.938665599181183*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"9af22b5c-618d-e047-b504-9939ead8889e"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.005583161185863436], 
   {Thickness[0.002668751046842723], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v6Ibn/GD4wOS+7v45vz2NiBAQxYHWaCwEtj
B5mNYvOZFrA5nAEBHRM4X+Mt7z6DSgT/1GGntZn3TBxiVCNkztmwODxJXHjN
hN/UQf2TystZnExw/navDRZzKv/bw/gmxkCw+Zd9j9crFpOHJnB+GgiUIfhb
zH8cSrll7HC4e1+TiTITxH2Rxg43eG+LpX5jh/PXCunwpdsJw/kea44uZ/gh
6uBzgt12tqqZQzTIfTGSDjEKjh+T51g6VNz/ccuYWxZiT7KtA4gyFlZwSDh8
WTt1poND6eFtrjNjFR3218papLc4OfwHAXslhwfA4DI+5ezQaeO5K01J2WGj
Xt5ixj8uDt0g/idlh0SQ/oOuDhtA4jYqDm3Lw08Z8bg5vCneKvqbWxXivotu
DjWfNgRk/0LwU2LvuDHvUIPzpebFaZ4OUHc4ALJ/i5tDQkiQ+oJMdQdw+Kxz
c5Bd/sJDb76aQw7nzwXpq90cGliO9huaQ/V3Ivhg+WQEP6REZfp/AzeHE7t2
9LJdUHPg8V8/JVXCzWFKe2vU5Rh1OP8YSP4Dgl/726rgXIeGw85bXX9T9RF8
lsWTrBhTEfwvQG/N2u4GSRd26pDw/ezmwMTZJZ/8ThXOB9snowLnp4L8dUwJ
4l8fN4d0cDpQdJjyjS1+hoirwx1N2TX/kxUdHJoeHZ/B7OqwI9gq4r+7DCT8
WZwcRConlZxlEYfYb24DkT8uCknfyVYQ+RQRBwOtlcIXUiwcHrjGO866KOTg
CDJvt5lDqwK76pkvghDz7pg6LLm1/LFhM7+DbWXECtO5xg4t4rWsmcfY4fyA
J56XTINZ4HxYeoflJ/T8BQCN5mii
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{24.3922, 40.6875}, {24.3922, 40.92659999999999}, {
     24.165599999999998`, 40.92659999999999}, {23.998400000000004`, 
     40.92659999999999}, {17.485899999999997`, 40.92659999999999}, {17.3188, 
     40.92659999999999}, {17.092200000000002`, 40.92659999999999}, {
     17.092200000000002`, 40.6875}, {17.092200000000002`, 
     40.44839999999999}, {17.3188, 40.44839999999999}, {17.485899999999997`, 
     40.44839999999999}, {23.998400000000004`, 40.44839999999999}, {
     24.165599999999998`, 40.44839999999999}, {24.3922, 40.44839999999999}, {
     24.3922, 40.6875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4hgFx4/JPnYOM0HgppMDjB8hvv0iA5uzw9Ms
7W/T39rC+flrum9nPLCB8+tZjvYbXrdx4PFfPyVVAsHfeavrb6o/gg9Wv84N
zu/xesVichHBf8O7z2DmJTcHDjfVUqZZCL7MvDjN0wE2DgmHL2unrnRzSIm9
48a8w9qh7rdVwbkCN4czIFBjhcE/UCtrke7i5mBiDASHEfwNenmLGWOs4fz9
IJrFxqFtefgpoxwEH+Z+GB/mv+kT+KvMflvD/R8Oot9ZwflPEhdeM+nH5MPC
98+30gdzHlo5TP7GFj/jjpPDFvMfh1K4bOD8pyD1+Qj+XpD9VxB8cPj8soXz
0eMPAA+Txdo=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4gO1shbpOq4OaSAQ5uIA4+dw/lyQXuziIDH1
CmeGEILv0PTo+IzfLnC+yCfH82mhzhj8mSAg6Qbnr+m+ncGgj+C/4d1nMNPL
zeFifjz7OUsE/wwIyGDyXVVLmWYZIPgw82F8mP3FW0V/ny5zhPMTD1/WTk1E
8OUdPyafccXkM4BABIKv+qR53lkrF4fjmlaTTscj+DDzYXyY/eh8MD3FCc7f
eavrb2o9gl8RscL0bLKTA4//+impFgg+LHzQ+WB31SL4MPNhfJj9sPiB8UNK
VKb/F3CF82Hxi86HxT8A1h/rdQ==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxFlGtIVEEUx1ddEimjpDASy0CJ0Kx0LZGk48693bkVKCWsQaFb7CouPiB7
kRaFhGWZmdHu9tAS0g9hSoUUYS9Ec31kiWF9SCJKKorsgWVpOzN35xy4LL+7
d86c8z+PZbtKtjpCTCZTkP+x+Z9g/9O9Iq3O16HDw4ro1PzbBALcnljcFHSf
gNvjt3YdWsZp4swjAnMyb9Y7WpC/hneu9niRqzd9NFs8Oiw6PxxWcI9A/a9Z
ue56HVbVNk6uaSWQzMylw/e2LJd3OYHP7HyEDkem0koHxq2wNOPb7r5+Knnd
SFeRxY3Mzx+ioMbtDfbOI5Lvvjr5z5GJnF0We2Gm1IjnKIW8Jy/iHScIDJXk
hg54KOQ7/faFwDv71RHLIAWGzk4FVrI431MY65x7KXmxCm/4rw4RExmDzp0q
bGT35iGrBs83mPupwf8b1icMe1t1YDJ6dBU294SmX6zQhY6gSj0O5rSk9Ech
X2HnphXJ15m+owqkMj2qdIjhOilCr8vIG4697Xb7kPczv590WMDi+Ylcdmfh
lG+JKvlG9esCU66R7zWj/uUqNLN77ch9zMzIh1ldnlERV4wKf3YUdU0/pmBh
cYeoop8aKOREdgyZ9qmwjdUFqDzPdYpDFnXSJPM412pCn1uKZK7HWeQ29v0p
BcxNdWlB6Rocb7b1JlUq0MPu15C532xknrdNE/qcVoTf7RoA0/GcIuKu0USc
6aro5x+arC/PP4ZK5vVwILvCfjfm76EwGlVuT4pG5n0zqUjmeYwoQv9CKvOd
YWYz+rHQiD+WQgW7101EvuHUyJuI/hzT5LxMsDk7g2xiVoX8nM2DHZn3aYYm
6vzXKuI8oIn5CiXifaWhVwqy0BmZz5eTCP2KNcMPEXplIfM6JCDzPWQ2OAc5
sC8CzOP5YBW8RYNItm96rbJeAebfvUTmes+m8ID7IWJe4o1+JUToq+C+4XHU
Unme75OnyLyuDl1yYH/yvVaH+zSwX/8DOClSlA==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4hkzgUDSxyGH8+eC9MOuDstfeOj9/+kN55ds
Ff19+pu3w5ru2xkM66H8d94OG/XyFjPWuDpITL3CmfHI28FNtZRpVoarw/5a
WYv0O94OPP7rp6QmQNX3IfjzbXSuzKpD8ENKVKb/P+EF56s8aZ53Nsjb4QwI
3HF1+BOTe/RfkrfDBpB9b1wdFBw/Jp/p9YbQvG4OOhMW/DCcB3WPjJuDyCfH
82l3vR10QeJhbg4w/+mB+H0IPtjcVwj+AZC7U9wd7JseHZ+x2dtBFeSOTe4O
7cvDTxmZIPgX8uPZz+30gvN7vF6xmGR6OUSIb7/IEIbgg8Pvtxucn3D4snbq
STeIfyd4OTzYxzfH+JCbw5PEhddM5iP4U76xxc/YguCD7b/i5ZAI0n8Rwbe4
djTX5AeCf1O6JtFI1x1iz0IEn2XxJCvGqQj+G959BjM3eTl82RCQPavcHRKv
370g7pzoDnGfhjecf1zTatLpdgTfBRTPO6Dx7YDgw8ITxgeb0+DmoA8K9zxo
ejJ2g4TTNy8HBhDY4QqJr1IvBwdQuBu7wsOLF5QeNBB8cHyqIfjg9MHj6rAF
FO9/vOF89PQMAEOIRJA=
     "]]}, 
   {Thickness[0.002668751046842723], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.1391, 32.64099999999999}, {
     57.09299999999999, 32.64099999999999}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4gNty8NPbbJ0YACBBlMHGL/ut1XBuRumDn4X
J8b8C0bwrwt9cjzvZgHnP8/S/jbd1sLhBYj+i+A7ND06PiPbDM6vBanXsIXz
nyYuvGaSj+AvfeGh97/Q1qFgTfftDAYEv5HlaL/hdnOH3uASlenytg6nDjut
zZQzdzgBotfZOJgYA8FjUwy+zwl229mhNg4zQUDTDM6XmHqFM+MQgq/6pHne
2SxzhxvSNYlGSxF8mPthfJj//nwrfTAn0Rzu/wO1shbpIWZwPtjcr6YYfFj4
psTecWP2MHP4svNW199WUweZeXGapwvM4Xyw+qsIPth+Kws4Hxw+CZZwPnr8
AQA+lNP6
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4s8bArJn3XdymAkClRYOMP7i+/v45my2cPA+
wW47+yiCX7xV9PfpdQi+u2op0ywORwz+fzCwhvNVnzTPO6tlA+cvfeGh9z/R
xoFl8SQrxrcOcD5Y23lMfrj49osMegg+zHwYH2a/z8WJMf+C7eB8jbe8+ww0
EXywuR9tMfhnQKAGwRefeoUzw8nC4cvOW11/Ve3gfJj5MD7MfnR+Ggh8M4Hz
HZoeHZ9xGsE/UCtrkT7FxMEeJP4awYeFDzqfz3/9lNQTCD7MfBgfZj8sfmD8
9uXhp4yOIPiw+EXnw+IfADD4Acg=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlGtIFFEUx9fa2rS2D5kkqJGgkVnmY2d2dzQ4azszPbREC40k23LVNLMP
GhVmYlGg0cMMXZVNEVKhJxTaF5NsS3yV+cgUUkKwooeamKlpe+/dvRc6cD/8
ZriXc/7nf47v0axY81KFQuFiP/H2s8R+5hMzbQvpMkS1qrZXcFpwcvDmeve3
Ri10oEiWwdt6OKA9RgtQ8Ol12SHGGwwTxzqiGTef99GlRskwP50zUmnQQmuA
UNwuy7Dpu7opOEALKSjWy/A46GSNizdP7tskaGuJvH/cysH+bL/SxXzGJ1z/
VKXuYYzvB0mQsK6hW/GDMc4rg6ec/dRjrv0BT/LRSHAtzv7wMA/KmmLBJVoC
C4p6LXje7nVNK3DwLj0caekJNFskuLr7q1LjIsDaScOblE4Jxh/FZJRfEeBs
Qh3X6S5TPuPgnw7G7xjY/3dZSaoukwyLKJIEyJsTTnUFyzCWHjhdGi1QPZ6j
PJWMV0j+OUva9JS9kL75eqJHuAzqfQ9LzGl6olcMY1x3HuN7RUNpijsyTKF8
Ghg/0c68SHYTKPuNXrR2FjrqPSDDNtT/lwIMeuWaQj0YK1A0SpRxHy9JEIGE
UQuw9UbVTMhpCTRh9ujRwyzyU6wEF1DdjQJcro1vC50S6X3RXmb5AOOS6eVJ
ZRGM737eGbT4xUj00egpYz3GdZSxX0d1oOu3ZWrGjTCE8u7TET/PMh41Vfdr
VCLlkabVlWFuIkwifcZ08AF9V4uwt/tm4sIvHfGBQST9lAXi51qR9hfX38sY
98OT+cUasaW3fKO9fqXteoiKcTzyb5OeMu7HOT2sQfr7SLRerONKCYpQHtWO
/N+LZB4WeFJvswgD6KLEE3/eEum8+KO+RjLG74UzXobmwYMxnvcpI/HdK474
O1Ak8zXEkf7rHHppecqJaJATGeM5sPBEP18RDuJ6eaKXkvGzwcK/5mEjZeJT
B+cxdu4LJ+N8KjiSx6KR7BsTR/vl5G/2tWMpZIz1bhLJvuvjyLx8FIkucTzR
9zfTA9e/Q6L38T7JZbwKzZmnTNm5P+uQLyd4+H+//gO9ZVbG
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4v8gsN/TYcn9fXxzgq0cePzXT0ldgODfka5J
NJrr6aD+pHneWS0rh1sg/lRPB32tlcIXjlg61P22KjjX4ekQIb79IsM8SwdV
kLomT4fnWdrfpvdaQtSbIvgsiydZMaoi+Dtvdf1NzfeA87u9XrGY/PRwSE8D
gjYrh4TDl7VTOaH2LbFyaFsefsrIxBPizhdWDlO+scXPcIHKs1g7VESsMD3b
DHTvW959BpXWDjD/aYD4LxH8IyCDFtnA+T4n2G1nT7V1WPbCQ+9/pKeD+NQr
nBlGdg5vgNpm3vKA882vHc01SUDwP20IyJ7F7+FQCwqHCls4Hxx+h23g/N7g
EpXp8TYQ/5p7OPSA/Blo4+AFstcVwf8dk3v0XxSCD7a/ysOhH6Q/H8G3qQR6
dC+CX89ytN9Q3dbhuKbVpNPuCH42588F6dYIPsiY/xEeDlv08hYz7rF1EPrk
eD5trofD08SF10ze20Lcdx7B15uw4Iehniecv7r7dgZDPDS+/RB8WHjC+CVb
RX+fPmcNiR8RaHoytnbYXytrkT7Hw+EMCNhYOYC8cVbaw8Hv4sSYf8aW8PAC
pwdZBB8cf5IIPih5pD2zcJAAxcMiTzgfPT0DAOi8S84=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQHVyiMv3/nAAHE2Mg2GzrAONv0MtbzMhjB+FnIPj9
C34YPksKcOjxesVioojgN7Ac7TfcjuCv7r6dwfDfCaLuo7+D/gSgxDsE/3J+
PPu5g04OrqqlTLN0AuB8jp8L0jcbBTg8SVx4zWQ7gt++PPyUUQ6Cf38f3xxj
KUcIXynAYb6NzpVZbo4OCo4fk88wBjhsBLm3xtFBF2TvMn84/wwIfPGD87eA
6Bg/iLpnDnC++NQrnBlKCH7+GqCHDtg53JCuSTR66+egr7VS+MIUWweRT47n
06b6w/lg81kC4PzmQM+5DWoBDk+ztL9N17WD+N8wwOHLhoDsWekIPkw9enwA
AKzWsCU=
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQ3eP1isXEMMBB/S3vPgNJewcYf+kLD73/D+3g/Nrf
VgXnbtg5NAd6zm1QC3DwOcFuO3uqnYP060dmUiIBDlvMfxxK0bJzmDETCF76
O/z5VvpgzkVbhzvSNYlGcxF8kU+O59NKEXzza0dzTS74OeSv6b6d8QHBrwfZ
p+AA54OkGfodHEDOnPnIz6F9efgpozMODq0gmsXfYb6NzpVZ/xwcVJ80zzur
5O8QIb79IoOeo8N/EIj3dxAG2Rvr6LC3VtYifQ2CD3LuTNYAOH8/SF4hwMFV
tZRplgRUv3oAxB0MjvDw0J2w4IfhMwc43xgEHiP4nzcEZM86juDDwhcA+5qk
oA==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlGtIFFEUgFe3crOUyMpSfBT5oxItNQtxZ878SLQU506QCiuitSpCD0oj
S1FaKUjLfFQqVoaEheUTk/5YEJHl+sKyl1CWqZlEFqXhq7n37s6BLgzLN+y5
c893zj0bU44qZr1Op3NQnzj1cVSfqDOWwOhNCuTOhh3rSRfBzocShyL0p0QI
pstHgZj+EtOCRYRJl47tlR7IiYefLrS4IdcXvk/XqRy49a5bX6YITcNfr7Ss
UsDkK00dNImwSNcsgZHkW4MhsQKYaHwvgbk/WR+r+40wvSypIvo+soVEXc8v
RWbxFgJFeyeWhGwUNM5sWzvbdQP59nhkwOKwAPfoec4TeHyuLu7FahFivddl
xJQRsNI1JEKCe3u/roFAWqq6OgByGx6k5D0k8KHDtTrYQ4JXTw+H5A8QcPsp
9aYmSmD4W5PW+gfZ6T+upMtF0bitIKev1Uvh76MkKKTnXqrAytjGcjNImo/s
+Ds7uz2Rb4b7v6xaAI3raD5vgftwVsBH1WntBu5rLfJ5Nc0gf+Ta0jCHmHDb
eX4jn6C+vCWNWd2SJHhN83VXoDngSK1DjgQP312YN08TjZm3TmS/EcuNbtXf
rkE10FeCz2u8nn+pI7xv9BLso/10lUA89XxSgss1MztGUzH+aJJTz4YEZPdI
eW79CmTaNtZhmftpBY2ZjxLkJvr/IoDx9kb92IjMPRQA//4E8qNcr91pP5Cp
5tEpmfu5CDzfXzKIZz89qygD/t7FVl+jxPsZsN4s/wPIrB7ZyJ7fPoV65BN4
65mTHOSFvMcvy7FqBjRm9RgE7v8M0fJlfXnc1o8ZtvPH2+7DDpHnG03AEKFu
eFrg/RmK94XFuSKz/ZyR2X2YljVmdRuToYL2618j38/Rdr9cBV5/A+F5ZyAX
78/cfK0Ymf1aBe5hXub3dUrgcd+Rt4SVduUNITMvnTZuRrbPCzuz8/QYOU/K
fN6UG7V62fnJwDbzhiBk5lv1lUfnnUHgfWAiYKZezgncbzr6WU7zv4TxbJ7U
I9O0F2eQ7fPzDa23H85T+3z9BwhofMU=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KF0RscL0rH+ow5RvbPEznjg4wPiX8+PZzzE6Oqg+
aZ531gnB33mr62+qOYIfUqIy/X9JMJzvXd2s75OF4GtaTTpdH4PJ152w4Ifh
Mwc4v9vrFYvJSQeH2nXbkuozEXyY+TA+zH4Y/8hl7VRJJwQf5n50Prr/CtZ0
386YYA/nbzH/cSjllD3cvzA+zD4YH+YeGB/mXxgf5h90/pL7+/jmTEbw1d/y
7jOItIf7F8aHmQ/jw+yH8WH+hfFh7kfnw/wHAGiA0jM=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lFlIFVEYx68a6UP5oFYuuUU+tGkulUh35puHRMWLtszR4IpoXRVDM9Ro
URQVizJMs9KLmW1oWHn1ouaDJpWEuaNZLpGKmi0vCoXi1pw598731IHD8JuZ
75zv+3+LZ/z5EzorlUplIe0oaVtK2zD1427jPIHslaC0viQezHw2ZiLY6hIP
FXTNEtAMlmjX83k4lbH7/sYk8vuhfTqnMWS7RaE/YZSAz97n9gMZPDiGRK46
fiag9RAWzmh5SKDrLYGZuEcjAREcs79HYPVv5mTloBpiUjrXG9OR51vqrb5H
I8v2YQSKwn5uCvDkFM5o2rbSXYX8bD7Ee2OKAwfqj4ZAR2FN1Ec7HpoKsgaM
pwn00DXBQ0e2a2BiBoFEatcOMOPg2jWbQ+Bbu22lv7MAR/cP6+cqCNjTc2IE
SIu17nNq+z+r6BpG3vlr+rDzDGE6hgqwaIg8p+8msCWivkwHgqLH5ejaQ70u
yA/pxeugcA2NZxSYHgME3CU5e3oBtFSvceTfW9sPViwi2yxXJxoto5g/f5DT
qV5ugsJ1N8eTVLGmeL8SaPBOfWKRJQBNW08bcoC/tIqR5TxkEjgy0pkS4CFA
2NV8n/BUAvQ3fyuB1ZOWQPSOlkHVRQGWNseWhx9A+0+SWa47cvar5vicQVHh
61La/GpFpo8RFJb1KEE20P+LACLdtidr6kS4Rt8XALvfgOw1k1/V24z8tDTI
QvNaZPrcAhZvqwh83vSH8jvA7h0yfVcLrJ6tMb9y/K7Icj545LzjoQ9ygwmM
umTF+bkiH/PKtNQvgcJyPkaA6S8QJV65TgNN9Zhs8t/N1A++PIvXnoBNsHTg
FY7V45qo9At9rR9Gls8bQJb7oQ1ZrtOXIpTT57Kandclsv6y5Vj++0XmRzJy
8UlpMBQjy/f0cCyOdyLTaYFjzybk29VLvnOPkV/QOiw2cQOyeV6YWfanT83Y
KLJ5U6ZW8mXmPUGl3TlLyLLedgRy6Lyz4Vi/7CKgo31WyLG4vHHeyPGLRLGX
58kF5NaxG2u6N8jm+fmF5tsL56l5vv4DAmF0+A==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{103.49200000000002`, 32.68749999999999}, {
     103.49200000000002`, 32.9266}, {103.26599999999996`, 32.9266}, {
     103.09800000000001`, 32.9266}, {96.58589999999998, 32.9266}, {96.4188, 
     32.9266}, {96.19219999999999, 32.9266}, {96.19219999999999, 
     32.68749999999999}, {96.19219999999999, 32.44839999999999}, {96.4188, 
     32.44839999999999}, {96.58589999999998, 32.44839999999999}, {
     103.09800000000001`, 32.44839999999999}, {103.26599999999996`, 
     32.44839999999999}, {103.49200000000002`, 32.44839999999999}, {
     103.49200000000002`, 32.68749999999999}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4i9/r1S8FItxuCFdk2i01d5hT8lkCRY2BH//
qYWu25hjHHq8XrGYNNo7CDQfOLXwb7RD7W+rgnM37CDqv0U7pMTecWNeYedQ
nwUU+RDtEKPg+DG5x85hgeu2z3+PIPjr3R9WiaxD8MHqFRD8iBTr+/6m0Q4H
2paHn7pk5zDFuTvneXK0Q2oaEEyzd9BpF7t5rjza4T8I3Ld3KH+pZsjxJtoh
Qnz7RYZjDg4w/3ifYLedLeoI57MsnmTFuBbBPwMCMU4OD4Cucb8Y7fCGd5/B
zEtOEPdUIPgyUUAHySP4YPe8jnIwBgFrBP+4ptWk09sd4fyL+fHs5zIdHfTv
qrA18kbD+WD38yP4MPNh/A1z3y8/Zhzt4K5ayjSrAcGfCQIbEfz9tbIW6Xcc
Hcr3zZfSV412SDh8WTv1J8J8GN+80zHhKQeCXz8V6EB2BL/ldeAOOVZoeH53
dLgDdO5UYSg/3slhfVHGxLc20Q66Exb8MFzm5GBz3793eh6CH86nu2nuegQf
bP51qH8sEXxY+MP4v2Nyj/7TcnQI2CHX+nojVP1OB4cWYPJybYPaH+4AD09w
fP2xhfNNQOG/2dYhdpcnDxMwfcL46OkZAHXpVPc=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4pKMiW9r+GMdltzfxzfnsbHDfxBQj3WYCQIv
jR0WuG77/Nck1uEMCOiYwPkab3n3GVQi+KcOO63NvGfiELBDrvW1YqzDk8SF
10z4TR22A7mBAgj+9XPfgx//jYHz2x0Tnl54FePQ4/WKxeShCZyfBgJlCP4W
8x+HUm4ZO/AwabeLCULdF2ns4P6wSmSdPYI/xbk75/lmBB/sv/uxDj4n2G1n
q5o5PP+98uMl0TiHGAXHj8lzLB0SBCIstwTEOZgYA0GyrcNd/97peU1xDgmH
L2unznRw2H9qoeu21XEO+2tlLdJbnCDhczzO4QEwuIxPOTvYmsbt8nwS57BR
L28x4x8Xh5YDQA3/4hwSQfoPujoUgOxnj3doWx5+yojHzWHr579XKhTjIe67
6OYw5/3yY972CP6TC0q3f4Yh+KqGHGtksuIdDoDs3+LmULpvvpR+bjwkfNa5
QfwbHO+Qw/lzQfpqN4cvQONfukH1dyL4YPlkBD+kRGX6fwM3Bxeg9t+R8Q48
/uunpEq4OdxRYWucmo3g7ymZLMFSh+CDw39ivMPOW11/U/URfJbFk6wYUxH8
LxsCsmdtd3PQaRe7eS49HhK+n90cnoLC3xbBB9vHjOC7AJPTlRtxEP/6uDnw
A6PnxLo4hynf2OJniLg6iKwDxviaOAeHpkfHZzBD+S7Q8GdxgqS3D7EQ+81t
IPJ3oOk72QoSP8diHQy0VgpfSLFwaHkduENubayDI8i83WaQ+JgfCzHvjqlD
BigAamIdbCsjVpjONXaY8LbG3tQOwd9yomzffCUEH5beYfkJPX8BALnAkvE=

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4ts/67L21CQ5zASBm04OMH6E+PaLDGzODuad
jglPCxB8FbbGqc7+CL66IccaGb8kBx7/9VNSJRD8nbe6/qb6I/hg9evc4Pwe
r1csJhcR/De8+wxmXnJzCLfccqLMDcGPTLG+72+b5JBw+LJ26ko3hwlva+xN
tZIc6n5bFZwrcHPoADrvAhMm/0CtrEW6i5tDKJ/uprncCP7S2UcUNsgh+BZA
6/YZJzm0LQ8/ZZSD4MPcD+PD/Ad0Te90I4T/NWL6D30VQPC5mbTbxVgx+bDw
ZV8jE5XCn+Qw+Rtb/Iw7Tg690/OEmk0QfLB6RwT/K8gCXwQfHD5FCD56/AEA
poC8rw==
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{130.11599999999996`, 
     32.64099999999999}, {161.772, 32.64099999999999}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYn7dTXPf309wYACBBlMHGL/ut1XBuRumDtl7
SiZLXEHwwy23nCjbhOBHp1jf99+Y4PAiS/vb9L8IvkPTo+Mzss3g/FqQeg1b
OP9p4sJrJvkI/tIXHnr/C20dunOe/165EsHvmZ4n1LwgwaE3uERlurytw2GF
DUUZvQkOJw47rc1cZ+OwG+g8ljRMvs8JdtvZoTYOHY4JTy/kIfg3zn0PftyI
4GcDrfs4LcHhhnRNotFSBB/mfhgf5r98oeYDp6Yi+b//0FeNEgTf3jRul2cG
Jh8WvkDf9k4vSnD4svNW199WU4cDpxa6bpuO4IPVL0HwNWKAFmxA8MHhcxXB
R48/AMFY3a4=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYCYv27KmyNiUkOM0Gg0sIBxl98fx/fnM0WDvG7
PHmYohH8yBTr+/6hCL7FlhNl+14nYvD/g4E1nK/6pHneWS0bOH/pCw+9/4k2
DvvnS+nffYLgg91xF5MfLr79IoMegg8zH8aH2Z+9p2SyRAmCPz1PqPlAHoK/
uMCW63o6Jv8MCNQg+OJTr3BmOFk4AE1jCctD8GHmw/gw+9H5aSDwzQTOd2h6
dHzGaQT/QK2sRfoUE4dekAOfIPiw8EHn8/mvn5J6AsGHmQ/jw+yHxQ+Mr7Np
7vvlUQg+LH7R+bD4BwAErvfS
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxllHtMT1EcwIvf1JpiNc8iEfKqqHvv717hm0dJUtMo+i3cU0pZhbKkEtlI
kYb9ULLWTG0esTxmFkvKMilqZc3yKD3o8UtPUc659/e7Z+Ns54/P77dz7vl+
vg87MXpr6HgjIyNjvAPwHoe3s+ktm50nEWx+ZbIqm+HAwM6LC62q13Nw2n13
S/UJBDa5wYte+3GQoY2yTE2hfHG6artFEmU0OZAvTkTweyDuU447ByErm3zP
HkXg0Gle4ryIg56b5d7cAQT3HKPyjW1YaMiPWWUWhKDyxdrb+3IZwF+b2+hF
OadsTtFBN8rSeQZB4LRHNUZdlOHEl4rLkazCsQ+mjLy+w8KNbHwBi+Ccf6y9
tomFZ9dnOn3E910hq5CD852Ja5hNevbiYdKy+9e6fRFkbOpQuRoL4KDJLO3X
IOgp8ou8ekqAF/34l6j/uVvPT2MvTFcl0P9dg594TcT+xsjaJUC0ZerzyjgE
rRFLBrQ+guLjWdIsdZiKsqnH/LhxlbzC1sRvCi/7iEdg7nv3Ymg4L/tKohxE
hKdRrvURJwdmIegj73lEuZgbKg0xExS2b07NfXNGgP2tI4W6ZAROJP9lAvT9
qY1vj6K8zQILCqDshtOrxf7cjgQWMOYCkHKZ64nA1QWv9zwQHdtXIzg2IsRU
PRZgKdZ7cwE9zxe/OlxiS7lxODni6ZCocCQR2izKflx5hSUfPWqFpXptVkM6
CaBFhEbrxD0r6tRyPbdRNsEY8p1yEE6vww8ReomfVjVwaTgCzFtqsjSjP9XQ
UDXo/3VYlPPpKQAi9WxF80tQO5syKed6J8r2E45fWueC41e9zFxuQjmA1G8J
r7CUjwRerjdnpMQ7jwhZiiCd1GOe/v22+n4YZeV4ZyBosOx1f+vByvVoQfsF
Z/Odzy9RYem+IcrGS05N/dBFWer3byLsJaucARP8vPQ+Ue6vRkbO/6DeF8cq
rJnjrkMaylI/XWFlfzoRdkjxsrKvDsrYVn7MZ8qHwrM6E+v1nEzZMC8MLL0n
mwGnj9hguyjPmz2Mki8DV3jjjE5ECofh42tm6OddHSP3i52+Xv1Z2e9C6k/y
KdDz0nzbSPl5Zd6Gh9GUDfOzoG2j45iOhX/n6189hmvY
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4pkgIJnisOT+Pr45wVYOLGF8upsEEXyLTseE
pwIpDupPmued1bJy+PL3SsVLvhQHfa2VwheOWDpotYvdPMed4hAhvv0iwzxL
hz8rP17y5UpxeJ6l/W16ryVE/bdkOJ9RG6jhE4Jvy3V9ccFRBH+qc3fO8+fJ
DulpQNBm5cCvu2nu+9fJEPuWWDnoALnLgebx+K+fkvrCymFGnlDzgV9QeRZr
h0NfNWL6gfarv+XdZ1Bp7QDznwaI/xLBP9K2PPzUIhs43+cEu+3sqbYOWXtK
JkswpDiIT73CmWFk53Dc27zT8UEynN+T8/z3yoMIvsFdFbbGtckOtb+tCs5V
2ML54PA7bAPn9waXqEyPt3H4WQe0YXuyQ4/XKxaTQBuH+F2ePEy7EXwDjjUy
UQcQfLD9J5Id+kH68xF8m8qIFaZ7Efx6lqP9huq2DinW9/17dyP4c44obCja
geAvKQCG+P5khy16eYsZ99g6AEPr0NcLyQ5PExdeM3lvC4mPuwg+KPrUviL4
V3yTBCIYofHth+DDwhPGL9kq+vv0OWtI/LyDhoextUOyQITlFqB9Z0DAxsqB
tREY4xuSHfwuToz5Z2wJDy9wepBF8MHxJ4ngg5JH2jMLhwlva+xNhVLgfPT0
DAAEWUKV
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQbdHpmPA0JdXBxBgINts6wPgb9PIWM/LYOXz5e6Xi
pReCv6TAluu6e6pDj9crFhNFBL+B5Wi/4XYEf3X37QyG/04OS2cfUdgglOqg
P2HBD8N3CP7l/Hj2cwedHJIEIiy36CD4lltOlO3TT3V4krjwmsl2BL99efgp
oxwE//4+vjnGUo4Qvnqqw3wbnSuz3Bwd5r5ffsxbPNVhI8i9NY4OfLqb5r7/
nwLnh4IELiP4QNcUZaxNcdAFue+ZA5wvPvUKZ4YSgp+/BuihA3YOLGFAAy6m
OOhrrRS+MAUYXiD7fyP4Z0BAIhXO78l5/nulZqrD0yztb9N17Rxid3nyMAHd
/2VDQPasdAQfbh5afAAASSuxfw==
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQHbvLk4dJP9VB/S3vPgNJewcYf+kLD73/D+3g/Nrf
VgXnbtg59OQ8/71SM9XB5wS77eypdg5zjihsKFJIddhi/uNQipadwxkQEEh1
+POt9MGci7YOLGF8upv+psD5FltOlO37jOBHWAIFTqU45K/pvp3xAcGvB9mn
4ADng6QZ+h0cbiwusOU6n+LQvjz8lNEZB4efdVl7Sq6nOMy30bky65+DA9D0
+VL3UxwixLdfZNBzdEgDgXcpDsKfHM+nxTo6GNxVYWtkTIXzPyw/5m0uieDb
3Pfvna6W6uCqWso0SwKqXyvVwfza0VwTBkd4eOhOWPDD8JkDnG8MAo8R/M8b
ArJnHUfwYeELADGVoQY=
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlHsslWEYwI/LzMxMuhm5hlqJcJpVzvc935rWZWbLij+oyPtlJlkdJlNN
DIUQRq6ZmVpt6KKtmcl0k2uZyzCUpjSTUEnU+37fOd+z9W7vH79zzvue9/k9
F6eI88eIkUqlMqA7mG5DuiP3jwfmbBPh8sq+uO4oHvQcGTZ60CiRh2ZtgbWx
mwgBffmha6k8tHZU+zdtRX551Pe64IhcdCArZtpBBM8d99b3ankoibVKbbUX
IdRRmD8TyoPzyPKV6A0iTIVXD6gDOTAbrInTrBH48yN+orxPA4XWxicsZpG7
fwZ9rB1Hls4PEcg+MmOsduIU1j7ZuPK2Ern28yGPv5McDLELhgm0ptcFd1jx
MP8uIMJygkAnW6M8tDs2XIii/3dWpKsFQDj9qdd5gcB4i0W5j40AobltS9tV
Iqz/LvSIYQIsbaefrENe/I+/1VEjdshR+bPJvKsIt9k6LAC1t7BqLYJ5YH0h
AUHxcSnk7p4uW+QqP/f+0jVQuI7FMwyyD1sRHKjOzi6QfTkh5xRT4e7IJik0
I2rde5aQLzJf9oLC97NGolSnBLhj4znm4ixCo0dsjUGyAG5epg+2WCFnMkG/
icIsvR3Un+/Ai3NqRwFYuZyYIeDDlpEAd1mBTBII2fy0T5UgANM78gbPx0yv
3JtvQ7bY9bBirgy5Yo4KzSCyn0egsOQjH7mB/T4boKWKBpBJIIOm2zsN5HrO
QvajWHwTOa+NZZTIfnIAolnB5xHgr314VVIAYG64M2NThe57jSDXcxNR8ivF
/xx5iJaz2XvkkL2PXycMEBi2TQ73tkP2d403LP0FCkv5GAC53vox3uNMSI+u
HqN172/T9YMXL8fbTMD0IL0wiZPrsxH7ZfeYi0lKBbJ0Xxmy+uSzw+a3kKV+
v0GghNXrsgbY81qKdf1lwcn5LyXgOpVa2RWNnBukdSnORZb6q5OT/RXp+nWe
k33lIFNbgzVpyLVltCOTdNyIrJ8Xepbe062BCEtqMJvI86ZQo+RLz7R7mrX1
yOWs4amvq2zemXJyv7QTIKz/0znZbwf6kHyO4Xlpvn1FXlztT/xiJSqsn59D
LN+uOE/18/UfZvl57Q==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KF0RscL0rH+ow578mrczjyo5wPguE5qF0qyUHVSf
NM8764Tg77zV9TfVHMEPKVGZ/r8kGM73rm7W98lC8DWtJp2uj8HkK197FMxw
RgnOd19zdDlDhJJD7bptSfWZCD7MfBgfZj+Mf+SydqqkE4IPcz86H91/O4Kt
Iv4vl4HzeyO6/RknyML9C+PD7IPxYe6B8WH+hfFh/kHntyqwq57ZIgPn19z/
ccv4tDTcvzA+zHwYH2Y/jA/zL4wPcz86H+Y/ACwvzBs=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lHss1WEYxw9atFYtl9M5xzk4F4uhCyfDbD1mJKMpfi82zWLnkCZa1NxG
VEtazFac02XIxpZbjGI7UvKHXBsplxaGCIX1B5N03t/r/N6trWd799vnj+f9
Pc/3+b6PNCbpnMqEx+MZ6U+4/hjrT8PUwoPGeQSH1xQL2j1iMLBKrQ9/MWhw
zCL41b7aHHdNDGEpipLtScrvhpxUwjHK5ms+A+pRBKU4z1MMgoCQ34JPCE7V
dFXxPlsDvlb9FsGbgvZc5bNDJP8hgl4cNVZwPrHrT+NVyvMv602+RVBm8wMR
ZH5dH3Nb5HMcujy0Wjol4Ni2raxd9UMIlrieYASTftE+2hciaL6ZOdgUiaAE
1zcqgY4siUdcCoIefL+zDGYsJd2z2QgUI9OhvMdy8HYe1s5pEORseiX3Vysg
Odq0X6j7P/NwDFMWL067i2YQ0TFSAWsNIZe0PQguJq3c6lYqOD3yvU+3qSvk
HF/vbPHTuFDOwP0+khE9BhH4FuWZqxNkEIX1Gqe8tK/9mGaNstlGWVyTcTj8
rKi36zOTc1xr7rw/ro7yzIXyEWW9gvT7BcHG8mKHp9we7HxWY3t1lJVu+iik
fC/w+y5lKoIJR0nNdpMcAjPyjgZdRkQHkBM/Ren9UHQg3X2vPazvji4NcqH5
H7sSlTm2lLPqWmKyPzAc36kKf+9azUAB1sdYxjGrR4aUY1yWW6wUQmz4CcHP
GRjH9fhKyf8bKNvP5D3ta6FcWexlFPyKgRWsT7yU9NvKEL/ckEJaRPWJviGG
zNNBQfxsSufL9i+hzM7jJOXcs6ef5PgjCMD+r5ZzrEvKXNZYUWbncV9G9PdB
XL+s7z0QyLEfJ+xI/TYIBli/WpN+LXb8fkZA/LjFcO/F3z7VWDtMmf0OUmbf
g44y69PaHQ7ik/u6GQjD76ucT+Y/sKPPQQHHFmnFKX2VlNl7NEKiXydD3quT
iOjVTLmobP34XAXlmoLxeF4hA+ksCzk27AsDk3qsCDft/K/VkpuXgR29inuy
1ymzepsjcMD7Lp9P3osMwTaObAHR9wjdN2z/DOLy2X1yhXLr2N0t1WvKhv25
dDuxwHVTBP/u17+reoht
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{103.49200000000002`, 8.2875}, {103.49200000000002`, 
     8.526560000000002}, {103.26599999999996`, 8.526560000000002}, {
     103.09800000000001`, 8.526560000000002}, {96.58589999999998, 
     8.526560000000002}, {96.4188, 8.526560000000002}, {96.19219999999999, 
     8.526560000000002}, {96.19219999999999, 8.2875}, {96.19219999999999, 
     8.04844}, {96.4188, 8.04844}, {96.58589999999998, 8.04844}, {
     103.09800000000001`, 8.04844}, {103.26599999999996`, 8.04844}, {
     103.49200000000002`, 8.04844}, {103.49200000000002`, 8.2875}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4i9/r1S8FItxeNOW221kLeuwp2SyBAsbgr//
1ELXbcwxDjX3f9wyzpZxEGg+cGrh32gH9U8qL2edlISo/xbtkJ4GBGySDvVZ
QJEP0Q5ua44uZ5gh4bDAddvnv0cQ/PXuD6tE1iH4YPUKCH5EivV9f9Nohweu
8Y6zNko6THHuznmeHO3w9z8Q7Jdx0GkXu3muPNohFWTfM1mH8pdqhhxvoh2q
Qe7zVnKA+WcmCHQqw/ke+2tlLZ6rwvkg7WnLNBweAF3jfjHa4XmW9rfptVoQ
91Qg+DJRQAfJI/hg97yOcgA557+8BpwfcEu6JlFIDc6v+bQhIPuWioP+XRW2
Rt5oOB/sfn4EH2Y+jL9h7vvlx4yjHXxOsNvONlWF82eA/PMTwTfQWil8YYma
Q/m++VL6qtEOOxyaHh2XUIebD+ObdzomPOVA8OunAh3IjuC3vA7cIcca7WBk
DATC6g53gM6dKhztAOIab9ZwWF+UMfGtTbTDm+Ktor9PazrY3PfvnZ6H4Ifz
6W6aux7BB5t/HRgfIP9IacD5sPCH8cM5xdqN7ys7BOyQa329MdrBeUKzUJqU
kkMLMHm5tkHtn6wAD09wfEaKwfkmYAWiDrG7PHmYgOkTxkdPzwAY4Um8
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIZIGYC4gdVIuvcd8Y6/AcBeWkHGH/6TCC4KevQMz1P
qHkFJn8GiG8pDefvCLaK+H9c3OHPyo+XfCfFOqSBwDFRB6BpD6tKEHywegdM
vvuao8sZLKTg/O0g89il4fzM/A+tJ01UHOxN43Z5rsHkg817poJqPhL/dfFW
0d/emg6hfLqb5uoj+F/+Xql4qRfrcAYEeNQd2NfIRKUIxzqY2ewNmnZQxeHp
b6CHzsY4PElceM1kPYIPs58/wnLLCb5YDD4sPGH8B67xjrMuijrUT3XuznGP
dQAF38ydIg5A26zv5yP4T5bOPqKwAMGHxUdfRLc/4wZxB/T4AgC7ec36
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQfV7p9s86r3iHVgV21TMlkg4wfsDbyx9nKMo4zJgJ
BJaYfJh6GP9NW2630W4xhznvlx/zVo93AAnPjBRz+B78eOlsGQS/JGPi25r/
cRj8YJD5DyVQ5WdKwvnV93/cMv6tAOfvya95O9NVCc53mdAslGal7HD9HNDG
u3EODb+tCs5pqDj4907PEzoc5/CqeKvo79cqDgkCEZZbFsQ5SEy9wpnhpOpw
vGzffKl6BH/Fx0u+SQ4I/pWKl2qGAnEOHmuOLmf4oQznO4Psy1KC898vWq9w
doeig2zr68AdcnEOxiCQrOiwXQ4oYIDgbzkBtNAJwQ/l09001x/qv9MIfunh
ba4zY5Xg/A8g8yOUHTL2lEyWMEHwa7OAAhoIvjhLGJ+uFSx8VRy+/AW6MC7O
Yc4i5Z1/jqs46N5VYWusRfBh4QHjP/298uOls3EO4Zxi7cb3leF8mP9g/Nua
smv+H1aAu+eBa7zjrI0KDi7dOc9//4x1YACBBFk4HyIvCefXgPz7WhQe3mD3
7hRxeHIBmADzEPytn4EeWIjgT3EGGgCMzxBQelko5nAXFMGX4hzOgMAbCYj/
rsY5KOxasC91nZhDKTB69d/GOXzZ93Fr+jcRh7XuD6tE+OJR+XIIPiz9Q8wX
dUDPHwA4lYOY
      "], {{123.21599999999997`, 6.984380000000001}, {123.21599999999997`, 
      5.81406}, {122.344, 5.418749999999999}, {121.82999999999998`, 
      5.418749999999999}, {121.24399999999999`, 5.418749999999999}, {
      120.75499999999998`, 5.85}, {120.75499999999998`, 6.423439999999999}, {
      120.75499999999998`, 7.999999999999999}, {122.786, 8.143750000000002}, {
      123.21599999999997`, 8.167189999999998}, {123.21599999999997`, 
      6.984380000000001}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
     0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0,
      1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v8gUJzgYGIMAqIOMP6XfR+3pk8TczDvdEx4
moDg9x/6qhETjuBnP/+98mNYgoNw5aSSsywScL77mqPLGTIU4PyV315WnFmg
BOerXHsUzOCj7DBfSv+uil+Cw4ldO3rZBFQcri8usOVyTnA4ddhpbeY/FQdu
Ju12McMEh59vXx+wVFZ1yN5TMllCBcEHcVn+xcP5EkDj2B7GQ+zXUHZoBzr/
wq14h/LD21xnrlVyUDXkWCODhQ/TD+YXxTswgMADFTifhbNLPllPxWGt+8Mq
kWUIvm+SQITlmngH34sTY/4xI/hg+28owflRqhEy5/ZIwPmw8Nsw9/3yY4sR
fJh96HxY/ID92xbvUHX/xy1jb1GHNTJRKdbrEfwXakANRxB8mP9hfJO4XZ48
TAlwPji+udHinxsRv8fL9s2Xeo5wz/Vz34Mf38Xkw/wH44PNOa8A53faeO5K
C1J2uAwKAM4Eh4bfVgXnVqg4AH0TxqeI4N/+WZe1xwLBVwf53w6afgqU4Xxl
UPr5owjnw+yH8WHuuwGy3xLBh9mHzof5PweUPrUQ4RPKp7tprj2CDwr+MC8E
/7DChqKM0ATU8M1CC1+k/AUARfuMog==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{137.763, 12.1906}, {137.763, 12.374999999999998`}, {
     137.58799999999997`, 12.374999999999998`}, {137.47699999999998`, 
     12.374999999999998`}, {132.89499999999998`, 12.374999999999998`}, {
     132.78399999999996`, 12.374999999999998`}, {132.609, 
     12.374999999999998`}, {132.609, 12.1906}, {132.609, 
     12.007799999999998`}, {132.78399999999996`, 12.007799999999998`}, {
     132.89499999999998`, 12.007799999999998`}, {137.47699999999998`, 
     12.007799999999998`}, {137.58799999999997`, 12.007799999999998`}, {
     137.763, 12.007799999999998`}, {137.763, 12.1906}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4tMLXbd9PpjokAYGKg4w/hkQeKPiAOL+3YHg
g+kFCP7HS75JAkD+iyztb9NlVeH8zPwPrSe3IPgvireK/u7Wg/NrPm0IyP6l
55Bsfd+/d36iw4nDTmsz/+k5FNhyXV88A8Gf+LbG3rQv0eH81bA3+tFA9QIR
llsaEh1mzASCn7oOs48obCjKwOSbGANBsa5D/6GvGjH5CD43k3a7WC2CP9W5
O+d5d6LDkwjx7RcfIPgw98P4MP85Jjy9oNSN8P/nv1cqXhYh+LtLJkuwZGHy
YeELdl9JokPgLemaxCIVB5B0WBeCHw80/vZUBD86BRhACxH84gxgiGxH8NHj
DwDQUd4q
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4vinF5RupyY5vKh9nH1eh9kBxr/Be1sstQzB
T00DgmXMDv2HvmrExCc5tIjXsma6sTr8vVLxUs0Sqv8Nn8P+UwtdtyknOcwE
gUhxOP8MCPQowPkndu3oZTNQdWAO49PdZJrksF71SfM8XU0Hk7hdnjxJSQ7y
y1946P3Xhtuvoyj/JcdMB84Xn3qFM8MJwc/I/9B6MgTBnwGyv1LHgV9309z3
yUD38vqvn9Kq45AO8kcSgm/LdX1xQSyCr27IsUbGDuqes1oQ/2onOXifYLed
XarhsLgAqEM8yeFN8VbR39xqDtdBAvxJDuWHt7nOrFWG82H+hfGng9xzU8ZB
+fbPuiyRJAeNTyovZ2mKO9ibAj2skeRQff/HLWNuIQdG7Xaxm0D7pTeKzWda
wOEw8W0NUEmSA7cjn9eMTCa4+2F8mP9gfJj/weE/E8GHxS8A0z/UVw==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lHss1WEYx0+0ooxSTsdxlHN+B6eQ5ES6ecxU1m1LKa3r+3Mpq9gyFVZJ
Nztziek4pEgnbEr3DSVd10VYTAkjMjMJlWRqet/f75zfu7X1bO8fn9/2vr/n
+T7f55GjqI1hpiKRaAI+W/AxwedP45FeJw8WnL8pe3PMZWDksHAcK2Ww2dLt
dp47Cz+qhu5FxMogJHRp+wY3yru66xUtcym7tyknJWLO1uHwkcECs1LZNhUL
q0qfF4k+2EFlTKZk4mwWHmuqTqoLZ0Fh9PIp7yezUEOi1AZcb+cNFP1EAkec
70/w7aXM3e9EkND+66Nnn1jgoP6GoexPEoHnVORXhX21hUN78QNdCDoCdvnl
3JKCZn/PWAl+T0vya7aHHRWBFiYjCN6Q910V0DJ6LPLBbwTKps4g0UUGhlXb
056Ys3BibEl0bbES0p7gL3b/53N+u7vrnShPcDkrbp7PAvmdLkQJWL0UrYKF
fVGDp1+plYIeycsCK8KvMAIffno/QOdGOZ7Um6vg9XBkwT89yTo8UsHrNY+y
ygML7kU5X4o7soKFgStlDm/NGIGvW7taRtyg/HlPQZO6TAmL776MrXJhYbS/
r9qHcYRHrwsC7ttRZohAEylPxu0Nxfq1zrUvHb/DgBW2y8B3BCISwACRQ9GH
IDvdKs5rqiMQeWMaEL2fmOWvqaFc9GKNd7KesncyfiEdgYboY6IQmNMjXi6w
JwlWDlt8cAEZCFpIPv5y3s9ZlDl7Z1Mm7R3GPEj02SsH02BseJ3BL4ly0Oc+
c7h5DfH9VCl5P1cjob9c/W8oEzsXtlIeercOTetAsJr4v5gR+GFUQr/OhjLX
j1QF77c2Wu8AEaQZAUP82OrA54/1quP8asfX+8Lg9/US3o+VdF5wNy9Liyhz
7+kp140EdelzKXPznmngtWJowOltLUCwicxXgZjv/1WDPtMlAs84mhHz9ipl
zu86W16/S4Z5dZHyemkpT32PN0AqZd9FOysCTyGI49hWYOO+MDKfjw2MlWAF
Lxj+Vz5T6JeR8fQEW5ZTVuPrFlgvFdl3yWJwJvNSi2CcxHEJr28j1YPTs4fe
5/bbMOUU7UHrJBkrsHF/fjlzQLNwTAr/7te/KiuElg==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYCYu12sZvndic7nAGBHgUHGL/08DbXmbFKDgwg
sCPZQbTH6xVLiKqDzX3/3umLkh2qP20IyJbScPh4yTdJoCfZISX2jhvzDy2H
ZIEIyy05yQ4tvP7rp7TqOMw5orChKAPBz3n+e+XHNAR/igRLGF9qssOMmUBQ
ieBn5H9oPRmC4ItPvcKZ4YTg6yjKf8kx03FIsQY6KDvZgYWzSz75nLbDV42Y
/kMTkx38Lk6M+Zes6WBiDATLkyF0sSqcD6KMJyvA+WB/PhB3+LD8mLf51GQH
9U8qL2ed5HfYP19K/y7Q/UtuLX9s2MwCtz81DQiWMcP5N3hvi6WWIfgvah9n
n9dB8GeCARPc/9yOfF4zMpng4QPj23JdX1yQi+BD4gXqHk9OiH/nJzu0K7Cr
ngkRdLixuMCWa3OyQyuIbyIGj78Y1QiZczHSDujxCwB06MFd
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.43800619151798],
  ImageSize->{179.11109339975093`, 48.21121793275218},
  PlotRange->{{0., 179.10999999999999`}, {0., 48.21}}]], "Output",
 CellChangeTimes->{3.93866546780567*^9, 3.9386656000247107`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"225a1452-3c6a-f648-ac97-a812058ffc74"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "3"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["x", "3"]}], "-", 
        RowBox[{"2", 
         SuperscriptBox["x", "2"]}], "+", "1"}], 
       RowBox[{
        RowBox[{"2", "x"}], "-", "1"}]], ",", "x"}], "]"}], "//", "Steps"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["x", "3"]}], "-", 
        RowBox[{"2", 
         SuperscriptBox["x", "2"]}], "+", "1"}], 
       RowBox[{
        RowBox[{"2", "x"}], "-", "1"}]], ",", "x"}], "]"}], "//", 
    "MaTeX"}]}]}]], "Input",
 CellChangeTimes->{3.938665332498466*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"2c93dca3-bc37-bd4a-ab83-bff6ad54b1d3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["1864", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"PolyQ\\\", \\\
\"[\\\", RowBox[{\\\"Pq\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"IGtQ\\\", \\\"[\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"||\\\", \
RowBox[{\\\"EqQ\\\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \\\"1\\\"}], \\\
\"]\\\"}]}], \\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{"Pq", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", 
                    SuperscriptBox["x", "n"]}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"Int", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", 
                   SuperscriptBox["x", "2"]}], "+", 
                  FractionBox["1", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "x"}]}]]}], ",", "x"}], "]"}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
            Rubi`Int[
            2 $CellContext`x^2 + (-1 + 
               2 $CellContext`x)^(-1), $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"General\"\>", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                FractionBox[
                 RowBox[{"2", " ", 
                  SuperscriptBox["x", "3"]}], "3"], "+", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", "x"}]}], "]"}]}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
           Rational[2, 3] $CellContext`x^3 + 
            Rational[1, 2] Log[1 - 2 $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"PolyQ\", \"[\", RowBox[{\"Pq\", \",\", \
\"x\"}], \"]\"}], \"&&\", RowBox[{\"(\", RowBox[{RowBox[{\"IGtQ\", \"[\", \
RowBox[{\"p\", \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"EqQ\", \"[\", \
RowBox[{\"n\", \",\", \"1\"}], \"]\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[$CellContext`Pq ($CellContext`a + $CellContext`b \
$CellContext`x^$CellContext`n)^$CellContext`p, $CellContext`x]], 
          HoldComplete[
           Integrate[
            $CellContext`ExpandIntegrand[$CellContext`Pq ($CellContext`a + \
$CellContext`b $CellContext`x^$CellContext`n)^$CellContext`p, \
$CellContext`x], $CellContext`x]], 1864], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
           Rubi`Int[
           2 $CellContext`x^2 + (-1 + 
              2 $CellContext`x)^(-1), $CellContext`x]]], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Rubi`Int[$CellContext`a $CellContext`u + $CellContext`b \
$CellContext`v + $CellContext`\[CenterEllipsis], $CellContext`x]], 
          
          HoldComplete[$CellContext`a 
            Integrate[$CellContext`u, $CellContext`x] + $CellContext`b 
            Integrate[$CellContext`v, $CellContext`x] + $CellContext`\
\[CenterEllipsis]]], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
          Rational[2, 3] $CellContext`x^3 + 
           Rational[1, 2] Log[1 - 2 $CellContext`x]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.9386656283774757`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"c6321a38-c0b1-4347-83e6-3518fe5b90e7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["x", "3"]}], "3"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "x"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.938665628393091*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"4ddc897c-4fd0-244b-b74c-7e56793739f7"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.0041310364770520925`], 
   {Thickness[0.0019746354360309004`], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4v6Ibn/GD4wOF/Pj2c8ZOjgwgAGrwxkQMHFw
kNkoNp9pAZtDehoQhCH4k7+xxc+oQfCfJC68ZrLewSFGNULmnA2Lw+cNAdmz
jjs4qH9SeTmLkwnO3+61wWJO5X97GN/EGAg2/7J3VS1lmrUBwQdRxtUI/k3p
mkQjXQeHw937mkyUmRxmzASCm/YON3hvi6V+Y4fz1wrp8KXbCcP5HmuOLmf4
Ieqg+qR53tkgR4dokPtiJB30Jyz4Ycjn7FBx/8ctY25ZB5DymR9dHMD2Cis4
JBy+rJ16082h9PA215mxig77a2Ut0o94OPwHAXslh/v7+OYYc3k5dNp47kpT
UnbYope3mNHG26EbxP+kDNHP6OOwASyu4tC6PPyUkY+Pw5viraK/uVUh7hP0
daj5BAyIXwh+SuwdN+YdanC+1Lw4zdMB6hD7v/g4JIQEqS/IVHdIBcXHOx8H
2eUvPPTmqznkcP5ckP7ax6GB5Wi/oTlU/0kEHyy/GMEPKVGZ/r/Ax+HErh29
bBfUHHj8109JjfBxmNLeGnU5Rh3OPwaS/4Dg1/62KjjXoeGw51bX39R8BJ9l
8SQrxqUI/gdQ/H73cTh12Gltpp06JB6NfR2YOLvkk9+pwvlg+2RU4Hywv44p
OewF+bfHB5LuyhQdpoDSW4i3wx1N2TX/kxUdHJoeHZ/h7O2wI9gq4r+7jMNG
UDi7eDiIVE4qOcsi7lAZscL0bLQLRP64KCR9FzpD5FNEHMSnXuHMKHJyeOAa
7zjropCDvOPH5DNzHR1aFdhVz3wRdIgQ336RQc/RYcmt5Y8Nm/kd5tvoXJnF
5+DQIl7LmnmMHc4PeOJ5yTSYBc6HpXdYfkLPXwChgWXV
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4gnBJSrT/5s4zAQBSU8HGD9CfPtFBjdPB5l5
cZqnFyD4S+7v45sz2RjO32L+41BKl7EDj//6KakRCP7OW11/U/sRfLD6dz5w
fo/XKxYTQV84/w3vPoOZQr4OtpURK0x9EXz/ixNj/jEbOyQcvqyd+tLHYfoE
/iqzbCOH2t9WBec2+Dj8BwF9Qwz+3lpZi/QWH4f0NCAoQ/CfJC68ZsJvBOd/
3hCQPWu7kUPr8vBTRmsQfJj7YXyY/04edlqbuc4I7v9ukD8WGsL54lOvcGY4
YfJh4auvtVL4whRDh8nf2OJnyHg6PM/S/jZ9rxGcD1avZAzng+1vR/DB4bPW
BM5Hjz8ARwXLFA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{32.892199999999995`, 53.18749999999999}, {
     32.892199999999995`, 53.4266}, {32.665600000000005`, 53.4266}, {32.4984, 
     53.4266}, {25.9859, 53.4266}, {25.818799999999996`, 53.4266}, {
     25.592200000000002`, 53.4266}, {25.592200000000002`, 
     53.18749999999999}, {25.592200000000002`, 52.94839999999999}, {
     25.818799999999996`, 52.94839999999999}, {25.9859, 52.94839999999999}, {
     32.4984, 52.94839999999999}, {32.665600000000005`, 52.94839999999999}, {
     32.892199999999995`, 52.94839999999999}, {32.892199999999995`, 
     53.18749999999999}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYgXHj8ln3ro4vOfdZzBTysthg17eYsYzCP7O
W11/U4+7OLioljLNYvByMDEGgt0uDvtrZS3S13hC1K9xcdgIoqd4OvR4vWIx
WejioDthwQ/DNk+HZS889P57Ivhty8NPGckg+N0g9YzOcP4bkL1azg4Jhy9r
p670dDihaTXpdLszxF5uL4fPGwKyZ613dvgPAvpeDgwgMMPFIVx8+0UGNm8H
mH98TrDbzg5F8FkWT7JifIvgnwGBOT4Q+5JcILSQL8T9G53h/OMg+/87ofKn
O0HcU+0D54Pp795w/oX8ePZzK70dfsfkHv13C8EHu/8+gg8zH0Ve3RkS3gcQ
/BkzgeAjgg8OfxkfB/GpVzgzuKDhZekDNx/Gvwgy9yKCX7xV9Pfpcwj+/X18
c4xPOUHC09zH4Uniwmsmz6H8+VD9ltD4eebjcFO6JtFoLoIPVi/vAueXgMzP
c4H4pxLBh4U/jP8DFC5Z3g4VEStMzypD1f/0cpjyjS1+xhlo/E73godnGgjY
ecL5oOCYKenpEAGK92MucD56egYAUHlL1A==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lG1IVFEQhu+WaUZKVGYRRUFWUq2pK4pojeS9d89eIbFAsQ+1WFcys1DJ
H1mSkKQ/KjFaLT9CUJEoi8qKMqHELT9qUyQrkEIoKIxMrNTcds7ZvfOrgcPy
LOecO/O+M2f9ofwU63xJkgzulepe89zLeLHxd/haMzwtWRNjm2Tg5bvGY02G
WQYujGAztHwxG10GCxTcC5rpDSTeU7jhiksinmhPzq11qRB8ecg/Z5rB7P68
7rlpFcLw3nEGNRhOVeyzMdiL54tVOD0Te3xgM4NzLakvI0zE9XFbh2rnFJ35
+Y8KyCFF82qTiR++q/hrvUDM721n4jufFch8NrjF+oJBzHB3nklSwZbtDqMF
khx+8VejPDxngeop3wx7kgqjnYHXItM1UPA7pSosn0h4lV2nwY3K9zlSz/+5
D2OSeEFTVawhyAx2zOu8BrdR1zEVFu++VW0t1XQ9itNao/r3ETdg3TuIub6r
NGjE/8dVWJfw43BfgCb08jHr3Iz7wol5HSlmkU8UcSH6eJCY19HgqXehx//H
GgRgng5VZ1OkO3KJx7KuD5uiVYhGXTM1oXOoKvbt0mAb+u6rQlpwh1O6rwmf
WhT9PK+7ktgRGlvV+13WeWT1qayIOhlO4r6fFp25Hk7idtzfZ4Gj/n8abU0y
lKMuzy2in28Sr8S+fES8FHV5IsMS/O23CF+6ZNh59lOPfdACXXwuZKFfiSb6
OV3R/eX1lxNzP/qInfkZfgMjCnzAPA8QJ6LOMcTcjxWa6OvXil4vtmV2pyJ8
avPkX6HAGZyHt0zUW6CAD/ZZCRM+qjQvXPcpWWd+3zgxnwcHsYTRKos+jvPc
NyoL31QmfP0qwzKsr4i4B30rJ+bz1MyEfkOyqPcBE3p1EH8L6NxeU0W8cays
vv+ILHSwE3vfCy/zfDYxCEG+I4v3ZhHT/fIyn4N4RWeu9wlFvHeJTMzLJQUw
7cgyJvRtI/14/b/oPM8jTNUZsE96ib3vJ6/rDbH3ff0Hhltfzw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYhNjICj2cphvo3Nl1jdvB/umR8dnBCP4/P7r
p6QGeDnc38c3x/iRtwMPiO/h5fA8ceE1k/XeDlv08hYz2ng5VESsMD0729sh
Qnz7RQYzL4g5k6HqX3jC+ebXjuaa3EDw3/DuM5iphODvr5W1SF/j6fAfBPh9
HKZ8Y4ufscfT4QnIPnkfhz23uv6mPvd0CClRmf7fwcfhuKbVpNPfPR2eguT9
fRzWdN/OYDD3ckg4fFk7tdPHAeY/MP8ggq8zYcEPQzlfOP/DhoDsWdN9HW5I
1yQa8Xo5hIP88czXQd7xY/KZXk84P5vz54J0YQRf9UnzvLOHPBx6vF6xmHQi
+HNB4aeH4IP98ccH4t9XHg4inxzPp331caj9bVVw7geCrwdyF58nnA+2X9cT
op/FF87PAblDG8EHh3OCr8PvmNyj/355wPngeHyH4LctDz9lxOPpoAJy1ypf
B1fVUqZZAZ4Oe0HhfsQX4r4mBB8cbg8RfHA6EPJyKAfFdzGCDwtPGL8dZM8W
aPwc94SER5qPwydQOPt7QsL9tTckvs57OJRsFf19Os0bHl7g9BCN4IPdEYng
g9OHvbeDzwl229mhXnA+enoGAHSQSY8=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYCYlfVUqZZNgEO6WlAMM3LAcbP4fy5IH2zl8Pn
DQHZs/QR/Pbl4aeMVBD8+/v45hgv8sPgz5gJBJE+cP6a7tsZDPkI/hvefQYz
u3wc5troXJnVhuCD9WVi8sHuKkDwYebD+DD7HZoeHZ9x2AfO152w4IfhOgQf
bO4kTP5/EJiO4Ks/aZ53tsrLYco3tvgZaxB8mPkwPsx+dP4ZELjiAefvvNX1
N3U/gl8RscL07GIPhxvSNYlGrQg+LHzQ+fKOH5PP7EXwYebD+DD7YfED4/cD
vf9MD8GHxS86Hxb/AK/o9/c=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
      0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
      0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAGIQrW016XR9SZBDSInK9P8SXg4wvsAnx/Nprl4O/nJi
Wb7qmPw70jWJRn994Py7+/jmGEv5wvlLX3jo/Vf0ddAEmSeD4KenAYEYgi/9
+pGZlAiCHym+/SIDX5DDlw0B2bP4fR0qI1aYnlUPhNsP48PcGwyiP2Dy5R0/
Jp/p9YTzb4HcG+rpsPNW19/U94EOESB73DwdPoPs2Y7gL55kxei7ApM/EwQk
PR2sda7MerYz0GHyN7b4GTKeDt7Vzfo+3xD8mNyj/zZxB8H5+fHs5yQVg1DV
xyH4j0VkTz7ND4KbD+PD7HdXLWWalYDg167bllSvieDDwhvmPxgf5n8YHz1+
YXwAhtPK3g==
      "], {{71.82499999999999, 52.54219999999998}, {68.9219, 
      52.54219999999998}, {71.82499999999999, 57.04689999999999}, {
      71.82499999999999, 52.54219999999998}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lGlIVFEUx2e0zcgKNM3CMihaDC21EpU6kqL3Pc3pXUFpc4lxrGj5kBSk
aRpIJRSSNJqhJGhE5ODWQlmkJurkkhqSWaZltlJatGhO7947M+dTF96HH9x7
3jn/8z9nWfJhRe+o0Wi06henfg7ql36zLjnzB4UHGZ6Bhu8EbFzjc6hMO0nA
kKKeMQoVo5E+Fq0EXqHf9po/I18o/bV+ZAR5sH5usb/K7gU9Tql/CLxx9Wx5
O0zBl138QiDAXz0dFMZMugNFBiLeX6VwciLoSPsqAt5B+W2ZWci1p9M7q/XI
/H0chfAVaQ5FOuQ7z8/+1Z9Hjj26/JLFREQ+OygkNnR761sI5GwnV7JSqKjL
R4I86cO0gFNWnpLA9Pp9QVUehVf8nQyzfpcaqsspuI6FdqRckSFkbU/RSMv/
2czOIPLorUrHd18pGAvVc0aGh0znPgpzYiov6rNkux7H469teLITuYQF3ozM
9fWQhR4DVPTBWYbVTK9RZK6DBbm36WBA1rxYkc8G5KO1Cyba9iDfONefqimR
wYnV+8Ha/3syfHKuX1fYiqxhpxg53v1WlyabwqZnaqBEGRZG6iYXnqAi760y
ZDA/7aPiXp0MjWobPILwfVl+kDZ6LbJ8Isc36qViZ8r6WKPAMabPuGRnrkcX
sondN0uw+OPQxkW3FcitiGv1a5TE/+8jjzPfNSAfTpjZ7tGkwHymzxNJ1PtY
gS3ZQ83GbgkimM8GFaFfhgzDzM8u2F9e1xpk3o8oZN0St/3RlMKLxelJfruR
w1jcQGTeDzer/tuovV5mm8Jwqx+vW/P3ppDJ5qGPiHq9KExjQmYQCGZ+dMJ5
cWF5vFbszOMNIPN5aEXmc3BXET4OscbrVYSvIghY2OlXRNw05GZWeC4yj1NO
hH6diqj3NhF6PULedbBpqqoSmc/BZUXMtxHZti9szPNZaeUHitg3s4m9Xzb+
OSPBGDWd2jmG6b3Uuu/CiIjjS4HZ1T+HCH2DUT8+30n4nu+Tk8jcR2Zk2/7k
PnqKbNuv/wDXwWOB
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxdk21Ik1EUxx9fSAcZEYZERAVKpL07ECTpLOiDPvehiDtmL8NYTI2yVay+
pMxmSJSR2SKdEVJQIOKGy00i/KIrc8uUrKAXiLAlldELhbHMnnufe3egA/fD
j8O59/z/59zVDtduZ4aiKGn6segnXT89F17VKkVWqKnW44sKkv/sr4v+3U7g
14KqdmKyQs7OgM/ZKvgZBXf/0mTsNoEOFnMUjph+d9UMEWBlfcut4EmWHhvL
1lKcd3XSVLsXObjh6K20Hg1WWb4djM9QsOVFJpSEBnEWA8hvBxddL/YiT0cC
GR8qKeRPNd143I2c+93ypNqO/DW467C/RIP+s/XjISeF+y/PzznXaNDaNbs5
cQI5W2875EXm9S0UVrK+ypC5vn3I1J1/bb5Rgx0FJ9P99aL+kmb0cZwKvzQo
YH02U1jIeESD4adFzmW9FLZ53z1sj2lgLtYjglxY2hbzDP+X/yT9RZZ+Subz
WqLBWlb/mkLJ82ideRrnFWWJFwQqmY8PRH6AQMXppo3kHoX1zJgwMe7rpPCG
+d5HoKE37PBcFnqDxNB3kcI8iwAy13kT2cce9on32pCZjJAfufmObXTLXWTZ
v+St6yb9iZ8UDgzpxu1Blvsqme+tSzXmPUGhpeJjprlcNeYbRpbvS+Z+uymQ
kayyTrsKn3MGN3U4hP9XVEO3G5nff4bCLPO7G5nvbRx5MfNhRjX0nxL5TJLa
R8lTuSsevbch8/9ULub9Q00x72sUedxVlTV2SHCDyBeqYGf/K4LMxtyYRJb/
m+/jOWTp5z8LJOhD
     "]]}, 
   {Thickness[0.0019746354360309004`], JoinForm[{"Miter", 10.}], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.1391, 45.090999999999994`}, {
     85.49689999999998, 45.090999999999994`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{38.09219999999999, 36.887499999999996`}, {
     38.09219999999999, 37.12659999999999}, {37.86559999999999, 
     37.12659999999999}, {37.69839999999999, 37.12659999999999}, {31.1859, 
     37.12659999999999}, {31.018799999999995`, 37.12659999999999}, {
     30.792199999999994`, 37.12659999999999}, {30.792199999999994`, 
     36.887499999999996`}, {30.792199999999994`, 36.6484}, {
     31.018799999999995`, 36.6484}, {31.1859, 36.6484}, {37.69839999999999, 
     36.6484}, {37.86559999999999, 36.6484}, {38.09219999999999, 36.6484}, {
     38.09219999999999, 36.887499999999996`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4hOaVpNO/3d1MAaBzw4OMP7nDQHZs+QdHXj8
109JvYDgX8yPZz/nieDflK5JNHJ1dVj+wkPvvyGCH1yiMv1/BoL/CaT+uAuc
r/aked7ZVwh+2/LwU0ZvXBzm2ehcmaWG4K8Amcvo6vArJvfov0MuDj4n2G1n
b3VxkJh6hTOjy8WBAQQkMPmR4tsvMsS5OJiA/GWN4IPd0Y7gV0asMD1728VB
wfFj8plWBB/mfhgf5r8niQuvmVx3gfvfVbWUaVYAgt/j9YrFRBGTDwtfsDu9
XBx0Jyz4YfjNwaFkq+jv0/cQfLB6QVc4vwJkvzOCDw6fawg+evwBAD55wgA=

     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4nDx7RcZ2Hwc/oNAvpMDjM+yeJIVY6+Twwa9
vMWMb7zh/BvSNYlGVxH8Nd23Mxj0vTD4JsYg4ALnu6mWMs3yQPDbloefMkpx
ccjh/LkgXRjBT08Dgm+eGPwH+/jmGHsh+DDzYXyY/Tz+66ekBnjA+b9jco/+
s0Lwd97q+psqj8mfCQKFCP7+WlmL9BAnh4TDl7VTLRF8mPkwPsx+dD6YXucA
5weXqEz/PwPBF/7keD6t1sFh+QsPvf+CXnA+LHzQ+WB3TUfwYebD+DD7YfED
47/h3Wcw8xWCD4tfdD4s/gFAONZ6
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4tjco/82KQc4tC8PP2X0xdFB9UnzvLNCCL62
1aTT9QIBDvf38c0xvuXokJ4GBFwBDhHi2y8ytEHVMwU4eJ9gt52dC+X/8nc4
rgnUGO/o4ND06PiMxQi+guPH5DOlCD5YfZQfnN8KsrfFz+F3DNBhTY4OCYcv
a6c+9HM4AwJPHB16vF6xmHD6O8wEAU4nhxkg+qO/w+cNAdmz7js5wPzzJHHh
NRN9Zzh/vo3OlVnHEHyQN9LKXCD+3OPv0Aai37g4qIDcw4Xgg+2P9IPz40H8
j74Q94Qg+Ikg+qIznJ/D+XNBerOzw5RvbPEzTPzgfLD7LRF8mPko8o1+Dg9A
4T0LwTcxBoLTCD44/L85O2zQy1vMmOLn8AsUXkIucPNhfLC52gg+j//6Kaka
CH5FxArTs8p+kPAUdHGo/W1VcM4Byq+E6p/s53ACFD/7XRxKtor+Pv0NwQer
r/CH88Hmn/CH6AtG8GHhD+ODw8XF2UHkk+P5tFp/h2yQ+stODroTFvwwVIPG
b6ETPDz/g4C4I5wPCg7jzw4Q9/MHwPno6RkASKlPug==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lGtIFUEUx6/XyKIXmM9MM0ioFC1fmRWd2a20VNxJSAVBvOKjwoSwMtSU
blRo4OXSxUdqosaN8m1mIdiHECsfKWmSfojMV48PpkSFle3O7N3zqYFh+c3u
mZ3zP/852w3ZJ9PsdTqdnTzj5amX50cnz5cz3RQSXLtGdEMEbBz1wuHQnTEC
A8p4QgGuTvWVTxK4YY1/FfgI+cfq5PLoJuSjPhf0lY0U2vzP1duNEojKMwZE
P6DQtyvc3N9HoEIZFgolJz6vCiZq/GkKrpbRtZl6Aqban3tnjyF7fJkK3eKH
zOI9Kbzv2VgVtBs5LmdH2Uom8tcNPXsqiglEKOfxprCclNX7t47AfFeL/Zy8
34oyHARYapXOVkaoPC6Aa6T02y2OwuWE+yGDQSJkJzsMuWdRaCyZzNRdEqHe
HG4XY/o/BynDihzr5XImpotCsLKeKoLPtLFmsIaCdT7SfyVR1PRwWiSv00OQ
973tzQp2Qz6s6LskcD0aKDydKP6TNidAqaJXM/I28i11oBf5gN9o5eyYep5N
osbrY1tup4Uhs7rlqvm2UYhW6m8Rua4m5Ix0eRiQnxV4hmVEUhhRAveLUND8
2FBIKPfNVpH7KYBynUtF8JVtUKjD+DW/ajM6FiWNWz98srQ3IHcreeRJsFnR
Z1DQmOnxEJn59Z4ARnq8uuiKxHWoFvj/jcjM58XI47LMRSUS18cq8HxvSfDO
Iz8lsElQ19X38SL384Sk1Zflv4DM6uGI9e+8lj/c4U4hp9N5uT8UmfnXEZnV
Y0Hg+jtTLV/my3UUchU/GtXzy3qx+9BOeL6zEtw9KBfyFOF+HJa0+8J8bEVm
+9Ujs/tgQmZ1K5J4nV3U/aokros34et1ar6xyCnP3/impSCz/xQS/l2ZxPM1
E67XTWQlzP0iMnsaVD6PbOsXNmbn0al8XeL9Zhq0etlYufbt/chM7xkJEhUd
vQj3wXeJ551EuL567Dcs/51Ui2f95Agy6zNmZFv/ZH2yEfuprb/+A+XpbCY=

     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQ/YZ3n8HMbeEOZ0CAx9UBxu/xesViYgnlNyH4mlaT
TtfXhDtURKwwPeuM4JdsFf19ug/Bv7+Pb46xkafDAxAtFO6QePiydqoigs+6
eJIV41cPCN8NwV8EpHx9wh3Ep17hzHiF4O+81fU3dT6CL/LJ8XyarzuEbxPu
cDE/nv1cpbvDLpA66XCHJ4kLr5msd3fY8PDl1E1vwuB8BhCYguB/2RCQPcs9
zCEB5D5JBN/nBLvt7FA3OD+H8+eC9MmuDm3Lw08ZTYDK/3VxWAKy/wmCnwYC
cuFwvszrR2ZSDuEOy1546P33dHVQe9I876xXuMOa7tsZDOkIPkw9enwAAHxh
tS4=
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQrfaked5Zr3CHE5pWk07vd3WA8duWh58yWoLgf9oQ
kD1rvquDzOtHZlIO4Q6R4tsvMtS5OmxtqbmwWTfcgdd//ZRUD1eHNBDgC3fY
qJe3mFHG1aEDZM6LMDh/ySQrRt8rCD5Yf2OYQw7nzwXp2gg+WD7EDc5/sI9v
jvEhN4cJC34YPusKc9h5q+tv6n83h5jco/82zQ5zuJgfz37O0N1hTfftDIbV
YQ49Xq9YTBLdHWaCwMkwB1fVUqZZE9wdKiJWmJ59j+CbGAOBfDicHwHyl1U4
RJ03VL9jOMR9xu7w8Eg4fFk7VRLBB/tbDMFXBdG/3BzQwxcAhMGhuQ==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxFlGlIVFEUx0cN27RMMpdssUYMLbemMiM4UXeemaJmMfdJIFpjUppSFi2G
MrZABoUZuTSlrUqRpqkUokZqlkuZIWWEudRoJmJ7uPXue2/euXA//N6795x7
/mdxi03arrdSqVQWwtYJ21LY2ZszE0wbePheGr4/z0TAzP0xhZ2aEQKk8sfE
2wAeuhamxvj/IhAaa0fXa5Cj9mzoDluF/Cey73b+Sh5CmqZvzB8mMFY8+ibU
k4eYZx1e+h4C9hl1LwsdeHDvz7jWGkXgt3V0TsgghYfeB25auBK4WPDX70sj
8sKh3rUu95Fz2TJSOEqL1rRuRv5mW+Oba0A+c1f30v8WAa37Ycu8AgrZzFE1
gYGqEiuTYE8856aFHyzu5zKPasExKHzcqYPC/O+bXsWFcpAUPb3NeZgCYXYu
clC1+PRQhB2vcKXMW2S+5yoo4oH/jSN3G7et46GFrVQO5tL1j5oW8wCG3uc5
hzhFj/uZH+JVYcjtzLEf8numry0H+6pTLjmpediRor4ypeJAyM7RQW9kExOc
IL9rEzKyk5d0WIF8ZyDIeyoC+VPNnKursziwsfQ6u8BPzn8JBy4+H9XW85Dj
2OqlCteeXBSwt4lCwsx/BXsjOTj5oDI27SmVzq3loG/+ohefSyicD/46TVPM
gWdgVnNaOt6fIVwrP4hc2jN4uUyN/KTr3IR+TCfpY9IqLOrRgCyer9WCIWKr
MX1SB4/Z9yqt5N+KKkwdq9pVs5A7GxI16bOppE+dFiKZbjYUUiocxpobtZJf
Dzn/yRwEn8jwCYnCehDjT0a+wOo3C7niVOrr8lwKNmEl2fpwZLF+vZDFfMyU
6+0yVeKdYiuTgj2rR6P8fkGvUtYPLUSKN45CAAskmcCNrECL0HDsl2PMjwey
aG85stgPdshinaooqNjyle25yv0VSKS8LpP1ikce35XYMHkcWeynXCLF4SjH
e49Ies1ArhfGgvNvncJiHfbKnIlsnhdmFt/jQqCbsTWV5s3EFiVfZmbPKtuG
LOqtp/CT9f06Aks2je5uOSzX6xEi6WtAPW6y+Ivwvhh3PXJ505Ga6/a8wub5
uZTZbcB5ap6v/wHn92jo
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KH1EYUNRRmaMwwlNq0mnxd0dYHzWxZOsGE3dHVRu
/6zLikHwJfTvqrAFIvg29/17p/dFwflTnLtznjcj+OvdH1aJlGHyEw5f1k6V
RPAP1MpapP9xcwCalifUjODDzIfxYfbD+PtPLXTdFo3gw9yPzkf3Xw7nzwXp
v13hfB7/9VNSJdzg/oXxYfbB+DD3wPgw/8L4MP+g81lA/v/rCueD3XPfFe5f
GB9mPowPsx/Gh/kXxkfxHxIf5j8A6N/FLg==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJzIGYC4qWzjyhsSIp1uJgfz37O0MHBxBgIqmMdzoCA
iYPDlYqXaoYdsQ7paUAQhuBP/sYWP6MGwX+SuPCayXoHh5bXgTvkSmMdPm8I
yJ513MHhDZDbmozg8zBpt4sFIvh7SiZLsNjFOriqljLN2oDgG4PdgeDflK5J
NNJ1cLA1jdvlmRLrMGMmENy0d6gRWef+cBKCf7xs33wp9jg4H+w/ozgH1SfN
884GOTrI6N9VYcuMc9CfsOCHIZ+zwxTn7pzni+McQMpnfnRxEGg+cGrh1TiH
hMOXtVNvujl8+Qv04b84h/21shbpRzwg4SMd73B/H98cYy4vh4KMiW9rzOMd
tujlLWa08XbY+hmoITAeop/Rx2EJyP6oeIfW5eGnjHx8HF6oGXKsKYmHuE/Q
1+G80u2fdZMQfHGWMD7dVQh+RIr1ff+98RD7v/g4rPh4yTfpQLxDKig+3vlA
/Ls83iGH8+eC9Nc+DqpA42VmQfWfRPDB8osR/JASlen/C3wcSoHa9dfGO/D4
r5+SGuHjwB9hueXEPgT/7fJj3uYXEXxw+D+Jd9hzq+tvaj6Cz7J4khXjUgT/
Ayh+v/s4xO7y5GHaHQ8JN2NfBwlQ+E9E8MH2hSH45cDkxKET77AX5N8eHwcX
YPT8Zox3mAJKbyHeDu4Pq0TW/Y9zcGh6dHyGM5Q/Pc5hIyj8XTwg6c05zqEy
YoXp2WgXiLx+HCR9FzpD4kcyzkF86hXOjCInh+1yra8DGeIc5B0/Jp+Z6wiJ
j0+xDhHi2y8y6Dk6zHkPDIDzsQ7zbXSuzOJzcADGZlHGRAT/+e+VHy+VIviw
9A7LT+j5CwBKhHkm
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYCYpO4XZ48QYkOJVtFf59+Z+cA40+dwF9l9tvO
ITrF+r5/YKJDj9crFhNGe4ee6XlCzQGJDlvMfxxK4bJ3KJkswRLmlOhg3/To
+Ixqe4fbP+uy9mgkOrQvDz9lpOLg4Jjw9IISf6JDwuHL2qknHRyWH/M277yY
4LBRL28xY4iTQ3fO898rtyY4sCyeZMXo6gLnL3vhofd/ohucL/zJ8XyarocD
yPiSwwkO/0HA3svhghLQRqZEh+OaVpNOs/s4JAtEWG5RSHQIKVGZ/v+Bj8PH
S75JAg6JDqlpQBDn62DeCXQR0P0zZgLBQl+4f3UnLPhhuAzBB/t3JYKv4Pgx
+cxaBP+OdE2i0V5fh/5DXzVi/BH83aAA8ULwC2y5ri92QfCnOgN95Izgz5fS
v6tih2b/vgSH8ogVpmcvezucXui67fPUBIedt7r+pop7wvk5nD8XpE92g/Ml
pl7hzLBycTDgWCMTtSPB4QwI3HF0AFlfIJnokA1SL+zgwM2k3S6mmOiQv6b7
dsYDe4fz34MfL9VPdDAxBoJke4e574ExZJ/ocAPkvq92cPcWgNRfsIP7B8aH
+RfGh4UHjA8LL3Q+LL0BAHn4GZU=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4uPe5p2OHEkOCo4fk8/wujlot4vdPPc/Ec7X
2TT3/fJ/iQ6VEStMz352dQjl090093eiw6cNAdmz5rtC1H9PdHiSuPCaSbur
AzcTUORrokPC4cvaqZWuDkDdx7zvI/iLC2y5rl9G8MHqexH8n3VZe0qmJzpM
+cYWP2OOq8P0PKHmA+sSHdJA4J+rQ7JAhOWWHYkOJsZAoOzm0OGY8PTCp0SH
Hq9XLCY/3Rxg/qn7bVVwzsMdzre4djTX5AGC/x8E+j0cgK5ZXPA00UEe5F9W
T4h7diL4t0EO6kHwwe4pgronzwPO/xOTe/TfK3c4n2XxJCvGue4Oydb3/Xub
kfgg97cg+DDzYfyls48obJgGDe/NCP4ZEHiC4IPDn9/DgX2NTFRKf6LDZFB4
6XjAzYfx0ye+rbFvRPB7QA5sQPD7D33ViKlPdAAFp7G2hwPIudPboPzJHg4q
bI1TnWdD4+emh0P2npLJElsQ/O/Bj5fOvoLgg81/AfVPLoIPC38YX2/Cgh+G
ce4OQNv7D12Fqn/r5sAPTF7v90Pjt9sNHp4zQcDQFc4HhwePq8PvlR8v+f5D
8NHTMwACfkQ4
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxllHss1VEcwK8yqklm1Zr6A2XZlEdd7+RrnPvzyCiFYcnxLOUqkrW7XpbK
Vam065JkKhkbNdUqu/S4MiFhJLPSY6plplIzSef3uL5/dLbzx+d37zk738/3
YUOV25Lny2QyI7aj2J7HtvOCulUxfRS+N4Snl44SMPDHhMp++TiB0367PnX3
UHizUpWwYZJAoSbDMq8b+dIK40jzTuREi2jPxg4KW9pMfcrGGHu/DTv7gkLC
016H5BEC49WtIe6PKdh9zLvaGUNgoCrTZ1EthduOGVVGqwjEf+q2HdIilz2z
bjhQiCycP0khN/qWa6c/8rfFOmftCeT86qj2DdcJ3OAvyKdQ/MskvqSJQHOF
ldMwu0/LLxsFFI2pfF1LJZ5QwJL1d8rHKygs/e73MiWUA/u4808m6ygQu4Pz
Sos4eDrJvuj+5wCJH2UzI+34u3znwyAz5q+DXyoOlJZ5Le16CnDi/fOSLG7O
R516KE0WhvxKGW/a5YI8yPtdzIk+2ihsz16jmZVxoq9O5NgkJnwQuTeUWkSP
UFDw77FHvvk50HF2K/I7nfmVjRc5SB+drpnokvJfz8GPmb7cLzrkHeZMUDUy
n14N87d34dS11AgO+HKx1VBI4ZcbB7yOyHMUCoO/GstrOFjH9Fbn4HnPxrYc
nRJ5aOrInqZA5PQmdoNc8jOqmGPBhx5Z+H+zAtR7WQCuFB68KZhJvq8Q69kD
2ZRhkjdyLEuv/SbJT4sC3M+wCBhn3102/aJVAa+7fkd8CJLymcmJ9ZyI+RXi
z0Dmy3ngKPIak+OX/fMomIXVFyeHIwv164As5GOhVG/HMN7VvBAVBUu+Hsul
9zNfDXw/dBAx3t0UPPr1++SZRKzHndgvLJs9ocHIwn2ByEYOp5YPbkYW+t2N
goxfzgRM2fPUAVJ/eREx/5zkKw35T9w+/d/DyEI/aYnoz0+Kt5aIvryQma2q
TBfkrLQLY6q1EquRDfPCwMJ7rAg4DTODntK8mQmYy5eBn4ewjMYhp7LjvszX
T37euROxX/ZL9ZpDRL+H0IfgswDPC/OtBLmlvZLca0Y2zE9rv4nEDj3OU8N8
/QfrT2Ll
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4pkgkJnsMM9G58osMw8HljA+3U2JCL5Fp2PC
04Rkh/v7+OYYK3k4fPl7peJlXLLDk8SF10zeuztot4vdPBed7FAZscL07G13
hz8rP17yjUp2cGh6dHzGZXeIejcEnxGkwQnBt+W6vrhAFMGf6tyd89w82eE/
CPh7OPDrbpr73jrZ4THIvngPBx0gdznQvOASlen/GzwcZuQJNR/wgrqn38Ph
8FeNmH6g/QmHL2unnvRwgPkvEcRn9ITz9SYs+GEYh+B/2BCQPeu6p0P2npLJ
EgHJDuHi2y8yqHk5HPc273Q0QPCBrvu9UhDB17+rwtb4N8mhx+sVi8lJTzh/
Pij88hD8yd/Y4mfYeDr8rMvaU8Ke7CD8yfF8mqmnQ/wuTx4mbgTfgGONTJQA
gg+2XyLZYQpIvwuCn835c0F6NoLP479+SuoCT4dk6/v+vdwI/uwjChuKOBD8
xQXAEOdPdlB50jzv7CtPB2BoHfqqkOywv1bWIp3FCxIfugg+KPrUXBH8K75J
AhGByQ7loPje7Annw8ITxm9bHn7K6As0fuyg6WmZh0OyQITlFqB9xiCg7eHA
2giMcYZkh5Ktor9PL3OHhxc4PcxG8MHxORPBZwCBBneHCW9r7E2TkuF89PQM
AFiOOQ8=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4hNl++ZLvU5xmAkCnW4OMP48G50rs5a5OfwI
frx09hME/8vfKxUv7yH4l3yTBCJKMflnQMDHA86/v49vjnESgi/v+DH5TK2H
Q4TllhNleQi+iTEQpGPyKyJWmJ5NRvBh5sP4MPtZwvh0N/1NhvMNONbIRP1A
8G25ri8u+IjJB5vTjeBHiG+/yJDn5sCvu2nu++8IPsx8GB9mPzqfAQROuMD5
b3j3GczchOCv6b6dwTDdxUHDEOjAPAQfFj7o/JASlen/NyD4MPNhfJj9sPiB
8Y95m3c6PkHwYfGLzofFPwB1edtb
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4ts/67L2xGQ4zAQBSU8HGD9CfPtFBjdPB/NO
x4SnAQi+ClvjVGd9BF/dkGONjF6GA4//+impEQj+zltdf1P7EXyw+nc+cH6P
1ysWE0FfOP8N7z6DmUK+DuGWW06UqSH4kSnW9/1lMxwSDl/WTn3p4zDhbY29
KVeGQ+1vq4JzG3wcOoDOu/AoHYO/t1bWIr3FxyGUT3fT3NcI/tLZRxQ2/EPw
LYDW7RPOcGhdHn7KaA2CD3M/jA/zH9A1vdOFEP7XiOk/9PVDOpzPw6TdLvYU
kw8LX6Bvo1LepztM/sYWP0PG06F3ep5Qs0gGnM8NUq+I4H8FWaCL4IPDJwjB
R48/AJfLvqU=
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{171.85799999999998`, 
     45.090999999999994`}, {213.933, 45.090999999999994`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{180.192, 36.887499999999996`}, {180.192, 
     37.12659999999999}, {179.966, 37.12659999999999}, {179.798, 
     37.12659999999999}, {173.28599999999997`, 37.12659999999999}, {
     173.11899999999997`, 37.12659999999999}, {172.892, 37.12659999999999}, {
     172.892, 36.887499999999996`}, {172.892, 36.6484}, {173.11899999999997`, 
     36.6484}, {173.28599999999997`, 36.6484}, {179.798, 36.6484}, {179.966, 
     36.6484}, {180.192, 36.6484}, {180.192, 36.887499999999996`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYseEpxeUnNMdjEHgs4MDjP95Q0D2LHlHh7nv
lx/zNkfwe3Ke/14piuD3Ts8TahZJd1j+wkPvvyGCH1yiMv1/BoL/CaT+uAuc
r/aked7ZVwh+2/LwU0ZvXBz2zZfSv8uD4B84tdB1G3O6w6+Y3KP/Drk4/Ah+
vHT2hzQHialXODO6XBw+gJx3EpMfKb79IkOci8OekskSLJcQfB4m7Xaxpwj+
AqB1Kr/SHBQcPyafaUXwYe6H8WH+A7rm898faXD/Tzj0VSPmOoJflDHxbc1p
TD4sfIG+PXDqapqD7oQFPwy/OTh8+Xul4uUvBB+snj0dzo/pB1ogguCDw8cC
wUePPwADEdRr
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYC4iSBCMstRzIc/oNAvpMDjM+yeJIVY6+Tw8S3
Nfam+xD8nul5Qs07EPzs579XfvTD5JsYg4ALnO+mWso0ywPBb1sefsooxcXh
4yXfJAEPBP8MCDhg8h/s45tj7IXgw8yH8WH2z32//Jj39XQ4/9RC122fLyL4
NxYX2HKdxuTPBIFCBH9/raxFeoiTw4pj3uadFxF8mPkwPsx+dH56GhCsc4Dz
g0tUpv+fgeALf3I8n1br4HAA5EB3BB8WPuj8nbe6/qZOR/Bh5sP4MPth8QPj
xz+9oHR7L4IPi190Piz+AThI9uw=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4ikSLGF8VzMd2peHnzL64ujwPfjx0tlnEPwf
dVl7Sk5nOtzfxzfH+Jajg8rtn3VZJzIdIsS3X2Rog6o/kungfYLddnauo8ON
c0CRg5kOxzWtJp2Od3TI2FMyWWINgp9vy3V98QIEH6w+EsE/5m3e6ZiS6fA7
JvfovyZHh2Tr+/691ZkOZ0DgiaOD/l0VtsbWTIeZIMDp5BDOp7tp7v5Mh88b
ArJn3XdygPnnSeLCayb6znD+fBudK7OOIfhpIFDm4sBxfXGB7aZMhzaQf9+4
QNzTiuAvBzkoEsEHu8ce6p4QBD/x8GXt1IvOcH4O588F6c3ODgYca2SiAhB8
sPsDEXyY+TB+UcbEtzXJmQ4PQOE9C8E3MQaC0wg+OPy/OTtcqXipZhiT6fAL
FF5CLnDzYXyTuF2ePH4IfmQK0IG+CH50/6GvGj7Q8BR0cWAHOjclGMqvdHH4
eMk3SSAj0+EEKH72uzgAYyfhaQOCf0RhQ1HGQgQ/AmT+Vqh/ghF8WPjD+FO+
scXPcHF2OPJVI6Z/UaZDNkj9ZScHUPLa0wO1v9AJHp7/QUDcEc4HBYfxZweH
E2X75kudRvDR0zMA0DJPFQ==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx1lH1MzVEYx69b3JAiehnmpYWIRKWi9JzfT5tUq9XmFk0qt3LoZXaltsbS
H+FGk9KbtCRXE9K8TGvZkIyKuDRibV7mZSxJw6Kc8/v97n3+crbzx2dn5+w8
3+/3eRYmZUbrrFQq1QS2tWyr2R435XxaXEch1vlGr6qHgJnD7muCqp8R0Nqt
aKmppQAH33RW9BOI3bFuILIGOeH9Y9f+SuSVr90m5TO+4plRP8FEwMumae6W
CgqdS9eWPOwk0KY/4WJ9jIJh02drH0LgbFbQlL59FJzLTJPT1ASWt9QMGlOQ
045/zQuOQ5buR1MYaLc75b0MOUbvVj6ehvxlWrtX5RECev5ADIXR+PSOsTME
inZ/GG1k743zpREgoTXUVp2qcJ8Ar37vp227KeTGnvft9hbhp3t88e1cCk2G
/jTVPhGKb4+4xxv+z4fI9vePTyKrPAqdXpym4OPNVrIIgQORR8tLKBg/bvQc
jxMtesz6Th6l+CL7Pe9I93FBDub6DguQyvUoo3Dz5ZG/ug8CrOR6VSEvWcUE
P4dcO5s5ckn5j71oYdvIy6U6f+SQRXvVVTki+F+9n91eTSGc+18mwq0HdSHX
Dchu/UwgPTK3dwfTrzczQdMTIII9i8tgMoUuvuaKAEwO160UhpujdlUVi/CL
yasX8b4mv0w0BCIb74X5HXZE9jvMBFVRmMn16RYsLOlxAVnKa4MA2gBWgJrC
fDKU3FUjyHmeiMxxlQ0yt3fERtHHKID1Zhb4yRRezMlLXH1RAGP13QXNTsq5
VpTz7IX+anj965B5nOvDkb89iUiaHkVBf81x9OEaZCm/DsiSH98EOW8RWO8g
FySUQg7PY4EAffz/gUo/tBC53jUUagOXm6o2EzmPHtgvndnttbOdkaX3HJEf
/Yx52zAVWep3KwqpKWw5ETCx78XOUPprAZH9n6XUF4mceOephy4RWeqnA0TW
z06pt4TIedEg2/bVZwWN7bRwsO+21tAfCu9BNs8LM0v/URH40zj0JGKSMm/e
gcUvM5e6MEeXIvux67ZMrzg+7+YRuV/WK3mNJ7K+G1APSU8t3pfmmw65uDzD
oaAI2Tw/C43aB6ubcJ6a5+s/z05ZOw==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGINIGYC4hSBCMsta7Idlr3w0Ps/0c0Bxv8dk3v03ysP
hz8rP17y7cp2cFctZZrl4e3w/0rFSzXNbIcL+fHs5wR9HfTvqrA1KmY7sCye
ZMVo6usQv8uTh0k426E8YoXp2WJfh/nvlx/zZs52UHnSPO/sKl+H6XlCzQf+
ZTncka5JNNrr63Bmoeu2z38R/O/Bj5fO/oHg/weBz2jyHzD5Co4fk8+sRfCP
a1pNOr3c10HdkGONzKcshxkzgWChr8OXv0APAPlzbXSuzJrn63Dc27zTkSHb
4cuGgOxZ6b4ON84BTZDMdggpUZn+n8HXoSRj4tsa42yHCpB/on0cpkiwhPEV
ZjvEH76snXrRy0Ejpv/Q155sB/NrR3NNHnjA+TmcPxekT3aD8xlA4IeLg4kx
ENRnOwh/cjyf9tTJIWdPyWQJh2wH7xPstrNlHSH2A8Nzf62sRbqLg8N8KWAI
M0HDr8se7p8t5j8OpXDZO1zxTRKI+Jjl0OP1isWE0R7u/5TYO27MP+zg/JKt
or9Pv0PwC9Z03864YAcPXxgfFv4wPix+YHxY/MH4c44obChiyXY4fthpbeY/
Owf2xqnO3S3ZDqDgnhnoCE9PEeLbLzLwuTigpzcA32gwlw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAmIQzRLGp7vJMdfhDAjwuDrA+D1er1hMLF0dDpxa6LpN
HcEvsOW6vlgl16EiYoXpWWcEv2Sr6O/TfQj+/X18c4yNPB1KMia+rXmf45B4
+LJ2qiKCz7p4khXjVw8H/bsqbI2cuXA+a+NU526eXAfxqVc4M14h+Dtvdf1N
nY/gi3xyPJ/m6w7hs+Q6XMyPZz9X6e6QsadkssSXHIcniQuvmax3d7jzsy5r
zx0EX+U2UGADgj/hbY29aVeOQwLIfZIIvs8JdtvZoW5wfg7nzwXpk10dLigB
DVgHlf/rArH/BoI/YyYQfEXwwy23nChjy3VY9sJD77+nq4NOu9jNc9y5Dmu6
b2cwpCP4MPXo8QEA7i+1XA==
      "], CompressedData["
1:eJxTTMoPSmViYGAQB2IQrdMudvMcd67DCU2rSaf3uzrA+G3Lw08ZLUHwP20I
yJ4139Uh3HLLiTK2XIdI8e0XGepcHdInvq2x/5vjwOu/fkqqh6vDjJlA8DbH
YaNe3mJGGVeH80q3f9bdQvBZG6c6d19A8FXYgALLcxxyOH8uSNdG8MHyIW5w
/oN9fHOMD7k5LCmw5bq+Osdh562uv6n/3RyOe5t3Om7JcbiYH89+ztDdYYpz
d87z3TkOPV6vWEwS3R1MjIHgdI6Dq2op06wJ7g5/Vn685HsPwd9TMlmC5RuC
z75GJiqFOdehImKF6VlvqH72XIj7jN3h4ZFw+LJ2qiSCnwYCYgi+6pPmeWd/
uTmghy8AlKSY6g==
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxllH1MjVEYwG+JZGppWKM/ZLW1RULkq3lanfdFWgg1a+qmmyudW7gSaza1
+SpEWW4orZSmrXyUsaTRrVz5NtHHfC9M2jUXqVvOed/33ucPZzt//N57z9l5
fs+Hd2LaOs0YlUrlwHYM245sB46v8drkpIMfdWu2F/cRsPFHddnLoAECh0MT
Pj1x1EHX9Cz1PAuBvCKdR44KudDTaaObldo5yT128fVhCqvbnUPO9jNe+ibq
2BAF9b3n/pp3BAaqWiOCzRR8P+aUPNxEoLM8PWRCN4UrAbpyBy8C8Z+ezOy+
j3yuZUbdzkZk6Xw9hczYSwsehiF/c20KNGQjH6yKMc2rIHDxLLuggULhr3Hx
ZxoJ3C6dNqeX3Wfgy1uA/P6s5QtMCpsFcJ199fzAYwqTf4Q+To4UwS/uxF1L
DwXiu9uxOF+EFgv78v1/Dle4UV/g6fQXfw/afGvlROavg68sEdI8cppNFgqQ
/b7tzC7R7qMmt1urikJ+mhbv/Ggu8mvu11WUffyhsF7vUzSqEiGB+7Iix3Hh
Ljo7v4hMdI+dpAOBv8cPufLzioDRtchvm9zOzT8lQmrfULV5hMr5rxXhp/VF
5pfvyBvcmKBO5GUsvUXMX6rL4IWt0SJID2qjkMzXQhG4jo1NFPJWfXUKqhZh
FtNbVYnnF11vz2gqRe4Z3J/SmIms5UKTFD99gp0lH0Zk6f93BMjjAWgo3Ow6
atXcEOR61iI7M0zajszT65dKZT/NAgQfYQXPWF8/ZehBqwCvHv2O/rBXyWe6
KNdzAeZXir8EuYKVc2ctss+4A6fDrlGYGFVbqFmDLNWvP7KUDxel3uowXp9u
JqSGggevx/MC8HCSmK863g8dRI7XQGHRSyMNSidyPR7HfhmuNj+L3Ics3ZeJ
rPI/NPW1Dlnq92QKKr4CCYxlz8vVK/21hMj536P40iIPx1HjyD5kqZ8MRPa3
Q4n3MpF9pSAzW+XpamS99mR/VozCuci2eWFj6T3TCMzpZQa3KfPGGm7Pl43b
IlhG85D58eXM108+74KJ3C9lSr1mENlvFfqQfN7C8wl8vrUjN5vKSMMAsm1+
zgg1b+kw4jy1zdd/bs9sDA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
      3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJ+KH1EYUNRRmaMQ8At6ZrESVoOML77/lpZC3ZtB5Xb
P+uyYhB8Cf27KmyBCL7Nff/e6X1RcP4U5+6c580I/nr3h1UiZZj87Q5Nj47P
0ILz9bVWCl9Q0XIAmpYn1Izgw8yH8WH2w/j7Ty103RaN4MPcj85H99+jCPHt
FxXU4PzM/A+tJ6eowf0L48Psg/Fh7oHxYf6F8WH+Qed7gPyvjuAHgtyzSRXu
XxgfZj6MD7Mfxof5F8aHuR+dD/MfAP4CwzQ=
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4p7peULNBnEOJVtFf5/2M3YI5dPdNFcewY9I
sb7vLxvnoPqked5ZKWOHNTJRKdbicQ7iU69wZhQZQdTzxzn8+Vb6YI6jkYM4
SxifLlecw9edt7r+qho52Nz3751+LxbOd39YJbLuOIIPVm+F4H/5e6XipV+s
Q7SC48fkHCMH3bsqbI21sQ7/QUDf2OGIwoaijImxDjNBoNLYQaD5wKmFrHEO
PifYbWermjrA/GOgtVL4whEEf8n9fXxzPpvB+cYgEGzhUCOyzv3hq1iHYpB/
7Swh7pmE4G/9DHSQJYIPdg8r1D38FnC+xlvefQac5nC+bWXECtNcM4fjZfvm
S6kj+GD3ayL4MPNhfB/zTscE31hIeM9C8M+AwB8EXwIU/kHmDvwRlltO2MU6
xIDCq8ccbj6Mf17p9s86JQRfQh/oQEUEX7b1deAOOWh4dpo7lAKdq68L5Uda
OHjwMGm3h0Hj56mFAzB21Aw7EPz3y495m59E8MHmf4T6hxfBh4U/jD8huERl
+ntThzdA21tPw9SbOoCS1/35UPs9TeDhmZ4GBNMM4XxwePgYOnwPfrx0tkwc
nI+engF8/Dts
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxdlHtMTXEcwG/XHbEU6UHdiFXWopxz7znCzDevVHrJlNf5JZXrVQ1hKQ01
k1ALFyXKmqQXemm6tbxSiWIeYYU2Jc2QHiP8zjn3nt/mt/3++Ox3fme/7+f7
mB4WvSpilEwmM8I7GG853r+vfWvzrUdgfeb5WI1cBQYeGYjtzJqogkLluvAF
tQg+bXMZ0NqpoKxhr+5SNeHaxpxlFbcIb6z2MpFjfnR3cdFWUxWETgiZV1aK
oP92e8rITxr29ThRxlkIEn/Nj2nppsDzfZxFcTQCbZpZHLudgpDwBR3+voSf
zHgzfJAmLNx3QODYdST7cTVhE/+S0xHutMQehz88PHeAhq6n+AdOCNbbe3zb
XEiD5euWwSAVgi2ReO1VwZ09GZMVfgh4jLRioPzHyPP9axGEWFe2yloY+BJY
NTV5N4K6BDv3LatZsEvuDaw6S1j5H084UteYU0RYscZ09s0aBM38msVCrO6S
jVsegrK5Q/XhNqzkI9X7s0Ldykj8yvy7x5OzhLt5v76M6KMAQbtt/CaaYURf
5YR9w7DwZsKLGK7a663+PUmEDynun6JeEu4vDdh+IZiFGE16X3ylPv/pLCSe
WXJ8h5bw0gosSEPYDKe3Afsbt9wxVt7OAF8uHZ4IZPy6zEAS1rGMReDdMGZh
ZjIL/Vhvz2hy30TuctRqmJPY/4Q2yvw64Z3mWOghTvRjxEgs+KhRSyx8f0MN
JbtwAEkc5HevcP2boxbrOYVwPsawNMIBOL296Zzop0wNY/iCz+BAmc05N9Wp
YeXcYx6hRfpzC1as505Oyq8Q/wDhTlzOnlNI/rvyMu/Z2yPwa03f8OcZI7ET
X78phIV8eOrrzRZJ8b4ThOjrMUr//iFO7IcmWoz3CwdXOnSmWZNosT5fcFK/
pPXFL2KKCQv/KyCc9fXqAx8tYaHfj3Kg4lcGBfzzSnM5GM/3Vz4l5j+fg1o+
PgUt8cy+8bo5zoSF/oqkRX8X8bkQLy36OkkY23ofF084YRvuSI2evQkb5oWB
hfdoKBgM+piXmcqJ88aVkvJlYEfKuFDZRljDNzz2Jcy7XErsl98c/OXXNFr0
a0zmjeDTFUn3hfnmQ1jp9s5h9HnChvm5u9zyV5OOhv/n6z9k72eu
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxF031Ik0EcB/C5JMFlyaI0NZw18a3Smtue5wnxt0lRWNgbpml16tYWhls1
A9MEk8q0mlGy3sjEP6ywGrSKCHTZi0tDjCQpiaIQIZAo1AKLutt2+x0cDx+O
e+7ue79LKrdtM8+RyWRhtBtol9PeltdyYKKWwD7WZnTAfW67Q+1q18Nopz0n
spKAR/+7zyQJcCE2vHD+VgIN4S+cqy0CfO96ma83E7B3t4xZbwjQn68/bXAQ
cLUuOKrLEEP2PTPe2T+E/jNT/fnaQQmKTWs/FewmsMkXkXN1XIImAxkfNqIP
W89P1qWgwzJOLX6vJDBR1vEu24buPbZUsIyIIdfPSvahJhEsdHruEgJRBfcu
mq0isOOMJqJFj+9ITwq6tz0u8+MKAmPxdWVr2tD+8w2jc49/6b8UL0FFdJHo
UROYx+YLEtC/tccl8rwksCkbvQNpQd+WgK5Ot0Ag9vqetEG3BE8cNFEjmm2v
cwP6H2slBGz+fNE8T24nu69cMTB/B4HI9cnV8m94X6mTUT1ZrwR4rnIfsm4k
oGDjzQJU0PjP5hGYevyh+e8JIfA/DYHimEdvZPUCsOtYlknAwM5bK4BCTgNe
SeAyazXor+w+9qKfnuzaOWAUIKI7YZcpEy2wvDXoM64qZSOg+f65324ujy4q
I1CqMvyoeK0Pmdcr90/3lsorv7SgntvQlldAwL2qqjOsWwvTqaXOPgOar8/t
X09FICv91sLhES14BzrWPYwhkMDyBx3QaiXjKrT//7ReWlneNnS2hrb7aC+r
xyldIO+k4Phyfageudn1FyrR7KNRBOtNhnY8WDQ7eFcXck5N0U3tpDbw/pKD
41VaULDyMqJLnH3TqSY0f9/+ekzH987z/A+0bKlW
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{115.46199999999997`, 
     12.185899999999998`}, {132.69899999999998`, 12.185899999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJXIGYCYvY1MlEpi+MdZoJAJIcDjP/ANd5x1kQBh3bH
hKcXsuIdDnbvazJhFnE4orChKEMx3sHEGAguizhMce7OeZ4c7yBSOankLIuY
g2zr68AdffEOwW8vf5zRKAnnx6hGyJyzkYXzweY3Kjj8BwH/eIc7mrJr/j9W
dLhx7nvwY1YEH2zfzjg432Xb579XGuIcwjnF2o3zFeD8EJB9ibJwvvuao8sZ
KqQdeqbnCTXPiHNoV2BXPSMi7VD+Us2QYwkafwuCn5oGBMfiHM6AAYIPcz+M
fwAUHofl4Ppldy3Yl5onDwmXxQi+zX3/3unzEPwWoPfl5iL44PCdBTUvWd4B
GPrW97fHQcInUNHB/WGVyLr/CP4dFbbGqczxcD7YmTIIvgcPk3a7X7zD3vya
tzO/KsD5MPfD+GB3Bss4+CYJRFj6xDukgPy1TNJhT8lkCRazeAc3UPjNEHc4
XrZvvpR8vMNaIR2+9DpRiPtZYelF1GHFx0u+SR+g4eUj6rAVGPwVN+McdgRb
RfxXF3UQWQf0wRlo+MmIQuLzZJxDX0S3P6MAgg+Ov4UicD5Ev4hDBDA4/M8i
+LG7PHmYbiP4E97W2Jv+Q/BBydfaPh7OtzeN2+UZE+8gDwrvcwJwPtj+Ag44
/9LvY9fn3fxuv10OmEA14h3mn5i8JFvto30HKH6YEPy1oAi5FwfnN0wFZoD5
cQ6s+r+4LvV8tX+//Ji3eWecg/8Tz0umwowONSALFsZBwmsmAzx+wfLBTHD+
klvLHxseZoXzNT6pvJzVyeGg0y5289zyOEh8FXM53AUmp7xJCD44/9Qj+OD4
zIlzsCtxrD0twwnnb/PaYDGnkhXOz5maUGjx+af9lQpgAt4AVL92kb3J5+f2
sPiF8Z8snX1EIQHBh5UPMhvF5jMl/LVHLz8AefXWkA==
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
     3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJFIGYCYv27KmyNikkOM0EgUsMBxl+v+qR53lkNh/hd
njxM0gh+ZIr1fX9RBN9iy4myfasTMfipaSCgD+dv0MtbzLgHwb8tXZNoJGrg
sH++lP7dJQg+2B1zMfniU69wZhzSh/Nh5sP4MPuz95RMljBB8KfnCTUf0EPw
FxfYcl1Xx+T/B4F4BH/GBP4qs9fqDkDTWML0EHyY+TA+zH50vjEIBCvC+eWH
t7nO/KsA54dzirUb9ys49IIcuATBh4UPOp8/NuC+0XcEH2Y+jA+zHxY/ML7O
prnvl0sh+LD4RefD4h8ARizisw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYC4js/67L2+CQ7nAEBH0MHGN/7BLvt7KWGDhad
jglPHRB8FbbGqc7yCL66IccaGblkhy3mPw6lnELwefzXT0m1MILzweq/WsD5
G/XyFjPaWML5xVtFf5+2s3QIt9xyokwMwY9Msb7vz5vsEK3g+DH5jYXDhLc1
9qa/khymTeCvMqu2cOgAOu/CJUy++NQrnBlKFg6hfLqb5t5G8JfOPqKw4R2C
bwG0bh9zssPyFx56/wsRfJj7YXyY/4Cu6Z3OhPC/Rkz/oa8PkuB8bibtdrGr
mHxY+LKvkYlKuZ/kcLBtefipIEOH3ul5Qs0syXA+WL0ggv8VZIEsgh8BCh8n
BB89/gAQScEY
     "]], 
    JoinedCurveBox[{{{0, 2, 0}}}, {{{149.509, 12.185899999999998`}, {
     155.36199999999997`, 12.185899999999998`}}},
     CurveClosed->{0}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYC4uPe5p2OEckOhctLNvzj53DQaRe7ec4fib9p
7vvlfskOfRHd/owFbA6hfLqb5nonO7yofZx9XocRot492eEMCPj8t+dh0m4X
c0128H3iecl08l97oO5j3voI/uICW67rygg+N0j93SQ4/2dd1p6S50kO0aoR
Muf+MDhMzxNqPvAvyWEmCEiyOyQLRFhu4Uh2SAMDTocOx4SnF5ySHQ5272sy
SRZ2gPmHAQQeiML5b9pyu41mS8H5YPfyKDgAXbO4wDTZ4Y6m7Jr/jxUdwO7h
RPBvgxx0JwnOB7vnUBJUvzycf9813nHWRyk4P/jt5Y8zGiUckq3v+/deRuKD
3H8FwYeZD+MvnX1EYcOzJAf3NUeXM1hIwvn/QWC/FJz/Zd/HreliMg7sa2Si
Uu4nOawV0uFL/ycDNx/GT5/4tsb+IoLfA3LgBQS//9BXjZjzSQ4GxkDwWcYB
5Nzp12DhreCgwtY41fl1kkO3jeeuNCNFh+w9JZMlWJLh/O/Bj5fOVkHwweZb
JDuEgPzDKA/nw8Ifxq+8/+OWcbeYA9D2/kOqyRD/Mwo78AOT13v+ZIdUUPQ+
44eH5yywg77Yw/jg8Pj/3v7Pyo+XfIHpE8ZHT88A3qxSYw==
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGYC4j0lkyVYjFIc0tNAQMkBxndfc3Q5g4Syw4pj
3uadkgi+Rkz/oa8imPwZE/irzLRV4PxI8e0XGeoMHXTaxW6eu5/sEK3g+DE5
BsFffH8f3xxmQ4d8oeYDp34i+BadjglP/yQ7nDzstDbznQGcz+u/fkpqBIIP
sw/Gh7mnwJbr+uIfCD7MPnQ+zL8XlG7/rHuV7NBt47krrUjJIWPi2xr7vwj+
nZ91WXs4UuD8KxUv1QxFEPy575cf81ZH8NHDEwA8m5SA
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}}}, {{{167.284, 11.7563}, {167.284, 13.298399999999999`}, {
      166.11399999999998`, 14.529699999999998`}, {164.72799999999998`, 
      14.529699999999998`}, {163.29399999999998`, 14.529699999999998`}, {
      162.15800000000002`, 13.262500000000001`}, {162.15800000000002`, 
      11.7563}, {162.15800000000002`, 10.2281}, {163.35299999999998`, 
      9.081249999999999}, {164.716, 9.081249999999999}, {166.125, 
      9.081249999999999}, {167.284, 10.2516}, {167.284, 
      11.7563}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/fGSb5LAmRSHmk8bArJ3qTvA+AZaK4UvPFGD8xNC
gtQXZKo6qBlyrJE5BOV7qjgAeVEp21Mc7mjKrvmvrOyQJ9R84NTSFAcGENig
5DD3/fJj3tMR/L9XKl6qdSL4U527c56Xpzg8cI13nCWo7LBvvpT+3ZwUhxdZ
2t+m26o4XFC6/bMuKcVBal6c5ukAVYcFQGkVIH/GTCDYqQbnw9wP4/98+/qA
5WINOD8l9o4bs4SWw56SyRIseSkO0yfwV5lpazskCURYbqlIcQi4JV2TaKTj
YHBXha0R6L6M/A+tJ6foOHwBOXgagg/zH4yf8BTowq0pDqlpQKCm4wDynuEB
qH0W2vDwO3HYaW2mnBacP7m9NeryHA0H9PAHAAqnqoo=
      "]}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
      3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxF1A9IU0EcB/ClI7NMQs3GcrH/m+6pmUpaCT+LmatMKdAhWmFeWIpaLVMq
I02WpJhN0anDUmsIC0zKf4SZf9LMQmvQH4tFEGYl/gkhS6t7b9u7gzE+7927
u/e93z1RWs4h5MLhcGLwj/5nmgXBxYW2hEw+BU43NEm6l/UUUO2mWfNdBGGh
dAuE5PSdtngj8aCw7UxGCfG4eHKpMA/BcE9X+epcClas+dPy0wg2lu37xvWh
oCxr6k8rQvBJu6lz4hYFEH6kR6N19J+jYFGZUtGvIb7Rj68oiLmJnoHt6x1O
ULHuhKLPw/n+rA36kuTXfkoYyett5G92vN8OBdDTz29B8Hvme1+kqwJ0Bh43
kY8g9vElQYRZDkuFpx7pvBEcGHGLql+UsWbuuxH7FNzUvWiRAB49+KMQwQXb
r/eh6yRQved61pQEwfMx3H6IYbl1/lWcF4JzAx1qo0kMaRu0kQ84+P3VR6Pr
nohYM/EVC1nXGnHrFkBu1No3zVIE/5jGh77R2+qOw8Rz5qf7t18hftuMnzAj
UCxIp+tKBayT3H31oRVC1nstQ2aOUgRb11j8klsc66kUAz1dbjkCLd0/XgL0
dD8LEJyn1z8jgWvRx76MnyBm7quJd9niy2uCiPFumGZVxFU4bk8ZAl611T0j
TWpfvwiBwPw1NqhRCtlexX2jAgTb6Dy8ZayZ+qkivh+U3bxqWQZ4Nww8nP/B
icqUv8flbP72/OSAVyueDCf9mXpUE1vjcOIa4gC977uXmcTO+m6n3aBgzezX
WX/W6akfYlx5AfZ6KnLUN0cFyhAcMD4PwQGt3uODKqDjWrmK4CFdr10UpPZo
PFxqiCNKccC1xLgaRvLqiJn9aiBm3s+EgC63MQsFYfg4eeD+GTlzJc+qKMCn
aVGJx7vMHaoISSJ2nkenhwd23zvZq7LvV73jeZ3KPl4TMZPfHWLn94I5/wZi
5/fkP4vO4NU=
      "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQHbfLk4cpO9Vhu0PTo+MVmg4w/vQJ/FVm3Aj+8V07
etkENBx6p+cJNaekOswAyWerO2RMfFtjHwvkzwSCnWoOQNkDpwJTHaa0t0Zd
rlFz+KoR03/IE8HP2lMyWUIDk58GAs804HxjECjWhPOfRIhvv/gAwd+gl7eY
8Y6Wg819/97peqkOD0DyDdoOCU8vKN02TXUIuCVdk2ik43DFN0kgwhHq/gIo
3xPBR/EfEr+F13/9FFYtB/TwAQDF/Hss
      "], {{172.63400000000001`, 8.268749999999999}, {172.63400000000001`, 
      7.562499999999997}, {171.72699999999998`, 7.001560000000001}, {170.628, 
      7.001560000000001}, {169.48000000000002`, 7.001560000000001}, {
      168.60799999999998`, 7.587499999999998}, {168.60799999999998`, 
      8.268749999999999}, {168.60799999999998`, 8.36406}, {
      168.63099999999997`, 8.82969}, {169.086, 9.14063}, {169.34799999999998`,
       9.307809999999998}, {169.45600000000002`, 9.307809999999998}, {
      170.29200000000003`, 9.307809999999998}, {171.284, 9.307809999999998}, {
      172.63400000000001`, 9.307809999999998}, {172.63400000000001`, 
      8.268749999999999}}}], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYCYp1Nc98vN0pz6Ivo9mc0kHSA8dsU2FXPhCD4
Z88AQY6kQ0z/oa8aOmkOMaoRMudspBxOLXTd9pk1zaEHpF9A3qFnep5Q84dU
hxkzgaBSGc4HcWdGasD5U9pboy7/0XG4oHT7Zx1TmoN9ZcQK01oDB0btdrGb
emkOX3fe6vr71BBu/59vpQ/mMBrB+Z83BGTPYkfwpefFaZ4WQPCNQUDZyOHO
z7qsPQZpDupvefcZaBo5mIDE9RF8ruuLC2y1EPwvf69UvORKc7AFucfXEOLf
H6kO3V6vWEwUDRwKbIE6nqQ6bHVoenT8hq7DEpDA7VSHLeY/DqV4acP5MP/C
+ODwsFRz+LD8mLf5w1SHB67xjrMSlR14mIAe/prq0GnjuSvtkoLDue/Bj5dy
A93zSeXlrJfSDnG7PIFK0hzkdy3Yl3pOAu5+GB/mPxgf5v80EHiG4MPiFwBS
o9i9
     "]], 
    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
     0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJZIGYCYseEpxeUHqc5pKeBgJIDjO++5uhyBgllh7nv
lx/zvo7g9+Q8/71yK4LfOz1PqHlLmsMD13jHWYkI/oss7W/TbVXg/I16eYsZ
7xjA+eJTr3BmKBnC+belaxKNVA0d9s2X0r+7BsE/cGqh67bFaQ4H25aHn7pk
4PAj+PHS2RPSHP58K30wJ9HA4QPQeeaZmPz631YF5zgMHPaUTJZgKULweZi0
28VaEfwFQOtUZqU58Pqvn5IageDD3A/jw/wHdM3nvzMQ/p9w6KtGTDmCX5Qx
8W1NNiYfFr5A3x44VZrm0G3juSutSMnhy98rFS9nIfhg9csR/Jh+oAVbEHxw
+NxA8NHjDwDfs83Z
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
     1, 3, 3}}}, {{{194.992, 12.187499999999998`}, {194.992, 
     12.426599999999999`}, {194.76599999999996`, 12.426599999999999`}, {
     194.59799999999998`, 12.426599999999999`}, {188.086, 
     12.426599999999999`}, {187.91899999999998`, 12.426599999999999`}, {
     187.692, 12.426599999999999`}, {187.692, 12.187499999999998`}, {187.692, 
     11.9484}, {187.91899999999998`, 11.9484}, {188.086, 11.9484}, {
     194.59799999999998`, 11.9484}, {194.76599999999996`, 11.9484}, {194.992, 
     11.9484}, {194.992, 12.187499999999998`}}}], 
    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
      1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGI9IGYCYp1Nc98vr8t02GL+41BKlprDxLc19qZlCP5k
CZYwvtJMB4mpVzgzmNQcdpcARYoyHf5+K30wZ6MKRH1epsOJXTt62QJUHIoy
gCLZmQ47HJoeHZdQcWAO49PdFIrgc11fXGDrheCD1TMj+PFPLyjd5s10aOH1
Xz9lqYrD3ysVL9VUMx3OgICOmsOJsn3zpfQzHRhA4ICaw/vlx7zNMzMdUmLv
uDFLaDnA/KOvKP8lJ0wbzhfp8XrFskUXzp8JApYGDkDXcF2PznS4LV2TaKRq
CHGPPoLvmAB0EDOCD3bPywyIe97ow/myy1946N3XhfPd99fKWizXcTi10HXb
558IPtj9vxF8mPkwPjeTdrsY0P/i4PDWhfNT04DgGIL/BxT+hXoOeULNB06x
QsPrqR7cfBj/3Pfgx0u/I/ifQQ78huB/1YjpP/Q1w+E/CNzXcwA59+8fKN/e
wKE75/nvlYKZDtEKjh+Tzxg4AGPnZ50Wgh+3y5OHyRvBB5sfB/XPc304Hxb+
MP6b4q2iv1drO0QDbdfwganXdAAlrzCzTIj98Rrw8JwBiq+fSnB+Oig80pQc
kgQiLLeUZML56OkZAHFQUzg=
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
      3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
     3}}}, CompressedData["
1:eJx11H0slVEcB3BvS+mSaiuz9HJf8NznRooh5Ce7VFJNDVuivJ+TudZobZne
V7JmlpLS663pRTG7SRfVKEqNNGSjJWmojPKWUJ3nee59zl+d7fzxubvP85zz
/f3OWRGrCUswNzExMSUzgkwzMuN9Pm49E4xhZjyju6hFAUbX6yvPzBpWQHX6
WTuLIAxFN2SPpy0d4WnjdXVFIHVDiGd2AFAXBOak9Plj2L0jzOnagAIKUhcc
e7YOQyUc7WmoVIC8czILu2O4v0Blk3RFBpL32jS/pRjWcEMrhXw7i3Aba+rm
ie2fb/1FovnnfyHI8d2oT1wvE92P2fECP7no0Ja8qD91cuhoIi+YRHDcemtp
vkIBw+9CY21NMFwoJOOxIzxfXrYv2drgSQZg95e30oUYDk2tTWtKZiEqt3bM
eTmGzS8t/S5lqGDCmfzi9n8PFdeHePpRJ+UNZvqrMSQkkuGogpvqipEZLwwe
vjVh501VYh69e663u2tY0Zk/y7bt/a0UzeebpBTy8MFw2OJFrpunUsgrgDqX
C3wzteWRc4E5OwzraaNubgv/7nqQFa1zSdWaZqrgqr3rB/l6DA18/VXg5Da7
ZMlq6lMBJCB7ag0pbyPJrzty8aOWwyxw7RJuheENNyQscHFkm5J+2NUVZN6h
ghgSb+cAEp9P6Zu686OHet7K8stDVdRFXKDFSMinmRHN5xFMzf9/FQNPuQ3c
RmB/JZp5bcsI/XyP2pew4AE1V96oUgQhXD4eDKRwDV+GwHzO6WVxWxiQmLEn
F9UgIb8xVujndiTWl9//J2quna1GqCO8dS/3jyNI1gyfeJXOirY71zonuUcp
mq/HTqXQb6N0vxE2XCBI6MfbzsL6SV6/B789845TCPvtQtDFOJT8HZEJ/dhC
zwup5qwjNdT8+6qo3aP1GyXl1Px5v2vwiBS8yPKePEKQUVehLnSQCfXXI6jW
ZA4WtlE7FPdvcFkmF13ID7mQ30PjfuVCXvepSVrvtTepiy+RE3nR4Fhq431h
NL+ey1KIt4301pUYvsdIxXoZPZ2Fq9ObqYu4A0/y6lbHBFycLxPOSy8y9Ktc
yPcrzYPPc4Y+n8/db3Ox6NGZ1gMDq6mN96fO81dt/CZ6nxrv1389pWSY
     "]], 
    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
     1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJ5IGYC4glva+xNL2U5zASBSA0HGH+7+Y9DKVpaDulp
QHAuy+FBhPj2iwq6Dktct33+uyPLwX1/razFc32HcMstJ8oWZTmIT73CmZFk
6HCibN98qeYsB/W3vPsMNI0cGLTbxW7WIfhXfJMEImoR/B91WXtKqrMcjEFA
GcGXnheneVoAwf+8ISB7FjuC/+db6YM5jEYOZxYCHdSY5fA8S/vb9LOGDjH9
h75qrMhy4PVfPyV1hoHDDJC/9mY5/AcBe11UfrwGnH8GBPYoO4Tz6W6auzrL
Ya2QDl96nbyDClvjVOf6LIc3bbndRrcl4fafBanPQfDbFNhVz4Qg+H0R3f6M
Bgg+KBjTnknA/S+/a8G+1HMS8PCB8ZcU2HJdb0bwTUDhsjjLYQ3IPXYyEP9u
zXLgjw24b1Su4GDPdX1xwUko/7kSPP4uXA17o1+t6oAevwD/keJg
     "]]}},
  AspectRatio->Automatic,
  BaselinePosition->Scaled[0.45072933719790514`],
  ImageSize->{242.06597260273972`, 60.66068244084682},
  PlotRange->{{0., 242.07}, {0., 60.660000000000004`}}]], "Output",
 CellChangeTimes->{3.9386656292834845`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"bc462831-15f4-eb45-a9ad-a2cb9a1c2673"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Worked", " ", "Example", " ", "4"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"F1", "=", 
    RowBox[{
     RowBox[{"Int", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["E", 
          RowBox[{"2", "x"}]], "-", "1"}], 
        RowBox[{
         SuperscriptBox["E", 
          RowBox[{"2", "x"}]], "+", "1"}]], ",", "x"}], "]"}], "//", 
     "Steps"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a1", "=", 
     RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"F1", "/.", " ", 
      RowBox[{"x", "->", 
       RowBox[{"b1", "-", "F1"}]}]}], "/.", " ", 
     RowBox[{"x", "->", "a1"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntWithStepsOfTeXForm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["E", 
         RowBox[{"2", "x"}]], "-", "1"}], 
       RowBox[{
        SuperscriptBox["E", 
         RowBox[{"2", "x"}]], "+", "1"}]], ",", "x"}], "]"}], "//", 
    "MaTeX"}]}]}]], "Input",
 CellChangeTimes->{{3.938277913383983*^9, 3.938277938034464*^9}, {
   3.9382780628008766`*^9, 3.938278160184278*^9}, {3.93827840141921*^9, 
   3.938278402075105*^9}, {3.938278433614765*^9, 3.938278434130108*^9}, {
   3.938278600874878*^9, 3.9382786552904873`*^9}, {3.9382787191192837`*^9, 
   3.938278729443508*^9}, {3.9382788075793304`*^9, 3.9382788801424103`*^9}, {
   3.938278914095514*^9, 3.938278976941347*^9}, {3.938279031092222*^9, 
   3.9382790838639927`*^9}, {3.938279232383959*^9, 3.938279352573145*^9}, {
   3.9382794086070633`*^9, 3.938279464782219*^9}, {3.9382795144960823`*^9, 
   3.9382796923529434`*^9}, {3.9382797510293655`*^9, 3.938279821423469*^9}, {
   3.938279859205147*^9, 3.938279951464407*^9}, {3.938280078351612*^9, 
   3.938280098281212*^9}, 3.938665268635225*^9, {3.93866530783234*^9, 
   3.9386653382939377`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1ad251e7-0ac7-ab4f-b034-142e3383ad4d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"v", " ", 
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"FunctionOfExponentialFunction", "(", 
                    RowBox[{"u", ",", "x"}], ")"}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    "v"}], ")"}]}], 
                    FractionBox[
                    RowBox[{"\[PartialD]", "v"}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> None]],
                     HoldForm], TraditionalForm], HoldForm], TraditionalForm],
                   TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["2320", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \
\\!\\(\\*RowBox[{RowBox[{\\\"FunctionOfExponentialQ\\\", \\\"[\\\", \
RowBox[{\\\"u\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"!\\\", RowBox[{\\\"MatchQ\\\", \\\"[\\\", RowBox[{\\\"u\\\", \
\\\",\\\", RowBox[{RowBox[{\\\"w_\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"a_.\\\", \\\" \\\", \
SuperscriptBox[\\\"v_\\\", \\\"n_\\\"]}], \\\")\\\"}], \\\"m_\\\"]}], \
\\\"/;\\\", RowBox[{RowBox[{\\\"FreeQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"a\\\", \\\",\\\", \\\"m\\\", \\\",\\\", \\\"n\\\"}], \
\\\"}\\\"}], \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", \
RowBox[{\\\"IntegerQ\\\", \\\"[\\\", RowBox[{\\\"m\\\", \\\" \\\", \
\\\"n\\\"}], \\\"]\\\"}]}]}]}], \\\"]\\\"}]}], \\\"&&\\\", RowBox[{\\\"!\\\", \
RowBox[{\\\"MatchQ\\\", \\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"c_.\\\", \
\\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"a_.\\\", \\\"+\\\", RowBox[{\\\"b_.\
\\\", \\\" \\\", \\\"x\\\"}]}], \\\")\\\"}]}]], \\\" \\\", \
RowBox[{\\\"F_\\\", \\\"[\\\", \\\"v_\\\", \\\"]\\\"}]}], \\\"/;\\\", \
RowBox[{RowBox[{\\\"FreeQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\"}], \\\"}\\\"}], \\\",\\\
\", \\\"x\\\"}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"InverseFunctionQ\\\", \
\\\"[\\\", RowBox[{\\\"F\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}], \
\\\"]\\\"}]}]}]}], \\\"]\\\"}]}]}]\\) let \\!\\(\\*RowBox[{\\\"v\\\", \\\"=\\\
\", RowBox[{\\\"FunctionOfExponential\\\", \\\"[\\\", RowBox[{\\\"u\\\", \
\\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}]\\), then\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"v", " ", 
                    RowBox[{"Subst", "(", 
                    RowBox[{
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"FunctionOfExponentialFunction", "(", 
                    RowBox[{"u", ",", "x"}], ")"}], "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "x", ",", 
                    "v"}], ")"}]}], 
                    FractionBox[
                    RowBox[{"\[PartialD]", "v"}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> None]],
                     HoldForm], TraditionalForm], HoldForm], TraditionalForm],
                     TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"Dist", "[", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 RowBox[{"Subst", "[", 
                  RowBox[{
                   RowBox[{"Int", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "x"}], ")"}]}]], ",", "x"}], "]"}], ",",
                    "x", ",", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "]"}], ",", "x"}], "]"}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
            Rubi`Dist[
             Rational[1, 2], 
             Rubi`Subst[
              
              Rubi`Int[(-1 + $CellContext`x) ($CellContext`x^(-1)/(
                1 + $CellContext`x)), $CellContext`x], $CellContext`x, 
              E^(2 $CellContext`x)], $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", "x"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", "x"}]}], ")"}], "n"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"e", "+", 
                    RowBox[{"f", " ", "x"}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", "x"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", "x"}]}], ")"}], "n"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"e", "+", 
                    RowBox[{"f", " ", "x"}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                   TraditionalForm], TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["78", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  
                  StyleBox["\<\"If \\!\\(\\*RowBox[{RowBox[{\\\"NeQ\\\", \
\\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"b\\\", \\\" \\\", \\\"c\\\"}], \\\"-\\\
\", RowBox[{\\\"a\\\", \\\" \\\", \\\"d\\\"}]}], \\\",\\\", \\\"0\\\"}], \
\\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"ILtQ\\\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"ILtQ\\\", \\\"[\\\", \
RowBox[{\\\"p\\\", \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]}], \\\")\\\"}], \\\"||\
\\\", RowBox[{\\\"EqQ\\\", \\\"[\\\", RowBox[{\\\"p\\\", \\\",\\\", \
\\\"1\\\"}], \\\"]\\\"}], \\\"||\\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"IGtQ\\\", \\\"[\\\", RowBox[{\\\"p\\\", \\\",\\\", \
\\\"0\\\"}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"!\\\", RowBox[{\\\"IntegerQ\\\", \\\"[\\\", \\\"n\\\", \\\
\"]\\\"}]}], \\\"||\\\", RowBox[{\\\"LeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"9\\\", \\\" \\\", \\\"p\\\"}], \\\"+\\\", \
RowBox[{\\\"5\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"n\\\", \
\\\"+\\\", \\\"2\\\"}], \\\")\\\"}]}]}], \\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \
\\\"||\\\", RowBox[{\\\"GeQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"n\\\", \
\\\"+\\\", \\\"p\\\", \\\"+\\\", \\\"1\\\"}], \\\",\\\", \\\"0\\\"}], \\\"]\\\
\"}], \\\"||\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"n\\\", \\\"+\\\", \\\"p\\\", \\\"+\\\", \\\"2\\\"}], \
\\\",\\\", \\\"0\\\"}], \\\"]\\\"}], \\\"&&\\\", RowBox[{\\\"RationalQ\\\", \
\\\"[\\\", RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\", \
\\\",\\\", \\\"d\\\", \\\",\\\", \\\"e\\\", \\\",\\\", \\\"f\\\"}], \
\\\"]\\\"}]}], \\\")\\\"}]}], \\\")\\\"}]}], \\\")\\\"}]}], \
\\\")\\\"}]}]\\)\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", "x"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", "x"}]}], ")"}], "n"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"e", "+", 
                    RowBox[{"f", " ", "x"}]}], ")"}], "p"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"ExpandIntegrand", "(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "+", 
                    RowBox[{"b", " ", "x"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"c", "+", 
                    RowBox[{"d", " ", "x"}]}], ")"}], "n"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"e", "+", 
                    RowBox[{"f", " ", "x"}]}], ")"}], "p"]}], ",", "x"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{"Dist", "[", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 RowBox[{"Subst", "[", 
                  RowBox[{
                   RowBox[{"Int", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "x"]}], "+", 
                    FractionBox["2", 
                    RowBox[{"1", "+", "x"}]]}], ",", "x"}], "]"}], ",", "x", 
                   ",", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "]"}], ",", "x"}], "]"}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[
            Rubi`Dist[
             Rational[1, 2], 
             Rubi`Subst[
              
              Rubi`Int[(-1)/$CellContext`x + 
               2/(1 + $CellContext`x), $CellContext`x], $CellContext`x, 
              E^(2 $CellContext`x)], $CellContext`x]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      DynamicModuleBox[{Rubi`Private`open$$ = False}, 
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             OpenerBox[Dynamic[Rubi`Private`open$$]], 
             PaneSelectorBox[{False->
              TemplateBox[{
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox["\"\[LongRightArrow]\"", 
                 Hue[0, 0.8, 0.5], StripOnInput -> False], 
                StyleBox[
                 TagBox[
                  FormBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                  TraditionalForm, Editable -> True], 
                 Hue[0, 0.8, 0.5], StripOnInput -> False]},
               "Row",
               DisplayFunction->(PaneBox[
                 RowBox[{
                   TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
               InterpretationFunction->(RowBox[{"Row", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )], 
              True->
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Rubi Rule:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"General\"\>", "Label",
                   StripOnInput->False]},
                 {
                  StyleBox["\<\"Condition:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  StyleBox["\<\"\"\>",
                   StripOnInput->False,
                   LineColor->Hue[0.39, 0.8, 0.5],
                   FrontFaceColor->Hue[0.39, 0.8, 0.5],
                   BackFaceColor->Hue[0.39, 0.8, 0.5],
                   GraphicsColor->Hue[0.39, 0.8, 0.5],
                   FontColor->Hue[0.39, 0.8, 0.5]]},
                 {
                  StyleBox["\<\"Transformation:\"\>", "Label",
                   StripOnInput->False,
                   LineColor->GrayLevel[0.5],
                   FrontFaceColor->GrayLevel[0.5],
                   BackFaceColor->GrayLevel[0.5],
                   GraphicsColor->GrayLevel[0.5],
                   FontColor->GrayLevel[0.5]], 
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", " ", "u"}], "+", 
                    RowBox[{"b", " ", "v"}], "+", "\[CenterEllipsis]"}], 
                    ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    TraditionalForm], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox["\"\[LongRightArrow]\"", 
                    Hue[0, 0.8, 0.5], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"a", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"v", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
                    "\[CenterEllipsis]"}], HoldForm], TraditionalForm], 
                    TraditionalForm, Editable -> True], 
                    Hue[0, 0.8, 0.5], StripOnInput -> False]},
                   "Row",
                   DisplayFunction->(PaneBox[
                    RowBox[{
                    TemplateSlotSequence[1, 
                    TemplateBox[{10}, "Spacer1"]]}], Alignment -> Center]& ),
                   InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"Spacer", "[", "10", "]"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]}
                },
                AllowScriptLevelChange->False,
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, Left}, 
                  "Rows" -> {Center, Center, Center}},
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, 
                  "RowsIndexed" -> {
                   2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85]}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
               "Grid"]}, Dynamic[Rubi`Private`open$$],
              ImageSize->Automatic]}
           },
           AllowScriptLevelChange->False,
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"],
         AllowScriptLevelChange -> False,
         FrameMargins->10,
         FrameStyle->{
           AbsoluteThickness[1], 
           GrayLevel[0.85]},
         RoundingRadius->3,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       DynamicModuleValues:>{}],
      Alignment->Right,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       TooltipBox[
        ButtonBox[
         TagBox[
          FrameBox[
           StyleBox[
            TagBox[
             FormBox[
              TagBox[
               RowBox[{
                RowBox[{"-", "x"}], "+", 
                RowBox[{"Log", "[", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"2", " ", "x"}]]}], "]"}]}],
               HoldForm],
              StandardForm],
             StandardForm,
             Editable->True],
            StripOnInput->False,
            LineColor->Hue[0.6, 0.8, 0.5],
            FrontFaceColor->Hue[0.6, 0.8, 0.5],
            BackFaceColor->Hue[0.6, 0.8, 0.5],
            GraphicsColor->Hue[0.6, 0.8, 0.5],
            FontColor->Hue[0.6, 0.8, 0.5]],
           FrameMargins->10,
           FrameStyle->{
             AbsoluteThickness[1], 
             GrayLevel[0.85]},
           RoundingRadius->3,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Appearance->None,
         BaseStyle->{},
         ButtonFunction:>CopyToClipboard[
           Defer[-$CellContext`x + Log[1 + E^(2 $CellContext`x)]]],
         Evaluator->Automatic,
         Method->"Preemptive"],
        "\"Click to copy as input\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Click to copy as input", "Tooltip"]& ],
      Alignment->Left,
      AllowScriptLevelChange->False,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Copy Steps\"\>",
      Appearance->"Palette",
      ButtonFunction:>CopyToClipboard[{
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"FunctionOfExponentialQ\", \"[\", \
RowBox[{\"u\", \",\", \"x\"}], \"]\"}], \"&&\", RowBox[{\"!\", \
RowBox[{\"MatchQ\", \"[\", RowBox[{\"u\", \",\", RowBox[{RowBox[{\"w_\", \" \
\", SuperscriptBox[RowBox[{\"(\", RowBox[{\"a_.\", \" \", SuperscriptBox[\"v_\
\", \"n_\"]}], \")\"}], \"m_\"]}], \"/;\", RowBox[{RowBox[{\"FreeQ\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{\"a\", \",\", \"m\", \",\", \"n\"}], \"}\"}], \
\",\", \"x\"}], \"]\"}], \"&&\", RowBox[{\"IntegerQ\", \"[\", RowBox[{\"m\", \
\" \", \"n\"}], \"]\"}]}]}]}], \"]\"}]}], \"&&\", RowBox[{\"!\", \
RowBox[{\"MatchQ\", \"[\", RowBox[{\"u\", \",\", \
RowBox[{RowBox[{SuperscriptBox[\"\[ExponentialE]\", RowBox[{\"c_.\", \" \", \
RowBox[{\"(\", RowBox[{\"a_.\", \"+\", RowBox[{\"b_.\", \" \", \"x\"}]}], \")\
\"}]}]], \" \", RowBox[{\"F_\", \"[\", \"v_\", \"]\"}]}], \"/;\", \
RowBox[{RowBox[{\"FreeQ\", \"[\", RowBox[{RowBox[{\"{\", RowBox[{\"a\", \
\",\", \"b\", \",\", \"c\"}], \"}\"}], \",\", \"x\"}], \"]\"}], \"&&\", \
RowBox[{\"InverseFunctionQ\", \"[\", RowBox[{\"F\", \"[\", \"x\", \"]\"}], \
\"]\"}]}]}]}], \"]\"}]}]}]\) let \!\(\*RowBox[{\"v\", \"=\", \
RowBox[{\"FunctionOfExponential\", \"[\", RowBox[{\"u\", \",\", \"x\"}], \
\"]\"}]}]\), then", 
          HoldComplete[
           Integrate[$CellContext`u, $CellContext`x]], 
          HoldComplete[
           Rubi`Dist[$CellContext`v/D[$CellContext`v, $CellContext`x], 
            Rubi`Subst[
             
             Integrate[$CellContext`FunctionOfExponentialFunction[$\
CellContext`u, $CellContext`x]/$CellContext`x, $CellContext`x], \
$CellContext`x, $CellContext`v], $CellContext`x]], 2320], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
           Rubi`Dist[
            Rational[1, 2], 
            Rubi`Subst[
             
             Rubi`Int[(-1 + $CellContext`x) ($CellContext`x^(-1)/(
               1 + $CellContext`x)), $CellContext`x], $CellContext`x, 
             E^(2 $CellContext`x)], $CellContext`x]]], 
         Rubi`RubiRule[
         "If \!\(\*RowBox[{RowBox[{\"NeQ\", \"[\", \
RowBox[{RowBox[{RowBox[{\"b\", \" \", \"c\"}], \"-\", RowBox[{\"a\", \" \", \
\"d\"}]}], \",\", \"0\"}], \"]\"}], \"&&\", RowBox[{\"(\", \
RowBox[{RowBox[{\"(\", RowBox[{RowBox[{\"ILtQ\", \"[\", RowBox[{\"n\", \",\", \
\"0\"}], \"]\"}], \"&&\", RowBox[{\"ILtQ\", \"[\", RowBox[{\"p\", \",\", \
\"0\"}], \"]\"}]}], \")\"}], \"||\", RowBox[{\"EqQ\", \"[\", RowBox[{\"p\", \
\",\", \"1\"}], \"]\"}], \"||\", RowBox[{\"(\", RowBox[{RowBox[{\"IGtQ\", \"[\
\", RowBox[{\"p\", \",\", \"0\"}], \"]\"}], \"&&\", RowBox[{\"(\", \
RowBox[{RowBox[{\"!\", RowBox[{\"IntegerQ\", \"[\", \"n\", \"]\"}]}], \"||\", \
RowBox[{\"LeQ\", \"[\", RowBox[{RowBox[{RowBox[{\"9\", \" \", \"p\"}], \"+\", \
RowBox[{\"5\", \" \", RowBox[{\"(\", RowBox[{\"n\", \"+\", \"2\"}], \
\")\"}]}]}], \",\", \"0\"}], \"]\"}], \"||\", RowBox[{\"GeQ\", \"[\", \
RowBox[{RowBox[{\"n\", \"+\", \"p\", \"+\", \"1\"}], \",\", \"0\"}], \"]\"}], \
\"||\", RowBox[{\"(\", RowBox[{RowBox[{\"GeQ\", \"[\", RowBox[{RowBox[{\"n\", \
\"+\", \"p\", \"+\", \"2\"}], \",\", \"0\"}], \"]\"}], \"&&\", \
RowBox[{\"RationalQ\", \"[\", RowBox[{\"a\", \",\", \"b\", \",\", \"c\", \
\",\", \"d\", \",\", \"e\", \",\", \"f\"}], \"]\"}]}], \")\"}]}], \")\"}]}], \
\")\"}]}], \")\"}]}]\)", 
          HoldComplete[
           
           Integrate[($CellContext`a + $CellContext`b $CellContext`x) \
($CellContext`c + $CellContext`d $CellContext`x)^$CellContext`n \
($CellContext`e + $CellContext`f $CellContext`x)^$CellContext`p, \
$CellContext`x]], 
          HoldComplete[
           Integrate[
            $CellContext`ExpandIntegrand[($CellContext`a + $CellContext`b \
$CellContext`x) ($CellContext`c + $CellContext`d \
$CellContext`x)^$CellContext`n ($CellContext`e + $CellContext`f \
$CellContext`x)^$CellContext`p, $CellContext`x], $CellContext`x]], 78], 
         Rubi`RubiIntermediateResult[
          HoldComplete[
           Rubi`Dist[
            Rational[1, 2], 
            Rubi`Subst[
             
             Rubi`Int[(-1)/$CellContext`x + 
              2/(1 + $CellContext`x), $CellContext`x], $CellContext`x, 
             E^(2 $CellContext`x)], $CellContext`x]]], 
         Rubi`RubiRule["", 
          HoldComplete[
           
           Rubi`Int[$CellContext`a $CellContext`u + $CellContext`b \
$CellContext`v + $CellContext`\[CenterEllipsis], $CellContext`x]], 
          
          HoldComplete[$CellContext`a 
            Integrate[$CellContext`u, $CellContext`x] + $CellContext`b 
            Integrate[$CellContext`v, $CellContext`x] + $CellContext`\
\[CenterEllipsis]]], 
         Rubi`RubiIntermediateResult[
          HoldComplete[-$CellContext`x + Log[1 + E^(2 $CellContext`x)]]]}],
      Evaluator->Automatic,
      ImageSize->Automatic,
      Method->"Preemptive",
      Tooltip->"Copy list of steps as plain input"]}
   },
   AllowScriptLevelChange->False,
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[0.98]}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.93827926202336*^9, 3.938279285541523*^9}, 
   3.938279465453779*^9, {3.938279814910221*^9, 3.93827985253591*^9}, 
   3.938279935128683*^9, 3.938279980374821*^9, {3.93828008334963*^9, 
   3.938280098812271*^9}, 3.9382803846364994`*^9, 3.938665374707279*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"7a97d6c2-13f9-a146-b3de-9247e660d1f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "x"}], "+", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "x"}]]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.938278656352741*^9, 3.93827866711582*^9}, 
   3.938278731739317*^9, 3.938278882188137*^9, 3.938278939599201*^9, 
   3.938278970288183*^9, 3.938279040290451*^9, {3.938279071728733*^9, 
   3.938279084738359*^9}, {3.93827926202336*^9, 3.938279285541523*^9}, 
   3.938279465453779*^9, {3.938279814925821*^9, 3.9382798525515614`*^9}, 
   3.938279935144325*^9, 3.938279980374821*^9, {3.93828008334963*^9, 
   3.9382800988278694`*^9}, 3.9382803846521187`*^9, 3.9386653747229*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"fc1f3307-7b0c-9043-9a81-ca281c8f9d1f"],

Cell[BoxData["0.701181003418236`"], "Output",
 CellChangeTimes->{{3.938278656352741*^9, 3.93827866711582*^9}, 
   3.938278731739317*^9, 3.938278882188137*^9, 3.938278939599201*^9, 
   3.938278970288183*^9, 3.938279040290451*^9, {3.938279071728733*^9, 
   3.938279084738359*^9}, {3.93827926202336*^9, 3.938279285541523*^9}, 
   3.938279465453779*^9, {3.938279814925821*^9, 3.9382798525515614`*^9}, 
   3.938279935144325*^9, 3.938279980374821*^9, {3.93828008334963*^9, 
   3.9382800988278694`*^9}, 3.9382803846521187`*^9, 3.9386653747229*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"5ce86296-3b40-6c4f-a4b2-66619757c67f"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\:5411\:91cf\:53ef\:89c6\:5316", " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "a"}], "}"}], 
          "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"First", " ", "vector", " ", "a"}], "*)"}], 
         "\[IndentingNewLine]", "Red", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "b"}], "}"}], 
          "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Second", " ", "vector", " ", "b"}], "*)"}], 
         "\[IndentingNewLine]", "Green", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"Cross", "[", 
             RowBox[{"a", ",", "b"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Cross", " ", "product"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<a\>\"", ",", "Blue", ",", "Bold", ",", "12"}], "]"}],
            ",", 
           RowBox[{"a", "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "for", " ", "a"}], "*)"}], 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<b\>\"", ",", "Red", ",", "Bold", ",", "12"}], "]"}], 
           ",", 
           RowBox[{"b", "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "for", " ", "b"}], "*)"}], 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<a x b\>\"", ",", "Green", ",", "Bold", ",", "12"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Cross", "[", 
             RowBox[{"a", ",", "b"}], "]"}], "+", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}]}]}], "]"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{"Label", " ", "for", " ", "cross", " ", "product"}], "*)"}], 
        "}"}], ",", 
       RowBox[{"Boxed", "->", "False"}], ",", 
       RowBox[{"Axes", "->", "True"}], ",", 
       RowBox[{"AxesOrigin", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"theta", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "Control", " ", "for", " ", "rotating", " ", "vector", " ", "b"}], 
      "*)"}], 
     RowBox[{"(*", 
      RowBox[{"Define", " ", "the", " ", "vectors"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Initialization", ":>", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], ";", 
        RowBox[{"b", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
           RowBox[{"3", " ", 
            RowBox[{"Sin", "[", "theta", "]"}]}], ",", "1"}], "}"}]}]}], 
       ")"}]}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.937101544107807*^9, {3.937101637412787*^9, 3.93710170119261*^9}, {
   3.939670328658922*^9, 3.9396703372211447`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"83d302dd-a69b-ec41-911d-8dd5173dd5fd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`theta$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`theta$$], 0}, 0, 2 Pi, ControlType -> Manipulator}}, 
    Typeset`size$$ = {288., {142., 146.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`theta$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics3D[{Blue, 
         Arrow[{{0, 0, 0}, $CellContext`a}], Red, 
         Arrow[{{0, 0, 0}, $CellContext`b}], Green, 
         Arrow[{{0, 0, 0}, 
           Cross[$CellContext`a, $CellContext`b]}], 
         Text[
          Style["a", Blue, Bold, 12], $CellContext`a + {0.5, 0.5, 0}], 
         Text[
          Style["b", Red, Bold, 12], $CellContext`b + {0.5, 0.5, 0}], 
         Text[
          Style["a x b", Green, Bold, 12], 
          Cross[$CellContext`a, $CellContext`b] + {0.5, 0.5, 0}]}, Boxed -> 
        False, Axes -> True, AxesOrigin -> {0, 0, 0}], 
      "Specifications" :> {{{$CellContext`theta$$, 0}, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{327., {177.7072265414754, 182.2927734585246}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`a = {1, 2, 1}; $CellContext`b = {
        3 Cos[$CellContext`theta$$], 3 Sin[$CellContext`theta$$], 1}); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9371015494346886`*^9, 3.937101560635155*^9}, 
   3.9410780888320274`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"03eb30ac-6639-5e46-ac54-3d79eeb18336"]
}, Open  ]],

Cell[CellGroupData[{

Cell["inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}", "WolframAlphaLong",
 CellChangeTimes->{{3.935987531293798*^9, 3.9359875634786263`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"82a54a90-274c-534a-9e18-c3bb9beb84f6"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"Result__Step-by-step solution"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Eigen", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Inverse[{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               TemplateBox[{
                 TemplateBox[{
                   GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2"}, {"2", "3", 
                    RowBox[{"-", "1"}]}, {"1", "3", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                  DisplayFunction -> (
                   RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                  InterpretationFunction -> (#& )]}, "Inverse", SyntaxForm -> 
                SuperscriptBox], HoldForm], 
              TemplateBox[{10}, "Spacer1"], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"matrix inverse\"", "\[NoBreak]", 
                 "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Eigen", "id" -> "Result", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "2", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Inverse[{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              StyleBox[
               FractionBox["1", "30"], ScriptLevel -> 1], 
              TemplateBox[{
                GridBox[{{"6", "8", 
                   RowBox[{"-", "4"}]}, {
                   RowBox[{"-", "3"}], "1", "7"}, {"3", 
                   RowBox[{"-", "11"}], "13"}}, RowSpacings -> 1, 
                 ColumnSpacings -> 1, RowAlignments -> Baseline, 
                 ColumnAlignments -> Center]}, "Matrix", 
               DisplayFunction -> (
                RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
               InterpretationFunction -> (#& )]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Find the inverse", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2"}, {"2", "3", 
                    RowBox[{"-", "1"}]}, {"1", "3", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "Inverse", SyntaxForm -> 
                    SuperscriptBox], HoldForm], AutoMultiplicationSymbol -> 
                    True], HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox[
                    "To find the inverse, augment the given matrix with the \
identity matrix and perform Gaussian elimination", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2", "1", "0", "0"}, {"2", "3", 
                    RowBox[{"-", "1"}], "0", "1", "0"}, {
                    "1", "3", "1", "0", "0", "1"}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Swap row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" with row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"1", "3", "1", "0", "0", "1"}, {
                    StyleBox["2", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "1"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"3", 
                    RowBox[{"-", "2"}], "2", "1", "0", "0"}}, AutoDelete -> 
                    False, GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["1", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "3"}], "0", "1", 
                    RowBox[{"-", "2"}]}, {
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "2"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["2", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["1", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "2"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "11"}], 
                    RowBox[{"-", "1"}], "1", "0", 
                    RowBox[{"-", "3"}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Swap row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" with row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "11"}], 
                    RowBox[{"-", "1"}], "1", "0", 
                    RowBox[{"-", "3"}]}, {"0", 
                    RowBox[{"-", "3"}], 
                    RowBox[{"-", "3"}], "0", "1", 
                    RowBox[{"-", "2"}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox["3", "11"], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["2", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "11"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "1"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", "0", 
                    RowBox[{"-", 
                    FractionBox["30", "11"]}], 
                    RowBox[{"-", 
                    FractionBox["3", "11"]}], "1", 
                    RowBox[{"-", 
                    FractionBox["13", "11"]}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Multiply row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" by ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "11"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "1"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "3"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", "0", "1", 
                    FractionBox["1", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    FractionBox["13", "30"]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Add row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" to row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", 
                    RowBox[{"-", "11"}], "0", 
                    FractionBox["11", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    RowBox[{"-", 
                    FractionBox["77", "30"]}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"1", "3", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["11", "30"], 
                    FractionBox["17", "30"]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", "11"}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["11", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["77", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Divide row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" by ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", "11"}], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["3", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["11", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["17", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {"0", "1", "0", 
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["1", "30"], 
                    FractionBox["7", "30"]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Subtract ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["3", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[NegativeVeryThinSpace]\[Times]\[NegativeVeryThinSpace]\
", FontColor -> GrayLevel[0.3], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{"\"row \"", 
                    StyleBox[
                    TagBox["2", HoldForm], AutoMultiplicationSymbol -> True]},
                     "RowDefault"], ")"}], TraditionalForm]]], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" from row ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"1", "0", "0", 
                    FractionBox["1", "5"], 
                    FractionBox["4", "15"], 
                    RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["7", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["0", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox["1", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["1", "10"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    FractionBox["13", "30"], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, AutoDelete -> False, 
                    GridBoxDividers -> {"ColumnsIndexed" -> {4 -> {
                    Dashing[{Small, Small}], 
                    GrayLevel[0.5]}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ")"}], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Read off the inverse", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{"3", 
                    RowBox[{"-", "2"}], "2"}, {"2", "3", 
                    RowBox[{"-", "1"}]}, {"1", "3", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "Inverse", SyntaxForm -> 
                    SuperscriptBox], HoldForm], AutoMultiplicationSymbol -> 
                    True], "\[LongEqual]", 
                    TemplateBox[{
                    TemplateBox[{
                    GridBox[{{
                    FractionBox["1", "5"], 
                    FractionBox["4", "15"], 
                    RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["1", "30"], 
                    FractionBox["7", "30"]}, {
                    FractionBox["1", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    FractionBox["13", "30"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}, "RowDefault"]}], 
                    HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Simplify by factoring out an appropriate term", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    FractionBox["1", "30"], ScriptLevel -> 1], 
                    TemplateBox[{
                    GridBox[{{"6", "8", 
                    RowBox[{"-", "4"}]}, {
                    RowBox[{"-", "3"}], "1", "7"}, {"3", 
                    RowBox[{"-", "11"}], "13"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]], Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Result__Approximate form"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Use Gaussian elimination", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Use Gaussian elimination", "input" -> 
           "Result__Use Gaussian elimination"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Use the inverse formula", "input" -> 
           "Result__Use the inverse formula"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Result__Hide steps"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Expanded form", "scanner" -> "Eigen", "id" -> 
     "MatrixExpandedForm", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Inverse[{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               GridBox[{{
                  FractionBox["1", "5"], 
                  FractionBox["4", "15"], 
                  RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                  RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                  FractionBox["1", "30"], 
                  FractionBox["7", "30"]}, {
                  FractionBox["1", "10"], 
                  RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                  FractionBox["13", "30"]}}, RowSpacings -> 1, ColumnSpacings -> 
                1, RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
              "Matrix", 
              DisplayFunction -> (
               RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
              InterpretationFunction -> (#& )], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Dimensions", "scanner" -> "List", "id" -> "Dimensions",
      "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Dimensions[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"3", 
              StyleBox["\" (rows)\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TemplateBox[{"\" \[Times] \"", "3"}, "RowDefault"], 
              StyleBox["\" (columns)\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Dimensions__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Matrix plot", "scanner" -> "List", "id" -> 
     "MatrixPlot", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "MatrixPlot[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[
             
             RasterBox[{{{0.9056080753011289, 0.7998817818924338, 
              0.4892363007846362}, {0.23579080498281568`, 0.5054377169002706, 
              0.846443207203114}, {1., 0.4312504768444343, 0.}}, {{
              0.4983206016038352, 0.7268541122319858, 0.8394707240410165}, {
              0.8788531149915214, 0.8322057812973229, 0.5816337311710366}, {
              0.8693821769296596, 0.5987989690697999, 0.0855572645874716}}, {{
              0.8894894388332022, 0.6867291713837378, 0.25847740178673506`}, {
              0.8891581604529074, 0.5324349533651507, 
              0.0055184931579292775`}, {0.4012281092515242, 0.664437096582071,
               0.8010793975567913}}}, {{0, 0}, {3, 3}}, {0, 1}], AxesStyle -> 
             Directive[
               AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True,
              FrameLabel -> {None, None}, FrameStyle -> Directive[
               AbsoluteThickness[0.2]], FrameTicks -> {{{{2.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {0.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}, {{2.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {0.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}}, {{{0.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {2.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}, {{0.5, 
                  FormBox[
                   StyleBox["1", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {1.5, 
                  FormBox[
                   StyleBox["2", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}, {2.5, 
                  FormBox[
                   StyleBox["3", {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], TraditionalForm]}}}}, GridLinesStyle -> 
             Automatic, ImageSize -> 75, 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}, 
             TicksStyle -> {}, TicksStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1]], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Transpose", "scanner" -> "List", "id" -> 
     "MatrixTranspose", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Transpose[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               GridBox[{{
                  FractionBox["1", "5"], 
                  RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                  FractionBox["1", "10"]}, {
                  FractionBox["4", "15"], 
                  FractionBox["1", "30"], 
                  RowBox[{"-", 
                    FractionBox["11", "30"]}]}, {
                  RowBox[{"-", 
                    FractionBox["2", "15"]}], 
                  FractionBox["7", "30"], 
                  FractionBox["13", "30"]}}, RowSpacings -> 1, ColumnSpacings -> 
                1, RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
              "Matrix", 
              DisplayFunction -> (
               RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
              InterpretationFunction -> (#& )], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate forms", "input" -> 
         "MatrixTranspose__Approximate forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "MatrixTranspose__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod7$$ = 
   XMLElement[
   "pod", {"title" -> "Trace", "scanner" -> "List", "id" -> "Trace", 
     "position" -> "700", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Tr[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["2", "3"], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Trace__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Trace__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Determinant", "scanner" -> "List", "id" -> 
     "Determinant", "position" -> "800", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Det[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["1", "30"], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Determinant__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Determinant__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Characteristic polynomial", "scanner" -> "Eigen", "id" -> 
     "CharacteristicPolynomial", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "CharacteristicPolynomial[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, \
{1/10, -11/30, 13/30}}, \[Lambda]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{"-", 
                 RowBox[{
                   SuperscriptBox["\[Lambda]", "3"]}]}], "+", 
               FractionBox[
                RowBox[{"2", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], "3"], "-", 
               FractionBox[
                RowBox[{"7", " ", "\[Lambda]"}], "30"], "+", 
               FractionBox["1", "30"]}], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "CharacteristicPolynomial__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "CharacteristicPolynomial__Step-by-step solution", "stepbystep" -> 
         "true", "buttonstyle" -> "StepByStepSolution"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://mathworld.wolfram.com/CharacteristicPolynomial.html", 
           "text" -> "Characteristic polynomial"}, {}]}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Eigenvalues", "scanner" -> "Eigen", "id" -> 
     "Eigenvalues", "position" -> "1000", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\[Lambda]", "1"], "\[TildeTilde]", 
              TagBox[
               RowBox[{
                 RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "+", 
                 RowBox[{"0.29386611303071347`", " ", "\[ImaginaryI]"}]}], 
               HoldForm]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\[Lambda]", "2"], "\[TildeTilde]", 
              TagBox[
               RowBox[{
                 RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "-", 
                 RowBox[{"0.29386611303071347`", " ", "\[ImaginaryI]"}]}], 
               HoldForm]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, -11/30, \
13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\[Lambda]", "3"], "\[TildeTilde]", 
              "0.26175460898876934`"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Exact forms", "input" -> "Eigenvalues__Exact forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Eigenvalues__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod11$$ = 
   XMLElement[
   "pod", {"title" -> "Eigenvectors", "scanner" -> "Eigen", "id" -> 
     "Eigenvectors", "position" -> "1100", "error" -> "false", "numsubpods" -> 
     "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["v", "1"], "\[TildeTilde]", 
              TagBox[
               RowBox[{"(", "\[NoBreak]", 
                 TemplateBox[{",", "\",\"", 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "+", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox["1", HoldForm]}, "RowWithSeparators"], "\[NoBreak]",
                  ")"}], "Dot", "SyntaxForm" -> "."]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["v", "2"], "\[TildeTilde]", 
              TagBox[
               RowBox[{"(", "\[NoBreak]", 
                 TemplateBox[{",", "\",\"", 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "-", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], HoldForm], 
                   TagBox["1", HoldForm]}, "RowWithSeparators"], "\[NoBreak]",
                  ")"}], "Dot", "SyntaxForm" -> "."]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["v", "3"], "\[TildeTilde]", 
              TagBox[
               RowBox[{"(", "\[NoBreak]", 
                 TemplateBox[{",", "\",\"", 
                   TagBox["0.7791003844662475`", HoldForm], 
                   TagBox["0.6804238985214238`", HoldForm], 
                   TagBox["1", HoldForm]}, "RowWithSeparators"], "\[NoBreak]",
                  ")"}], "Dot", "SyntaxForm" -> "."]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Exact forms", "input" -> "Eigenvectors__Exact forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Eigenvectors__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod12$$ = 
   XMLElement[
   "pod", {"title" -> "Diagonalization", "scanner" -> "Eigen", "id" -> 
     "Diagonalization", "position" -> "1200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "JordanDecomposition[{{1/5, 4/15, -2/15}, {-1/10, 1/30, 7/30}, {1/10, \
-11/30, 13/30}}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                RowBox[{
                  TemplateBox[{
                    GridBox[{{
                    FractionBox["1", "5"], 
                    FractionBox["4", "15"], 
                    RowBox[{"-", 
                    FractionBox["2", "15"]}]}, {
                    RowBox[{"-", 
                    FractionBox["1", "10"]}], 
                    FractionBox["1", "30"], 
                    FractionBox["7", "30"]}, {
                    FractionBox["1", "10"], 
                    RowBox[{"-", 
                    FractionBox["11", "30"]}], 
                    FractionBox["13", "30"]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )], "\[LongEqual]", 
                  TagBox[
                   RowBox[{"S", ".", "J", ".", 
                    
                    TemplateBox[{"S"}, "Inverse", SyntaxForm -> 
                    SuperscriptBox]}], HoldForm]}]}, {
                StyleBox["\"where\"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}, {
                RowBox[{"S", "\[TildeTilde]", 
                  TemplateBox[{
                    GridBox[{{"0.7791003844662475`", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "-", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.7145501922331238`"}], "+", 
                    RowBox[{"0.05320415170004613`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, {"0.6804238985214238`", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.4347880507392881`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.7869428123473879`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, {"1", "1", "1"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}]}, {
                RowBox[{"J", "\[TildeTilde]", 
                  TemplateBox[{
                    GridBox[{{"0.2617546089887694`", "0", "0"}, {"0", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.2938661130307135`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], "0"}, {"0", "0", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.20245602883894864`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.2938661130307135`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
                   "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}]}, {
                RowBox[{
                  TemplateBox[{"S"}, "Inverse", SyntaxForm -> SuperscriptBox],
                   "\[TildeTilde]", 
                  TemplateBox[{
                    
                    GridBox[{{
                    "0.6621386587964182`", "0.04476630969407526`", 
                    "0.4536674493972851`"}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.3310693293982091`"}], "+", 
                    RowBox[{"0.10333977784079848`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.02238315484703763`"}], "-", 
                    RowBox[{"0.6283835204086168`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.2731662753013575`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.34705510407662504`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.3310693293982091`"}], "-", 
                    RowBox[{"0.10333977784079848`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.02238315484703763`"}], "+", 
                    RowBox[{"0.6283835204086168`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.2731662753013575`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.34705510407662504`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}}, RowSpacings -> 1, ColumnSpacings -> 1, 
                    RowAlignments -> Baseline, ColumnAlignments -> Center]}, 
                   "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Column"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod13$$ = XMLElement[
   "pod", {"title" -> "Condition number", "scanner" -> "List", "id" -> 
     "ConditionNumber", "position" -> "1300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["4.5`", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False, False, False}, True}, Typeset`aux11$$ = {
   True, False, {False, False, False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "13", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.16", "parsetiming" -> "0.47400000000000003", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP1450622g5e312654cfeid00003ghigbi2f945b8dg", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "15", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa1450722g5e312654cfeid00001640iaf0ehi2dfi08884920455003441207", "version" -> 
    "2.6", "inputstring" -> "inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 10., 
    "Date" -> {2024, 9, 22, 19, 53, 9.3365821`8.72276288508492}, "Line" -> 6, 
    "SessionID" -> 33101571439739455622}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7, 8, 9, 10, 11, 12, 13}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "inverse{{3, -2, 2}, {2, 3, -1}, {1, 3, 1}}"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{819.2, {1351.983593718463, 1356.2164062815368`}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.935987589414692*^9},ExpressionUUID->"843b1ccb-33ff-da45-9fe8-\
9018bb8e27df"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["A-level math", "Title",
 CellChangeTimes->{{3.931407174321792*^9, 
  3.931407177930338*^9}},ExpressionUUID->"3f82800e-aff7-7147-8f3b-\
0c72b943a643"],

Cell[CellGroupData[{

Cell["Year 13 - C1", "Section",
 CellChangeTimes->{{3.931407414930475*^9, 
  3.931407427130903*^9}},ExpressionUUID->"e98c8819-7aef-d64b-9d97-\
7f6cab128c23"],

Cell[CellGroupData[{

Cell["Module 4: Trigonometry", "Subsection",
 CellChangeTimes->{{3.931407451531397*^9, 3.9314074633409*^9}, {
  3.93141243522612*^9, 
  3.931412452336342*^9}},ExpressionUUID->"4b3e98ed-6b77-9c4f-a9f2-\
9b1648ab791b"],

Cell["Enter text here", "Text",
 CellChangeTimes->{{3.931412154361902*^9, 
  3.9314121727933636`*^9}},ExpressionUUID->"37d8e12f-4749-e24e-b7b5-\
7326f6810e28"],

Cell["Enter bulleted item text here.", "Item",
 CellChangeTimes->{{3.931412149769417*^9, 
  3.931412149769417*^9}},ExpressionUUID->"7cd6e70f-44e6-f949-9417-\
1ed6bafba807"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{"x", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   SqrtBox["z"]}], TraditionalForm]], "DisplayFormulaNumbered",ExpressionUUID->\
"292f817f-ac73-b045-b9bb-6b4472f66589"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", " ", "=", " ", 
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "2"]}], " ", "+", " ", 
    RowBox[{"8", "x"}], " ", "+", " ", "4"}]}], " "}], "\n", 
 RowBox[{"NSolve", "[", 
  RowBox[{"f", ",", " ", "x"}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{"f", " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.931407550976351*^9, 3.931407591591724*^9}, {
   3.931407626333452*^9, 3.9314076445363464`*^9}, {3.931408400780186*^9, 
   3.931408512024429*^9}, {3.931412011746212*^9, 3.931412062480038*^9}, 
   3.931412198789852*^9, {3.931412230488808*^9, 3.931412323129978*^9}, {
   3.931412553335655*^9, 3.931412685784553*^9}, {3.931412753685856*^9, 
   3.931412865377777*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c05d3e8c-a2ba-5949-a2a7-f1c658d46de0"],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", "x"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.931412050952461*^9, 3.931412063854587*^9}, 
   3.931412200026531*^9, 3.931412232412405*^9, 3.931412302893543*^9, 
   3.9314125207353725`*^9, {3.931412589420679*^9, 3.931412670753811*^9}, {
   3.931412807540485*^9, 3.931412867661318*^9}, 3.93148375942028*^9, 
   3.931577447373827*^9, 3.93163818408159*^9, 3.931832635250236*^9, 
   3.9325278515646706`*^9, 3.932616121413965*^9, 3.9359875809741116`*^9, 
   3.937101548434895*^9, 3.938058897543585*^9, 3.9381930163362617`*^9, 
   3.938277774735548*^9, 3.938278336059288*^9, 3.93866509268444*^9, 
   3.938804465568134*^9, 3.938836759962597*^9, 3.941078087644495*^9, 
   3.9418403158134727`*^9, 3.942022489834627*^9, 3.942605227579782*^9, 
   3.942617985149839*^9, 3.9427982890776405`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"719224d9-5ad0-4244-81a2-640e3672de61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "3.414213562373095`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.585786437626905`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.931412050952461*^9, 3.931412063854587*^9}, 
   3.931412200026531*^9, 3.931412232412405*^9, 3.931412302893543*^9, 
   3.9314125207353725`*^9, {3.931412589420679*^9, 3.931412670753811*^9}, {
   3.931412807540485*^9, 3.931412867661318*^9}, 3.93148375942028*^9, 
   3.931577447373827*^9, 3.93163818408159*^9, 3.931832635250236*^9, 
   3.9325278515646706`*^9, 3.932616121413965*^9, 3.9359875809741116`*^9, 
   3.937101548434895*^9, 3.938058897543585*^9, 3.9381930163362617`*^9, 
   3.938277774735548*^9, 3.938278336059288*^9, 3.93866509268444*^9, 
   3.938804465568134*^9, 3.938836759962597*^9, 3.941078087644495*^9, 
   3.9418403158134727`*^9, 3.942022489834627*^9, 3.942605227579782*^9, 
   3.942617985149839*^9, 3.942798289124468*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"d21f6f3e-4684-f448-b40f-2bb1795d9017"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
mhkmBbOhuWU8LvX/3zsoqi1wQCDgUv8HRzdmtg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
mhkmBbOhuWU8LvX/3zsoqi1wQCDgUv8HRzdmtg==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {-3.9999984693273554`, 
             45.99999755102044}}, "Frame" -> {{False, False}, {False, False}},
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {-3.9999984693273554`, 45.99999755102044}},
           "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
mhkmBbOhuWU8LvX/3zsoqi1wQCDgUv8HRzdmtg==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {-3.9999984693273554`, 45.99999755102044}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-3.9999984693273554`, 45.99999755102044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.931412050952461*^9, 3.931412063854587*^9}, 
   3.931412200026531*^9, 3.931412232412405*^9, 3.931412302893543*^9, 
   3.9314125207353725`*^9, {3.931412589420679*^9, 3.931412670753811*^9}, {
   3.931412807540485*^9, 3.931412867661318*^9}, 3.93148375942028*^9, 
   3.931577447373827*^9, 3.93163818408159*^9, 3.931832635250236*^9, 
   3.9325278515646706`*^9, 3.932616121413965*^9, 3.9359875809741116`*^9, 
   3.937101548434895*^9, 3.938058897543585*^9, 3.9381930163362617`*^9, 
   3.938277774735548*^9, 3.938278336059288*^9, 3.93866509268444*^9, 
   3.938804465568134*^9, 3.938836759962597*^9, 3.941078087644495*^9, 
   3.9418403158134727`*^9, 3.942022489834627*^9, 3.942605227579782*^9, 
   3.942617985149839*^9, 3.9427982895463448`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"60829b05-d414-8543-a85f-7fa9ce692e99"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Year 13 - C2", "Section",
 CellChangeTimes->{{3.931407414930475*^9, 
  3.9314074461105785`*^9}},ExpressionUUID->"4a7226d4-de2a-8842-b064-\
eaf926c35d2a"],

Cell[CellGroupData[{

Cell["Module 3: Statistics Normal Distribution", "Subsection",
 CellChangeTimes->{{3.931407451531397*^9, 3.9314074633409*^9}, {
  3.9314123673267384`*^9, 
  3.931412390390148*^9}},ExpressionUUID->"d485f1d2-7778-8242-8fea-\
c02a320cf8f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", " ", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", "-", " ", 
    RowBox[{"2", "x"}], " ", "-", " ", 
    RowBox[{"(", 
     RowBox[{"5", "/", "4.9"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"NSolve", "[", 
  RowBox[{"f", ",", " ", "x"}], "]"}]}], "Code",
 CellChangeTimes->{{3.931407550976351*^9, 3.931407591591724*^9}, {
   3.931407626333452*^9, 3.9314076445363464`*^9}, {3.931408400780186*^9, 
   3.931408512024429*^9}, {3.931412011746212*^9, 3.931412062480038*^9}, 
   3.931412198789852*^9, {3.931412230488808*^9, 3.931412323129978*^9}, {
   3.931494693913206*^9, 3.931494697599806*^9}, {3.93183261135391*^9, 
   3.931832643884021*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"411a8c7d-b7b6-9849-8513-317152c092ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.42141062443802846`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.4214106244380282`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.931483760280054*^9, 3.931494699255699*^9, 3.931577448312123*^9, 
   3.9316381850513*^9, {3.931832636407881*^9, 3.931832644994325*^9}, 
   3.93252785250195*^9, 3.932616122523063*^9, 3.9359875820416*^9, 
   3.937101549372202*^9, 3.938058898748277*^9, 3.938193017570311*^9, 
   3.938277775860317*^9, 3.938278336387367*^9, 3.938665093746687*^9, 
   3.938804466755369*^9, 3.938836760993639*^9, 3.9410780887539024`*^9, 
   3.941840316868841*^9, 3.942022490881504*^9, 3.942605228534073*^9, 
   3.942617986217886*^9, 3.942798290390093*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a4fb5bb0-49e8-c74c-9fa3-29b9d616b099"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "phi(0.4)", Typeset`newq$$ = "phi(0.4)", 
   Typeset`chosen$$ = "CDF[NormalDistribution[0, 1], 0.4]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse["phi(0.4)", 
               Defer[
                CDF[
                 NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{8.8, {3., 5.800000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{8.8, {3., 5.800000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["phi(0.4)", 
                  Defer[
                   CDF[
                    NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"CDF", "[", 
                  RowBox[{
                   RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"CDF", "[", 
                  RowBox[{
                   RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse["phi(0.4)", 
                   Defer[
                    CDF[
                    NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "phi(0.4)", 
                    Defer[
                    CDF[
                    NormalDistribution[0, 1], 0.4]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "0.4"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[6]:=",ExpressionUUID->"fb910e91-3ea5-ed4f-8d42-705b84a6c4b7"],

Cell[BoxData["0.6554217416103242`"], "Output",
 CellChangeTimes->{3.9314837650660152`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"45ea58af-6bdd-b340-b873-4461ac9375f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "1.9"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", 
     RowBox[{"-", "2.7"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.931483864909727*^9, 3.9314839998837423`*^9}, {
  3.93148431977222*^9, 3.931484321946144*^9}, {3.9318357667181053`*^9, 
  3.931835795584793*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"5ba3a521-07bc-fd4a-80ac-8f1f55729b10"],

Cell[BoxData["0.9678164663809575`"], "Output",
 CellChangeTimes->{3.9318357963506203`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"436a3a03-fd62-9647-9835-da71f43ff48f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", " ", "9"}], "]"}], ",", " ", "26"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.931484367869171*^9, 3.931484459652298*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"47180540-f3ee-074f-9224-37888d4d1563"],

Cell[BoxData["0.4120704478709426`"], "Output",
 CellChangeTimes->{{3.931484443308756*^9, 3.931484460136944*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"f9a98922-b563-7446-8cfc-2ed68b84e9c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"2", "\[Pi]"}]]], 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "2"]]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"f", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.93148527725733*^9, 3.9314853100068226`*^9}, {
  3.931485600687801*^9, 3.931485690853111*^9}, {3.9314857228455257`*^9, 
  3.931485810292425*^9}, {3.931485913908673*^9, 3.931485954858908*^9}, {
  3.931494610578575*^9, 3.931494625851477*^9}, {3.9318346899962025`*^9, 
  3.9318346922013264`*^9}},ExpressionUUID->"f8b2926f-5c2a-1d4a-9aef-\
eb9f2655adb0"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"]}]], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{{3.931485672591816*^9, 3.9314856913373756`*^9}, 
   3.9314858143227158`*^9, {3.931485916938999*^9, 3.931485945563999*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"df63be18-9261-7b4e-ac2c-aa68ab0b6964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", "9"}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "12", ",", "36"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.931484886439274*^9, 3.93148490314954*^9}, {
  3.9314849699390526`*^9, 3.9314850636832476`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"9375fa44-ad92-bb4d-9bdb-5b5e51ca57b4"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{12, 36}, {0.018223342952994617`, 
             0.04432691911100661}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {12.000000000000027`, 0.01822334295299466}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{12, 36}, {0.018223342952994617`, 
            0.04432691911100661}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {12.000000000000027`, 0.01822334295299466}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{12, 36}, {0.018223342952994617`, 
         0.04432691911100661}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {12.000000000000027`, 0.01822334295299466}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{12.000000000000027`, 0.01822334295299466},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{12, 36}, {0.018223342952994617`, 0.04432691911100661}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9314845741833344`*^9, {3.931484896697771*^9, 3.931484904664631*^9}, {
   3.9314849759917736`*^9, 3.931485064214882*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"b58c46b7-fdaf-5d4f-97c1-1f4ef4918db8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", "9"}], "]"}], ",", " ", "24.69"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"24", ",", " ", "9"}], "]"}], ",", " ", "24.48"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9314850873922825`*^9, 3.931485137789118*^9}, {
  3.931485200248461*^9, 3.9314852053464375`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"61a27ee9-5c57-b240-9b00-268302e45f9d"],

Cell[BoxData["0.009288799607174325`"], "Output",
 CellChangeTimes->{3.9314851388781624`*^9, 3.9314852060569763`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"517a0a04-3c96-a04d-8b36-ec2c9133a9b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"100", ",", "16"}], "]"}], ",", " ", "80"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.93157740295763*^9, 3.9315774434106445`*^9}, {
  3.9315775226684837`*^9, 3.9315775233203335`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"76bd3627-3400-0940-afd2-dfca3eb35c5d"],

Cell[BoxData["0.10564977366685527`"], "Output",
 CellChangeTimes->{3.931577448358988*^9, 3.9315775240243015`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6aef5863-996f-f34b-a8b4-997d2208ff0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "11.2"}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"100", ",", "16"}], "]"}], ",", " ", 
     RowBox[{"100", "+", "n"}]}], "]"}], "]"}], "-", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"100", ",", "16"}], "]"}], ",", " ", 
     RowBox[{"100", "-", "n"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9315775443560066`*^9, 3.9315775550376472`*^9}, {
  3.9315775907431927`*^9, 3.931577637958788*^9}, {3.931577731068029*^9, 
  3.931577811621311*^9}, {3.9318346751701336`*^9, 
  3.931834676842846*^9}},ExpressionUUID->"c89168fd-fde0-2a4a-acdb-\
2842c8ef6a09"],

Cell[BoxData["11.2`"], "Output",
 CellChangeTimes->{{3.9315776011113873`*^9, 3.9315776385373287`*^9}, {
  3.9315777562567673`*^9, 3.931577812043577*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"563435e7-bb63-f54b-8b04-7b61114c58db"],

Cell[BoxData["0.5160726955538539`"], "Output",
 CellChangeTimes->{{3.9315776011113873`*^9, 3.9315776385373287`*^9}, {
  3.9315777562567673`*^9, 3.9315778120591984`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"08735c3c-dc00-0c40-bfae-bcbe85c3a476"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"3.38", ",", " ", "2.04"}], "]"}], ",", " ", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9316381561029053`*^9, 3.931638253662567*^9}, {
  3.931638433220768*^9, 3.9316384354687576`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"4aaec76d-ccd9-224f-b679-a9a047a3978f"],

Cell[BoxData["0.24937095680007335`"], "Output",
 CellChangeTimes->{{3.9316381851293736`*^9, 3.9316382539711475`*^9}, 
   3.931638435879591*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"0a61f594-3046-a24c-9748-4c0166b4654d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"3.38", ",", " ", "2.04"}], "]"}], ",", " ", "6"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9316382132087383`*^9, 3.9316382626558*^9}, {
  3.931638420834305*^9, 3.931638429030075*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"5123d7ec-9025-e847-b3a9-d049e54be341"],

Cell[BoxData["0.9004838968805465`"], "Output",
 CellChangeTimes->{{3.9316382255273075`*^9, 3.93163826303141*^9}, 
   3.9316384294738617`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"bef4f2b9-54d6-7443-82e7-ebbc6160c39c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3.38", "-", "1.34"}]], "Input",
 CellChangeTimes->{{3.931638364548004*^9, 3.931638426105644*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e0608a8f-3d0e-c648-9430-a421b2279379"],

Cell[BoxData["2.04`"], "Output",
 CellChangeTimes->{{3.9316384158771973`*^9, 3.931638426470627*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"48b1ee6c-b356-6448-a9fe-1d3494be15d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5.08", ",", " ", 
       RowBox[{"0.0025", "^", "0.5"}]}], "]"}], ",", "5"}], "]"}], "^", "3"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.9316385605122967`*^9, 3.9316386204439926`*^9}, {
  3.931638808711811*^9, 3.9316389066486015`*^9}, {3.931638959667101*^9, 
  3.9316390084156837`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"917232f2-35cf-f245-9cb3-b48e0530993a"],

Cell[BoxData["0.000164560210918798`"], "Output",
 CellChangeTimes->{{3.931638591290554*^9, 3.93163862080241*^9}, {
  3.9316388207871876`*^9, 3.9316389071179047`*^9}, {3.931638964561596*^9, 
  3.9316390087912903`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"2330f572-8438-6940-a2be-8c05635ae594"]
}, Open  ]],

Cell["\<\
Quantile[dist, area] is calculating to the left of x,  in which the dist \
percentage == area size\
\>", "Text",
 CellChangeTimes->{{3.931644458277422*^9, 3.93164454193964*^9}, {
  3.931644583882593*^9, 3.9316446241177177`*^9}, {3.9316446885106106`*^9, 
  3.9316447986958294`*^9}, {3.931644963979294*^9, 3.9316450858028927`*^9}, {
  3.9316451321219864`*^9, 3.9316451363866024`*^9}, {3.931645178771366*^9, 
  3.93164517920681*^9}, {3.9316452177851086`*^9, 3.9316452377818527`*^9}, {
  3.9316453223091297`*^9, 3.9316454193525257`*^9}, {3.931645450283676*^9, 
  3.9316454831318645`*^9}, {3.931669968687599*^9, 
  3.9316700104088535`*^9}},ExpressionUUID->"c4e8f823-74d7-b34f-afd7-\
886476dc1421"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"NormalDistribution", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"quantile", "=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"dist", ",", " ", "0.25"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.93164382831908*^9, 3.9316438831362104`*^9}, {
   3.931644039266237*^9, 3.931644096919729*^9}, {3.931644243792963*^9, 
   3.9316443365290346`*^9}, {3.931644397093797*^9, 3.931644423212799*^9}, {
   3.931644638005043*^9, 3.9316446731082525`*^9}, {3.9316490836098394`*^9, 
   3.9316490843298388`*^9}, 
   3.9318346508028126`*^9},ExpressionUUID->"522c8616-a9fe-6d4c-8986-\
331e1a3010a8"],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"0", ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{{3.931643866760502*^9, 3.931643877067768*^9}, 
   3.9316440411251698`*^9, {3.9316440751952133`*^9, 3.9316440974195805`*^9}, {
   3.931644273129751*^9, 3.931644337013315*^9}, {3.931644399124523*^9, 
   3.9316444235406723`*^9}, {3.9316446400201893`*^9, 3.931644673451679*^9}, 
   3.931649084829376*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"4da79497-6300-c94d-aa43-6cb549034c57"],

Cell[BoxData[
 RowBox[{"-", "0.6744897501960818`"}]], "Output",
 CellChangeTimes->{{3.931643866760502*^9, 3.931643877067768*^9}, 
   3.9316440411251698`*^9, {3.9316440751952133`*^9, 3.9316440974195805`*^9}, {
   3.931644273129751*^9, 3.931644337013315*^9}, {3.931644399124523*^9, 
   3.9316444235406723`*^9}, {3.9316446400201893`*^9, 3.931644673451679*^9}, 
   3.931649084845024*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"f2a46130-32e5-194e-bc0d-42562e9a05c0"]
}, Open  ]],

Cell["\<\
mean=np
sd=sqrt(np(1-p))\
\>", "Text",
 CellChangeTimes->{{3.9316487893038883`*^9, 3.9316488264874477`*^9}, {
  3.9316488635346584`*^9, 
  3.9316488729850445`*^9}},ExpressionUUID->"a1b0f35f-eb9a-f64e-9887-\
45d66bf89862"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"20", ",", " ", "4"}], "]"}], ",", " ", "20.5"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"20", ",", " ", "4"}], "]"}], ",", " ", "19.5"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.931645680506954*^9, 3.9316457534615135`*^9}, {
  3.9316464184431114`*^9, 3.931646449612438*^9}, {3.931647821624031*^9, 
  3.931647822530775*^9}, {3.9316488971969566`*^9, 3.9316489828588314`*^9}, {
  3.9316490554428368`*^9, 3.9316490734006233`*^9}, {3.9316493041814156`*^9, 
  3.9316493072466946`*^9}, {3.931649478326332*^9, 
  3.931649534896715*^9}},ExpressionUUID->"37683469-154f-744c-a951-\
de350cc0bef7"],

Cell[BoxData["0.09947644966022584`"], "Output",
 CellChangeTimes->{
  3.931647827942621*^9, {3.9316488979467373`*^9, 3.9316489871603966`*^9}, 
   3.9316490588048096`*^9, 3.93164909031995*^9, 3.9316493075985985`*^9, 
   3.931649479083496*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"4574c946-d214-8844-bf49-e5734d4eca07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"200", ",", " ", 
       RowBox[{"160", "^", "0.5"}]}], "]"}], ",", " ", "200.5"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9316494180315113`*^9, 3.9316494307623367`*^9}, {
  3.9316495334577274`*^9, 3.9316495539773903`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"2db098c7-1cbc-2741-a9d1-d2d6302bc04a"],

Cell[BoxData["0.4842345274360602`"], "Output",
 CellChangeTimes->{3.9316494317393856`*^9, 3.931649555120825*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"e799acc7-3e62-e847-a330-8d0e8f7a5cae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"100", "*", "0.025", "*", "0.975"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"2.5", ",", " ", 
      RowBox[{"n", "^", "0.5"}]}], "]"}], ",", " ", "3.5"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.931657120776731*^9, 3.931657123057401*^9}, {
  3.9316571980334673`*^9, 3.931657221869125*^9}, {3.931657273354646*^9, 
  3.931657396406574*^9}, {3.931834661406351*^9, 3.9318346643461285`*^9}},
 NumberMarks->False,ExpressionUUID->"1f2ef2fb-2a00-cb4c-a947-b1ba821cd646"],

Cell[BoxData["2.4375`"], "Output",
 CellChangeTimes->{{3.931657111278944*^9, 3.931657128134321*^9}, {
  3.9316573906202145`*^9, 3.931657396928631*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"2d5d7884-ad37-c148-b071-ec88d38c7e47"],

Cell[BoxData["0.7390803048331923`"], "Output",
 CellChangeTimes->{{3.931657111278944*^9, 3.931657128134321*^9}, {
  3.9316573906202145`*^9, 3.93165739693359*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"3ec55cdb-3da8-ae4b-bedb-6ef998da3509"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"1", "-", "0.6", "-", "0.025"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{
      RowBox[{"100", " ", "p"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"100", " ", "p", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}]}], ")"}], "^", "0.5"}]}], "]"}], ",",
     " ", "40"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9316575668627663`*^9, 3.931657567738659*^9}, {
  3.931657604383545*^9, 3.931657623490595*^9}, {3.931657663938535*^9, 
  3.9316577140469284`*^9}, {3.931657760216444*^9, 3.931657760480646*^9}, {
  3.931669630101288*^9, 3.931669636588108*^9}, {3.931834666176676*^9, 
  3.931834667106226*^9}},ExpressionUUID->"f2805759-f423-f245-b9be-\
30eca8918678"],

Cell[BoxData["0.375`"], "Output",
 CellChangeTimes->{3.931669661583889*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"447bf402-fd3f-064d-ae8c-0dc9e510b178"],

Cell[BoxData["0.07211880009499753`"], "Output",
 CellChangeTimes->{3.9316696615913315`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"ed251043-03dd-6948-92d7-c381e15814b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", " ", "=", " ", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"x", "^", "2"}]}]}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"f", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9325278413384438`*^9, 3.9325280092391357`*^9}, {
  3.9325280394384594`*^9, 3.9325280684043903`*^9}, {3.9325281151488743`*^9, 
  3.932528115555025*^9}, {3.9325282513452168`*^9, 3.9325282893673973`*^9}, {
  3.9325283357782803`*^9, 3.932528380684305*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"ffdd8ba7-6a94-da43-83b0-55901b1cac23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "x"}], "+", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.9325278526581936`*^9, 3.932527934629652*^9}, {
   3.932527965796118*^9, 3.9325280038652115`*^9}, 3.9325280421252823`*^9, 
   3.9325282631859417`*^9, 3.9325282932100735`*^9, {3.932528339761532*^9, 
   3.9325283671404247`*^9}, 3.93252854448831*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"34df04b0-ac0d-7942-830a-54fe58874f28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.932616117883545*^9, 
  3.9326161737881355`*^9}},ExpressionUUID->"884a8e5b-5e58-9b41-aaf0-\
ec1e72e59427"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    GraphicsBox[
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[
           {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
            Opacity[1.], LineBox[CompressedData["
1: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
79hk
             "]]},
           Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
              Annotation[{
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1: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
79hk
                 "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{(-2) Pi, 2 Pi}, {-36.13614985689592, 
                39.28049566026931}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 Opacity[1.], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{(-2) Pi, 2 Pi}, {-36.13614985689592, 
               39.28049566026931}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>],
         ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}],
        Selectable->False]},
      Annotation[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
79hk
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{(-2) Pi, 2 Pi}, {-36.13614985689592, 
            39.28049566026931}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, 0},
     BaseStyle->{FontFamily -> "Arial"},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->All,
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}},
     PlotRange->
      NCache[{{(-2) Pi, 2 Pi}, {-36.13614985689592, 
        39.28049566026931}}, {{-6.283185307179586, 
       6.283185307179586}, {-36.13614985689592, 39.28049566026931}}],
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}], "}"}], ",", 
   RowBox[{"{", "\[Placeholder]", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.932616122804229*^9, 3.932616163493452*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"d47280b7-67ea-ce42-a2fd-f3f9aadf7620"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{807.75, 765.75},
WindowMargins->{{Automatic, 56.25}, {Automatic, 0}},
WindowStatusArea->"",
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.8 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"c7a71f3f-3948-ac42-a61b-00895376dba5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 368, 8, 31, "Input",ExpressionUUID->"f5dcb1d6-aa3f-3047-a473-d1ddea6a2732"],
Cell[951, 32, 677, 19, 48, "Output",ExpressionUUID->"53a36821-c8bb-0147-99f4-6107e6778df3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1665, 56, 800, 19, 47, "Input",ExpressionUUID->"4f3ae16d-172c-2f4c-9832-a9a1b6f22595"],
Cell[2468, 77, 301287, 4963, 336, 191665, 3165, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"8154249a-3575-8648-803b-504c18399b32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303792, 5045, 285, 6, 31, "Input",ExpressionUUID->"b88f0256-8d0c-4b4f-ba66-12079cae8986"],
Cell[304080, 5053, 252, 7, 50, "Output",ExpressionUUID->"b42ecd6b-c0b5-7148-92ea-0896ed6e2cf5"]
}, Open  ]],
Cell[304347, 5063, 722, 18, 82, "Input",ExpressionUUID->"5e9f784d-672a-e141-bb0b-7bcd03362cb1"],
Cell[CellGroupData[{
Cell[305094, 5085, 961, 21, 62, "Input",ExpressionUUID->"e1d20a06-e90b-5b4c-a93b-5125497e51b2"],
Cell[306058, 5108, 17592, 308, 139, "Output",ExpressionUUID->"30101ff4-cca6-404b-8e99-7738e20ef546"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323687, 5421, 566, 16, 31, "Input",ExpressionUUID->"7a625512-ec6e-ba43-a908-eb5ce80b0a42"],
Cell[324256, 5439, 60199, 1030, 240, "Output",ExpressionUUID->"018c7743-0fd3-bb41-bbab-e04d3581f00d"]
}, Open  ]],
Cell[384470, 6472, 153, 3, 27, "Text",ExpressionUUID->"4693c3a8-e07f-1044-be97-5fbe8ba07670"],
Cell[384626, 6477, 1799, 46, 93, "Input",ExpressionUUID->"e6936b17-e969-3d4e-98f9-0c605b1372b2"],
Cell[CellGroupData[{
Cell[386450, 6527, 1617, 43, 93, "Input",ExpressionUUID->"a34b8e4f-181b-9b4a-99bc-df93d9d94eb7"],
Cell[388070, 6572, 2031, 39, 392, "Output",ExpressionUUID->"56edc849-421a-c845-90d6-bc5579bc0c53"]
}, Closed]],
Cell[CellGroupData[{
Cell[390138, 6616, 2781, 71, 137, "Input",ExpressionUUID->"49ed4761-e414-0844-bb9b-0b447d03611f"],
Cell[392922, 6689, 2244, 43, 297, "Output",ExpressionUUID->"78f44f53-7395-a447-a307-a5c0d9bbe338"]
}, Closed]],
Cell[395181, 6735, 3474, 90, 182, "Input",ExpressionUUID->"d5772b6d-946d-7d47-a90b-f6cc1814bee0"],
Cell[CellGroupData[{
Cell[398680, 6829, 191, 3, 56, "Section",ExpressionUUID->"fe546ddc-304a-d14e-83ae-f923d883f19a"],
Cell[CellGroupData[{
Cell[398896, 6836, 3379, 77, 215, "Input",ExpressionUUID->"25c9498f-4174-e247-b16e-00529d7a28e9"],
Cell[402278, 6915, 810, 15, 47, "Output",ExpressionUUID->"f56f6041-aa13-0f43-9b21-2b0dfb7fe4ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403125, 6935, 1490, 47, 187, "Input",ExpressionUUID->"61e57f94-c5a2-ef42-b729-e0fec96fe7d0"],
Cell[404618, 6984, 10699, 268, 145, "Print",ExpressionUUID->"ff43c8a7-4880-cf4e-9138-36f984944432"],
Cell[415320, 7254, 496, 12, 59, "Output",ExpressionUUID->"33002637-4d1f-6e40-999e-9fd91f293b42"],
Cell[415819, 7268, 362, 5, 31, "Output",ExpressionUUID->"92d5710e-901b-0041-a901-75b13785dbfb"],
Cell[416184, 7275, 25268, 437, 50, "Output",ExpressionUUID->"60e3e30f-3b3d-4645-a155-4e0ffb7da1c5"],
Cell[441455, 7714, 362, 5, 31, "Output",ExpressionUUID->"26a26c17-2224-2e44-baa2-4d7cd3b9ae2e"]
}, Closed]],
Cell[CellGroupData[{
Cell[441854, 7724, 788, 25, 98, "Input",ExpressionUUID->"d2e6dcc2-125f-2247-b435-445f9d713d0a"],
Cell[442645, 7751, 24088, 591, 220, "Print",ExpressionUUID->"059cdaa0-b6d9-8244-9a24-ed26b8b57552"],
Cell[466736, 8344, 249, 5, 31, "Output",ExpressionUUID->"9af22b5c-618d-e047-b504-9939ead8889e"],
Cell[466988, 8351, 34820, 596, 57, "Output",ExpressionUUID->"225a1452-3c6a-f648-ac97-a812058ffc74"]
}, Closed]],
Cell[CellGroupData[{
Cell[501845, 8952, 953, 31, 96, "Input",ExpressionUUID->"2c93dca3-bc37-bd4a-ab83-bff6ad54b1d3"],
Cell[502801, 8985, 20789, 518, 211, "Print",ExpressionUUID->"c6321a38-c0b1-4347-83e6-3518fe5b90e7"],
Cell[523593, 9505, 369, 11, 48, "Output",ExpressionUUID->"4ddc897c-4fd0-244b-b74c-7e56793739f7"],
Cell[523965, 9518, 48909, 839, 97, "Output",ExpressionUUID->"bc462831-15f4-eb45-a9ad-a2cb9a1c2673"]
}, Closed]],
Cell[CellGroupData[{
Cell[572911, 10362, 2095, 52, 143, "Input",ExpressionUUID->"1ad251e7-0ac7-ab4f-b034-142e3383ad4d"],
Cell[575009, 10416, 38235, 889, 311, "Print",ExpressionUUID->"7a97d6c2-13f9-a146-b3de-9247e660d1f5"],
Cell[613247, 11307, 761, 14, 33, "Output",ExpressionUUID->"fc1f3307-7b0c-9043-9a81-ca281c8f9d1f"],
Cell[614011, 11323, 619, 8, 31, "Output",ExpressionUUID->"5ce86296-3b40-6c4f-a4b2-66619757c67f"]
}, Closed]],
Cell[CellGroupData[{
Cell[614667, 11336, 3972, 106, 167, "Input",ExpressionUUID->"83d302dd-a69b-ec41-911d-8dd5173dd5fd"],
Cell[618642, 11444, 2401, 48, 381, "Output",ExpressionUUID->"03eb30ac-6639-5e46-ac54-3d79eeb18336"]
}, Open  ]],
Cell[CellGroupData[{
Cell[621080, 11497, 216, 2, 32, "WolframAlphaLong",ExpressionUUID->"82a54a90-274c-534a-9e18-c3bb9beb84f6"],
Cell[621299, 11501, 112826, 2400, 2716, "Print",ExpressionUUID->"843b1ccb-33ff-da45-9fe8-9018bb8e27df"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[734174, 13907, 155, 3, 56, "Title",ExpressionUUID->"3f82800e-aff7-7147-8f3b-0c72b943a643"],
Cell[CellGroupData[{
Cell[734354, 13914, 157, 3, 56, "Section",ExpressionUUID->"e98c8819-7aef-d64b-9d97-7f6cab128c23"],
Cell[CellGroupData[{
Cell[734536, 13921, 216, 4, 27, "Subsection",ExpressionUUID->"4b3e98ed-6b77-9c4f-a9f2-9b1648ab791b"],
Cell[734755, 13927, 159, 3, 27, "Text",ExpressionUUID->"37d8e12f-4749-e24e-b7b5-7326f6810e28"],
Cell[734917, 13932, 172, 3, 22, "Item",ExpressionUUID->"7cd6e70f-44e6-f949-9417-1ed6bafba807"],
Cell[735092, 13937, 250, 7, 31, "DisplayFormulaNumbered",ExpressionUUID->"292f817f-ac73-b045-b9bb-6b4472f66589"],
Cell[CellGroupData[{
Cell[735367, 13948, 893, 20, 66, "Code",ExpressionUUID->"c05d3e8c-a2ba-5949-a2a7-f1c658d46de0"],
Cell[736263, 13970, 966, 16, 70, "Output",ExpressionUUID->"719224d9-5ad0-4244-81a2-640e3672de61"],
Cell[737232, 13988, 1092, 20, 70, "Output",ExpressionUUID->"d21f6f3e-4684-f448-b40f-2bb1795d9017"],
Cell[738327, 14010, 23860, 434, 70, "Output",ExpressionUUID->"60829b05-d414-8543-a85f-7fa9ce692e99"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[762248, 14451, 159, 3, 46, "Section",ExpressionUUID->"4a7226d4-de2a-8842-b064-eaf926c35d2a"],
Cell[CellGroupData[{
Cell[762432, 14458, 237, 4, 27, "Subsection",ExpressionUUID->"d485f1d2-7778-8242-8fea-c02a320cf8f5"],
Cell[CellGroupData[{
Cell[762694, 14466, 760, 16, 52, "Code",ExpressionUUID->"411a8c7d-b7b6-9849-8513-317152c092ae"],
Cell[763457, 14484, 875, 17, 70, "Output",ExpressionUUID->"a4fb5bb0-49e8-c74c-9fa3-29b9d616b099"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764369, 14506, 16413, 401, 55, "WolframAlphaShortInput",ExpressionUUID->"fb910e91-3ea5-ed4f-8d42-705b84a6c4b7"],
Cell[780785, 14909, 168, 2, 31, "Output",ExpressionUUID->"45ea58af-6bdd-b340-b873-4461ac9375f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780990, 14916, 630, 15, 31, "Input",ExpressionUUID->"5ba3a521-07bc-fd4a-80ac-8f1f55729b10"],
Cell[781623, 14933, 169, 2, 31, "Output",ExpressionUUID->"436a3a03-fd62-9647-9835-da71f43ff48f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[781829, 14940, 369, 9, 31, "Input",ExpressionUUID->"47180540-f3ee-074f-9224-37888d4d1563"],
Cell[782201, 14951, 191, 2, 31, "Output",ExpressionUUID->"f9a98922-b563-7446-8cfc-2ed68b84e9c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[782429, 14958, 813, 22, 71, "Input",ExpressionUUID->"f8b2926f-5c2a-1d4a-9aef-eb9f2655adb0"],
Cell[783245, 14982, 416, 10, 60, "Output",ExpressionUUID->"df63be18-9261-7b4e-ac2c-aa68ab0b6964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783698, 14997, 470, 11, 31, "Input",ExpressionUUID->"9375fa44-ad92-bb4d-9bdb-5b5e51ca57b4"],
Cell[784171, 15010, 21883, 407, 189, "Output",ExpressionUUID->"b58c46b7-fdaf-5d4f-97c1-1f4ef4918db8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[806091, 15422, 565, 14, 31, "Input",ExpressionUUID->"61a27ee9-5c57-b240-9b00-268302e45f9d"],
Cell[806659, 15438, 195, 2, 31, "Output",ExpressionUUID->"517a0a04-3c96-a04d-8b36-ec2c9133a9b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[806891, 15445, 391, 9, 31, "Input",ExpressionUUID->"76bd3627-3400-0940-afd2-dfca3eb35c5d"],
Cell[807285, 15456, 191, 2, 31, "Output",ExpressionUUID->"6aef5863-996f-f34b-a8b4-997d2208ff0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[807513, 15463, 814, 21, 47, "Input",ExpressionUUID->"c89168fd-fde0-2a4a-acdb-2842c8ef6a09"],
Cell[808330, 15486, 232, 3, 31, "Output",ExpressionUUID->"563435e7-bb63-f54b-8b04-7b61114c58db"],
Cell[808565, 15491, 248, 3, 31, "Output",ExpressionUUID->"08735c3c-dc00-0c40-bfae-bcbe85c3a476"]
}, Open  ]],
Cell[CellGroupData[{
Cell[808850, 15499, 398, 9, 31, "Input",ExpressionUUID->"4aaec76d-ccd9-224f-b679-a9a047a3978f"],
Cell[809251, 15510, 222, 3, 31, "Output",ExpressionUUID->"0a61f594-3046-a24c-9748-4c0166b4654d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[809510, 15518, 394, 9, 31, "Input",ExpressionUUID->"5123d7ec-9025-e847-b3a9-d049e54be341"],
Cell[809907, 15529, 220, 3, 31, "Output",ExpressionUUID->"bef4f2b9-54d6-7443-82e7-ebbc6160c39c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810164, 15537, 200, 3, 31, "Input",ExpressionUUID->"e0608a8f-3d0e-c648-9430-a421b2279379"],
Cell[810367, 15542, 179, 2, 31, "Output",ExpressionUUID->"48b1ee6c-b356-6448-a9fe-1d3494be15d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810583, 15549, 505, 12, 31, "Input",ExpressionUUID->"917232f2-35cf-f245-9cb3-b48e0530993a"],
Cell[811091, 15563, 296, 4, 31, "Output",ExpressionUUID->"2330f572-8438-6940-a2be-8c05635ae594"]
}, Open  ]],
Cell[811402, 15570, 702, 12, 27, "Text",ExpressionUUID->"c4e8f823-74d7-b34f-afd7-886476dc1421"],
Cell[CellGroupData[{
Cell[812129, 15586, 646, 13, 47, "Input",ExpressionUUID->"522c8616-a9fe-6d4c-8986-331e1a3010a8"],
Cell[812778, 15601, 498, 9, 31, "Output",ExpressionUUID->"4da79497-6300-c94d-aa43-6cb549034c57"],
Cell[813279, 15612, 466, 8, 31, "Output",ExpressionUUID->"f2a46130-32e5-194e-bc0d-42562e9a05c0"]
}, Open  ]],
Cell[813760, 15623, 231, 7, 45, "Text",ExpressionUUID->"a1b0f35f-eb9a-f64e-9887-45d66bf89862"],
Cell[CellGroupData[{
Cell[814016, 15634, 800, 18, 31, "Input",ExpressionUUID->"37683469-154f-744c-a951-de350cc0bef7"],
Cell[814819, 15654, 324, 6, 31, "Output",ExpressionUUID->"4574c946-d214-8844-bf49-e5734d4eca07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[815180, 15665, 466, 12, 31, "Input",ExpressionUUID->"2db098c7-1cbc-2741-a9d1-d2d6302bc04a"],
Cell[815649, 15679, 195, 3, 31, "Output",ExpressionUUID->"e799acc7-3e62-e847-a330-8d0e8f7a5cae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[815881, 15687, 639, 15, 47, "Input",ExpressionUUID->"1f2ef2fb-2a00-cb4c-a947-b1ba821cd646"],
Cell[816523, 15704, 234, 4, 31, "Output",ExpressionUUID->"2d5d7884-ad37-c148-b071-ec88d38c7e47"],
Cell[816760, 15710, 245, 4, 31, "Output",ExpressionUUID->"3ec55cdb-3da8-ae4b-bedb-6ef998da3509"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817042, 15719, 872, 22, 47, "Input",ExpressionUUID->"f2805759-f423-f245-b9be-30eca8918678"],
Cell[817917, 15743, 158, 3, 31, "Output",ExpressionUUID->"447bf402-fd3f-064d-ae8c-0dc9e510b178"],
Cell[818078, 15748, 174, 3, 31, "Output",ExpressionUUID->"ed251043-03dd-6948-92d7-c381e15814b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[818289, 15756, 629, 13, 47, "Input",ExpressionUUID->"ffdd8ba7-6a94-da43-83b0-55901b1cac23"],
Cell[818921, 15771, 451, 8, 31, "Output",ExpressionUUID->"34df04b0-ac0d-7942-830a-54fe58874f28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[819409, 15784, 154, 3, 31, "Input",ExpressionUUID->"884a8e5b-5e58-9b41-aaf0-ec1e72e59427"],
Cell[819566, 15789, 126096, 2112, 114, "Output",ExpressionUUID->"d47280b7-67ea-ce42-a2fd-f3f9aadf7620"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

